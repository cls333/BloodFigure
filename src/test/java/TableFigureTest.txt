CREATE OR REPLACE  PROCEDURE LOAN_REPORT_ANANLYZE_ITEGRATE (
    IN I_CWORKDATE1	CHARACTER(8),
    OUT O_CPROCSTATE	INTEGER,
    OUT O_CACTION	VARCHAR(512) )
  SPECIFIC "LOAN_REPORT_ANANLYZE_ITEGRATE"
  LANGUAGE SQL
  NOT DETERMINISTIC
  EXTERNAL ACTION
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
  OLD SAVEPOINT LEVEL
P1: BEGIN

    --变量声明
    DECLARE v_cTableName VARCHAR(50);               --目标表名称;--
    DECLARE v_cProcName VARCHAR(100);               --存储过程名称;--
    DECLARE v_cProcState VARCHAR(100);              --存储过程执行状态;--
    DECLARE sqlcode INTEGER DEFAULT 0;              --SQL返回代码;--
    DECLARE sqlstate CHAR(5) DEFAULT '00000';       --SQL默认返回代码'00000'
                                                    --成功执行
    DECLARE v_cAction VARCHAR(200);                 --存储过程功能描述

    DECLARE i_cWorkDate CHAR(10);                   --跑批10位日期

    DECLARE v_cWorkDate8 CHAR(8);                   --存储过程用8位的时间
    DECLARE v_cLastYLASTDay8 CHAR(8);                --8位去年末
    DECLARE v_cLastYLASTDay10 CHAR(10);              --10位去年末
    DECLARE v_cCurYLASTDay8 CHAR(8);                 --8位本年末
    DECLARE v_cMonFirstDay char(8);                  --8位本月第一天

    DECLARE v_cLYSameDay8 char(8);                  --8位上一年同一天
    DECLARE o_cTableName varchar(512);--
    DECLARE o_dProcDate timestamp;--
    --SQL代码执行影响的行数为0 处理动作：继续执行;--
    DECLARE CONTINUE HANDLER FOR sqlstate '02000'
    BEGIN
        SET v_cProcState=CHAR(sqlcode)||sqlstate||' Warning ';--
        SET o_cProcState=int(substr(v_cProcState,1,11));--
        SET o_cAction=v_cAction||'-'||v_cProcState;--
        SET o_cTableName=v_cTableName;--
        SET o_dProcDate=CURRENT TIMESTAMP ;--

    END;--

    --SQL产生的非上述异常处理 处理动作：退出;--
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        SET v_cProcState=CHAR(sqlcode)||sqlstate||' Failed ';--
        SET o_cProcState=int(substr(v_cProcState,1,11));--
        SET o_cAction=v_cAction||'-'||v_cProcState||' when handle'||v_cTableName;--
        SET o_cTableName=v_cTableName;--
        SET o_dProcDate=CURRENT TIMESTAMP;--

    END;--

    DECLARE GLOBAL TEMPORARY TABLE acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP0
    (
      PARTY_ID	CHARACTER(32),
      TIME_ID	CHARACTER(10),
      CYC	CHARACTER(6),
      CU_NM	VARCHAR(80),
      GROUPCORPFLAG	CHARACTER(6),
      LN_RISK_AMT	DECIMAL(16, 2),
      BAL_AMT	DECIMAL(16, 2),
      NORMAL_AMT	DECIMAL(16, 2),
      CHECK_AMT	DECIMAL(16, 2),
      NEXT_AMT	DECIMAL(16, 2),
      DOUBT_AMT	DECIMAL(16, 2),
      LOST_AMT	DECIMAL(16, 2),
      OVERDUR_INT	DECIMAL(16, 2),
      OVER_INTEREST	DECIMAL(16, 2),
      PROMISE_AMT	DECIMAL(16, 2),
      ACCEPT_AMT	DECIMAL(16, 2),
      GUAR_AMT	DECIMAL(16, 2),
      BANK_CAPITAL	DECIMAL(16, 2),
      OVER_MAX_DAYS	INTEGER,
      ORG_ID	CHARACTER(8)
    )ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE;    --

    DECLARE GLOBAL TEMPORARY TABLE acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP1
    (
      PARTY_ID	CHARACTER(32),
      TIME_ID	CHARACTER(10),
      CYC	CHARACTER(6),
      PROMISE_AMT	DECIMAL(16, 2)
    )ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE;   --

    DECLARE GLOBAL TEMPORARY TABLE acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP2
    (
     PARTY_ID	CHARACTER(32),
     TIME_ID	CHARACTER(10),
     CYC	CHARACTER(6),
     ACCEPT_AMT	DECIMAL(16, 2)
    )ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE; --

    DECLARE GLOBAL TEMPORARY TABLE acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP3
    (
      PARTY_ID	CHARACTER(32),
      TIME_ID	CHARACTER(10),
      CYC	CHARACTER(6),
      GUAR_AMT	DECIMAL(16, 2)
    )ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE; --

    DECLARE GLOBAL TEMPORARY TABLE acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP4
    (
      PARTY_ID	CHARACTER(32),
      TIME_ID	CHARACTER(10),
      CYC	CHARACTER(6),
      CREDITCERTPROMIS_AMT	DECIMAL(16, 2),
      CREDITCERT_AMT	DECIMAL(16, 2)
    )ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE; --

    DECLARE GLOBAL TEMPORARY TABLE TMP_DDS_KER_BGFMTBLE
    (
    	TBCADATE CHAR(8) NOT NULL ,
    	TBCAENTY CHAR(1) NOT NULL ,
    	TBCABRNO CHAR(6) NOT NULL ,
    	TBCAACID CHAR(8) NOT NULL ,
    	TBCACCYC CHAR(3) NOT NULL ,
    	TBCACDFG CHAR(1) ,
    	TBDAIBAL DECIMAL(15,2) ,
    	TBCAIBAL DECIMAL(15,2) ,
    	TBDBIBAL DECIMAL(15,2) ,
    	TBCBIBAL DECIMAL(15,2) ,
    	TBDAMAGN BIGINT ,
    	TBDAAMT  DECIMAL(15,2) ,
    	TBCAMAGN BIGINT ,
    	TBCAAMT  DECIMAL(15,2) ,
    	TBCANO10 CHAR(10) ,
    	ETL_DATE CHAR(8) NOT NULL ,
    	ETL_FLAG CHAR(1) NOT NULL
    )
    ON COMMIT PRESERVE ROWS NOT LOGGED WITH REPLACE;--

--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,1);--
    --赋值
    SET v_cProcState=CHAR(0)||'00000 Success';                     --设置SQL处理状态初始值
    SET v_cAction='贷款客户、机构、产品等分析';                    --设置存储过程功能描述值
    SET v_cTableName='';                                           --设置目标表
    SET v_cProcName='Loan_Report_Ananlyze_Itegrate';          --设置存储过程名称

    SET i_cWorkDate=substr(i_cWorkDate1,1,4)||'-'||substr(i_cWorkDate1,5,2)||'-'||substr(i_cWorkDate1,7,2);--
    SET v_cWorkDate8=i_cWorkDate1;--
    SET v_cLastYLASTDay8=trim(char(int(substr(i_cWorkDate,1,4)) - 1))||'1231';--
    SET v_cLastYLASTDay10=trim(char(int(substr(i_cWorkDate,1,4)) - 1))||'-'||'12-31';--
    SET v_cMonFirstDay=substr(i_cWorkDate1,1,4)||substr(i_cWorkDate1,5,2)||'01';--

    SET v_cLYSameDay8=trim(char(int(substr(v_cWorkDate8,1,4)) - 1))||substr(v_cWorkDate8,5,2)||(case when month(i_cWorkDate) != 2 then substr(v_cWorkDate8,7,2) when month(i_cWorkDate) = 2 then trim(char(days(trim(char(int(substr(v_cWorkDate8,1,4)) - 1))||'-03-01') - days(trim(char(int(substr(v_cWorkDate8,1,4)) - 1))||'-02-01'))) end);--

    SET v_cCurYLASTDay8=substr(i_cWorkDate1,1,4)||'1231';--

    --处理主过程开始
    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'3.2');--
    commit;--

    INSERT INTO SESSION.TMP_DDS_KER_BGFMTBLE
	  (
    	TBCADATE ,
    	TBCAENTY ,
    	TBCABRNO ,
    	TBCAACID ,
    	TBCACCYC ,
    	TBCACDFG ,
    	TBDAIBAL ,
    	TBCAIBAL ,
    	TBDBIBAL ,
    	TBCBIBAL ,
    	TBDAMAGN ,
    	TBDAAMT  ,
    	TBCAMAGN ,
    	TBCAAMT  ,
    	TBCANO10 ,
    	ETL_DATE ,
    	ETL_FLAG
    )
    SELECT TBCADATE ,
    	     TBCAENTY ,
    	     TBCABRNO ,
    	     TBCAACID ,
    	     TBCACCYC ,
    	     TBCACDFG ,
    	     TBDAIBAL ,
    	     TBCAIBAL ,
    	     TBDBIBAL ,
    	     TBCBIBAL ,
    	     TBDAMAGN ,
    	     TBDAAMT  ,
    	     TBCAMAGN ,
    	     TBCAAMT  ,
    	     TBCANO10 ,
    	     ETL_DATE ,
    	     ETL_FLAG
    FROM(SELECT t.*,
                ROW_NUMBER()OVER(PARTITION BY TBCADATE,TBCAENTY,TBCABRNO,TBCAACID,TBCACCYC ORDER BY ETL_DATE DESC) AS ROW_NO
         FROM (SELECT *
               FROM DDS_KER_BGFMTBLE
               WHERE TBCADATE = I_CWORKDATE1
               UNION ALL
               SELECT *
               FROM DDS_KER_BGFMTBLE_HIS
               WHERE TBCADATE = I_CWORKDATE1
              )t
        ) A
    WHERE A.ROW_NO = 1;--

    --(2)、客户层贷款信息(报表九、十)
    SET v_cAction='DW_LOANCUST_ANA_INTEGRATE';--
    delete from DW_LOANCUST_ANA_INTEGRATE where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'4');--
    commit;--

    insert into DW_LOANCUST_ANA_INTEGRATE
    (
      PARTY_ID                            --客户号
      ,TIME_ID                            --时间
      ,CU_NM                              --客户名称
      ,CU_FL                              --企业/个人标志
      ,ORG_ID                             --机构
      ,CYC                                --币种
      ,AC_ID                              --贷款科目
      ,PRDT_ID                            --贷款种类即贷款产品（贷款 押汇 垫款 透支)
      ,TERM_ID                            --期限段
      ,TERM_CODE                          --期限段码(未转码)
      ,RATE                               --贷款利率
      ,TP_4                               --四级分类
      ,TP_5                               --五级分类
      ,ASS_TP                             --担保方式
      ,GROUPCORPFLAG                      --集团客户标志(信贷-无)
      ,OVER_TYPE                          --逾期时间分段
      ,OVER_TERM_CODE                     --逾期时间分段码(未转码)
      ,IND_TYPE                           --行业
      ,CORP_SIZE                          --企业规模
      ,CREDIT_LVL                         --信用等级
      ,CREDITCUST_CLASS                   --客户鉴定分类(信贷-无)
      ,CUSCLASS2                          --客户个性化分类(信贷-无)
      ,BG_DT                              --贷款发放日期
      ,ED_DT                              --贷款到期日期
      ,GIVE_AMT                           --贷款发放金额
      ,YEAR_RETURN_AMT                    --本年收回本金
      ,BAL_AMT                            --余额
      ,DAILY_AMT                          --日均余额
      ,ACCT_CNT                           --账号数
      ,CUST_CNT                           --客户数
      ,IN_DUE_INT                         --表内应收利息
      ,OUT_DUE_INT                        --表外应收利息
      ,OVERDUR_INT                        --逾期贷款本金
    )
    select
      PARTY_ID
      ,TIME_ID
      ,CU_NM
      ,CU_FL
      ,ORG_ID
      ,CYC
      ,AC_ID
      ,PRDT_ID
      ,TERM_ID
      ,TERM_CODE
      ,RATE
      ,TP_4
      ,TP_5
      ,ASS_TP
      ,GROUPCORPFLAG
      ,OVER_TYPE
      ,OVER_TERM_CODE
      ,IND_TYPE
      ,CORP_SIZE
      ,CREDIT_LVL
      ,CREDITCUST_CLASS
      ,CUSCLASS2
      ,BG_DT
      ,ED_DT
      ,sum(coalesce(GIVE_AMT       ,0))
      ,sum(coalesce(YEAR_RETURN_AMT,0))
      ,sum(coalesce(BAL_AMT        ,0))
      ,sum(coalesce(DAILY_AMT      ,0))
      ,count(distinct ACCT_ID)
      ,0
      ,sum(coalesce(IN_DUE_INT     ,0))
      ,sum(coalesce(OUT_DUE_INT    ,0))
      ,sum(coalesce(OVERDUR_INT    ,0))
    from DW_LOANACCT_ANA_INTEGRATE A
    where A.TIME_ID=i_cWorkDate
    group by PARTY_ID
      ,TIME_ID
      ,CU_NM
      ,CU_FL
      ,ORG_ID
      ,CYC
      ,AC_ID
      ,PRDT_ID
      ,TERM_ID
      ,TERM_CODE
      ,RATE
      ,TP_4
      ,TP_5
      ,ASS_TP
      ,GROUPCORPFLAG
      ,OVER_TYPE
      ,OVER_TERM_CODE
      ,IND_TYPE
      ,CORP_SIZE
      ,CREDIT_LVL
      ,CREDITCUST_CLASS
      ,CUSCLASS2
      ,BG_DT
      ,ED_DT
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'5');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,3);--
--    --(3)、机构层贷款风险信息(报表一)
--    delete from DW_LOAN_ORG_RISK_ANA where TIME_ID=i_cWorkDate;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'6');--
--    commit;--
--
--    insert into DW_LOAN_ORG_RISK_ANA
--    (
--      ORG_ID             --机构
--      ,TIME_ID            --时间
--      ,CYC                --贷款币种
--      ,PRDT_ID            --贷款种类
--      ,TERM_CODE          --期限段
--      ,TP_5               --五级分类
--      ,TP_4               --四级分类
--      ,ASS_TP             --担保方式
--      ,BAL_AMT            --余额
--      ,DAILY_AMT          --日均余额
--    )
--    select
--      ORG_ID
--      ,TIME_ID
--      ,CYC
--      ,PRDT_ID
--      ,TERM_CODE
--      ,TP_5
--      ,TP_4
--      ,ASS_TP
--      ,sum(coalesce(BAL_AMT  ,0))
--      ,sum(coalesce(DAILY_AMT,0))
--    from DW_LOANCUST_ANA_INTEGRATE A
--    where TIME_ID=i_cWorkDate
--    group by ORG_ID
--      ,TIME_ID
--      ,CYC
--      ,PRDT_ID
--      ,TERM_CODE
--      ,TP_5
--      ,TP_4
--      ,ASS_TP
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'7');--
--    commit;--
--
--    --更新环比数据
--    merge into DW_LOAN_ORG_RISK_ANA A
--    using
--    (
--      select
--         B.ORG_ID     as ORG_ID
--        ,B.TIME_ID    as TIME_ID
--        ,B.CYC        as CYC
--        ,B.PRDT_ID    as PRDT_ID
--        ,B.TERM_CODE  as TERM_CODE
--        ,B.TP_5       as TP_5
--        ,B.TP_4       as TP_4
--        ,B.ASS_TP     as ASS_TP
--        ,B.BAL_AMT    as LM_BAL_AMT
--        ,C.BAL_AMT    as LYD_BAL_AMT
--        ,D.BAL_AMT    as LY_BAL_AMT
--        ,B.DAILY_AMT  as LM_DAILY_AMT
--        ,C.DAILY_AMT  as LYD_DAILY_AMT
--        ,D.DAILY_AMT  as LY_DAILY_AMT
--      from DW_LOAN_ORG_RISK_ANA B
--        left outer join DW_LOAN_ORG_RISK_ANA C
--          on B.ORG_ID         = C.ORG_ID
--            and B.CYC         = C.CYC
--            and B.PRDT_ID     = C.PRDT_ID
--            and B.TERM_CODE   = C.TERM_CODE
--            and B.TP_5        = C.TP_5
--            and B.TP_4        = C.TP_4
--            and B.ASS_TP      = C.ASS_TP
--            and C .TIME_ID = date(i_cWorkDate) - 1 years
--        left outer join DW_LOAN_ORG_RISK_ANA D
--          on B.ORG_ID         = D.ORG_ID
--            and B.CYC         = D.CYC
--            and B.PRDT_ID     = D.PRDT_ID
--            and B.TERM_CODE   = D.TERM_CODE
--            and B.TP_5        = D.TP_5
--            and B.TP_4        = D.TP_4
--            and B.ASS_TP      = D.ASS_TP
--            and D .TIME_ID = date(v_cLastYLASTDay10)
--      where B.TIME_ID = date(i_cWorkDate) - int(substr(i_cWorkDate,9,2)) days
--    ) E
--    on A.ORG_ID         = E.ORG_ID
--      and A.CYC         = E.CYC
--      and A.PRDT_ID     = E.PRDT_ID
--      and A.TERM_CODE   = E.TERM_CODE
--      and A.TP_5        = E.TP_5
--      and A.TP_4        = E.TP_4
--      and A.ASS_TP      = E.ASS_TP
--      and A .TIME_ID = date(i_cWorkDate)
--    when matched then
--    update set
--       LM_BAL_AMT   = coalesce(E.LM_BAL_AMT   ,0)
--      ,LYD_BAL_AMT  = coalesce(E.LYD_BAL_AMT  ,0)
--      ,LY_BAL_AMT   = coalesce(E.LY_BAL_AMT   ,0)
--      ,LM_DAILY_AMT = coalesce(E.LM_DAILY_AMT ,0)
--      ,LYD_DAILY_AMT= coalesce(E.LYD_DAILY_AMT,0)
--      ,LY_DAILY_AMT = coalesce(E.LY_DAILY_AMT ,0)
--    when not matched then
--    insert values
--    (
--      ORG_ID
--      ,i_cWorkDate
--      ,CYC
--      ,PRDT_ID
--      ,TERM_CODE
--      ,TP_5
--      ,TP_4
--      ,ASS_TP
--      ,0
--      ,0
--      ,coalesce(LM_BAL_AMT   ,0)
--      ,coalesce(LYD_BAL_AMT  ,0)
--      ,coalesce(LY_BAL_AMT   ,0)
--      ,coalesce(LM_DAILY_AMT ,0)
--      ,coalesce(LYD_DAILY_AMT,0)
--      ,coalesce(LY_DAILY_AMT ,0)
--    )
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'8');--
--    commit;--

    --(4)、贷款报表客户层风险数据汇总(报表二、三、四)--数据会有有漏洞(注意该表的币种及关联，总帐我只按照所有者权益科目汇总，币种未折)
    --(4.1)、贷款数据
    SET v_cAction='DW_LOAN_CUST_RISK_ANA_TMP0';--
    delete from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP0 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'9');--
    commit;--

    insert into SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP0
    (
      PARTY_ID                 --客户号
      ,TIME_ID                  --时间
      ,CYC                      --币种
      ,CU_NM                    --客户名称
      ,GROUPCORPFLAG            --集团客户标志
      ,LN_RISK_AMT              --贷款风险准备金
      ,BAL_AMT                  --贷款余额
      ,NORMAL_AMT               --正常贷款余额
      ,CHECK_AMT                --关注贷款余额
      ,NEXT_AMT                 --次级贷款余额
      ,DOUBT_AMT                --可疑贷款余额
      ,LOST_AMT                 --损失贷款余额
      ,OVERDUR_INT				--逾期贷款本金
      ,OVER_INTEREST            --逾期贷款利息
      ,PROMISE_AMT              --保证金额
      ,ACCEPT_AMT               --承兑金额
      ,GUAR_AMT                 --保函金额
      ,BANK_CAPITAL             --银行资本额
      ,OVER_MAX_DAYS			--逾期最长时间 add by chaibin on 20120911
	  ,org_id					--机构号 add by chaibin on 20120914
    )
    select
      PARTY_ID
      ,TIME_ID
      ,CYC
      ,CU_NM
      ,GROUPCORPFLAG
      ,sum(
         case
            when TP_5='D41001' then 0
            when TP_5='D41002' then coalesce(BAL_AMT,0)*0.02
            when TP_5='D41003' then coalesce(BAL_AMT,0)*0.25
            when TP_5='D41004' then coalesce(BAL_AMT,0)*0.50
            else coalesce(BAL_AMT,0)
            --when TP_5='D41005' then coalesce(BAL_AMT,0)*1
         end
       )
      ,sum(coalesce(BAL_AMT,0))
      ,sum(case when TP_5='D41001' then coalesce(BAL_AMT,0) else 0 end)
      ,sum(case when TP_5='D41002' then coalesce(BAL_AMT,0) else 0 end)
      ,sum(case when TP_5='D41003' then coalesce(BAL_AMT,0) else 0 end)
      ,sum(case when TP_5='D41004' then coalesce(BAL_AMT,0) else 0 end)
      ,sum(case when TP_5='D41005' then coalesce(BAL_AMT,0) else 0 end)
      ,sum(coalesce(OVERDUR_INT,0))
      --20130413 修改逾期利息口径，加入表内
      --,sum(coalesce(OUT_DUE_INT,0))
      ,sum(coalesce(OUT_DUE_INT,0)+coalesce(IN_DUE_INT,0))
      ,0
      ,0
      ,0
      ,0
      ,max(case when TP_4 <>'D40001' AND BAL_AMT>0
		THEN days(date(i_cWorkDate))-days(date(substr(ED_DT,1,4)||'-'||substr(ED_DT,5,2)||'-'||substr(ED_DT,7,2)))
		ELSE 0 END)	-- add by chaibin on 20120911
	 ,b.lvl1_no		-- add by chaibin on 20120914
    from DW_LOANACCT_ANA_INTEGRATE A,dim_org b
    where A.TIME_ID=i_cWorkDate
	and a.org_id=b.lvl0_NO
    group by PARTY_ID
      ,TIME_ID
      ,CYC
      ,CU_NM
      ,GROUPCORPFLAG
      ,0
	  ,b.lvl1_no
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'10');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,4);--
    --(4.2)、客户银行承兑保证金数据
    SET v_cAction='DW_LOAN_CUST_RISK_ANA_TMP1';--
    delete from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP1 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'11');--
    commit;--

    ------insert into DW_LOAN_CUST_RISK_ANA_TMP1
    ------(
    ------  PARTY_ID
    ------  ,TIME_ID
    ------  ,CYC
    ------  ,PROMISE_AMT
    ------)
    ------select
    ------  C.PARTY_ID
    ------  ,i_cWorkDate
    ------  ,C.CYC
    ------  ,sum(coalesce(C.PROMISE_AMT,0))
    ------from
    ------  (
    ------    select
    ------      distinct B.PARTY_ID as PARTY_ID
    ------      ,A.CDAACCYC  as CYC
    ------      ,A.CDAHAC15 as CDAHAC15
    ------      ,A.CDADAMNT as PROMISE_AMT
    ------    from DDS_KER_BLFMDLCD A
    ------      left outer join DW_LOAN_CTRT B
    ------        on A.CDADCONO=B.ACO_NO
    ------    where A.CDAAACBS='3'
    ------  ) C
    ------group by C.PARTY_ID
    ------  ,i_cWorkDate
    ------  ,C.CYC
    ------;--

    insert into SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP1
    (
      PARTY_ID
      ,TIME_ID
      ,CYC
      ,PROMISE_AMT
    )
    select
       PARTY_ID
      ,TIME_ID
      ,CYC
      ,sum(coalesce(PROMISE_AMT,0))
    from
    (
      select
        B.PARTY_ID                                              as PARTY_ID
        ,i_cWorkDate                                            as TIME_ID
        ,A.CDAACCYC                                             as CYC
        ,sum(coalesce(CDABAMNT,0) * coalesce(CDANRTIO,0) / 100) as PROMISE_AMT	--汇票金额 * 保证金比率 /100
      from DDS_KER_BLFMDLCD A			--  承兑协议汇票登记文件
        left outer join V_DW_LOAN_CTRT B	-- 贷款合同信息视图
          on A.CDADCONO=B.ACO_NO
      where A.CDAAACBS='3'		-- 承兑汇票状态 1-审批、2-作废、3-签发、4-注销、5-全部扣款、6-垫款
      group by B.PARTY_ID
        ,i_cWorkDate
        ,A.CDAACCYC
      union all
      select
        C.PARTY_ID                                             as PARTY_ID	 -- 客户号
        ,i_cWorkDate                                           as TIME_ID
        ,A.AGCYCCYC                                            as CYC
        ,sum(coalesce(A.PCAMAMT,0))                            as PROMISE_AMT		-- 抵质押金额
      from DDS_KER_BUFMIIDI A					-- BU-客户担保物品信息表
        left outer join DDS_KER_BQFMARII B		-- BQ-担保关系文件
          on A.AGBHU1AB=B.ASBHQ1BH		-- NDS_KER_BUFMIIDI.担保物品编号=NDS_KER_BQFMARII.担保编号
      	  and B.ASSTU1DT='1'			-- 担保状态    1-正常,2-解除
            and B.RCSTRS1B!='9'		-- 记录状态   ' '-正常、9-删除
        left outer join V_DW_LOAN_CTRT C		-- 贷款合同信息视图
          on B.ASAHQ1BH=C.ACO_NO		-- 合同号
inner join DDS_KER_BLFMDLCD D
       on B.ASAHQ1BH=D.CDADCONO and D.CDANRTIO = 0
      where A.RCSTRS1B!='9'
        and A.YNZHBOOL!='1'
        and A.PCSTU1ST!='3'
--      and exists (select 'X' from DDS_KER_BLFMDLCD D		--  承兑协议汇票登记文件
--					where B.ASAHQ1BH=D.CDADCONO and D.CDANRTIO=0)
      group by C.PARTY_ID
        ,i_cWorkDate
        ,A.AGCYCCYC
    ) A
    group by PARTY_ID
      ,TIME_ID
      ,CYC
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'12');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,5);--
    --(4.3)、客户银行承兑汇票金额数据
    SET v_cAction='DW_LOAN_CUST_RISK_ANA_TMP2';--
    delete from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP2 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'13');--
    commit;--

    insert into SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP2
    (
      PARTY_ID
      ,TIME_ID
      ,CYC
      ,ACCEPT_AMT
    )
    select
      B.PARTY_ID		-- 客户号
      ,i_cWorkDate
      ,A.CDAACCYC
      ,sum(coalesce(A.CDABAMNT,0))		-- 汇票金额
    from DDS_KER_BLFMDLCD A				--  承兑协议汇票登记文件
      left outer join DW_LOAN_CTRT B	-- 贷款合同信息表
        on A.CDADCONO=B.ACO_NO		-- 合同号
    where A.CDAAACBS='3'		-- 承兑汇票状态 1-审批、2-作废、3-签发、4-注销、5-全部扣款、6-垫款
    group by B.PARTY_ID
      ,i_cWorkDate
      ,A.CDAACCYC
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'14');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,6);--
    --(4.4)、客户保函金额数据(是否需要调整到日跑该数据)
    SET v_cAction='DW_LOAN_CUST_RISK_ANA_TMP3';--
    delete from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP3 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'15');--
    commit;--

    insert into SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP3
    (
      PARTY_ID
      ,TIME_ID
      ,CYC
      ,GUAR_AMT
    )
    select
      B.PARTY_ID
      ,i_cWorkDate
      ,A.STAACCYC
      ,sum(coalesce(A.STAABLNC,0))
    from DDS_KER_BLFMMASTA A
      left outer join V_DW_LOAN_CTRT B
        on A.STAACONO=B.ACO_NO		-- 贷款合同号
    --where
    group by B.PARTY_ID
      ,i_cWorkDate
      ,A.STAACCYC
    ;--

    --信用证保证金
    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'15');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,7);--
    SET v_cAction='DW_LOAN_CUST_RISK_ANA_TMP4';--

    delete from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP4 where TIME_ID=i_cWorkDate;--

    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'15');--
    commit;--

    insert into SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP4
    (
       PARTY_ID
      ,TIME_ID
      ,CYC
      ,CREDITCERTPROMIS_AMT
      ,CREDITCERT_AMT
    )
    select
      PARTY_ID
      ,TIME_ID
      ,CYC
      ,sum(coalesce(CREDITCERTPROMIS_AMT,0))
      ,sum(coalesce(CREDITCERT_AMT      ,0))
    from
    (
      select
        C.PARTY_ID                             as PARTY_ID
        ,i_cWorkDate                           as TIME_ID
        ,A.LCCURSIGN                           as CYC
        ,0                                     as CREDITCERTPROMIS_AMT
        ,sum(coalesce(A.LCNOTPAYAMT,0))        as CREDITCERT_AMT
      from NDS_INT_IM_LCISSUEINFO A			-- 开证业务资料表
        left outer join NDS_INT_PA_CORP B               -- 客户信息
          on A.APPNO=B.CORPNO
        left outer join (select ROW_NUMBER() OVER(PARTITION BY CS_NO ORDER BY PARTY_ID ASC) as SEQ,CS_NO,PARTY_ID
							from DW_LOAN_CTRT) C	-- 贷款合同信息表
          on B.MAINCORPNO=C.CS_NO
      	  and C.SEQ=1
      where LCNOTPAYAMT>0
        and C.PARTY_ID IS NOT NULL
        and ISCLOSE='N'
      group by  C.PARTY_ID
        ,i_cWorkDate
        ,A.LCCURSIGN
        ,0
      union all
      select
        PARTY_ID                              as PARTY_ID
        ,i_cWorkDate                          as TIME_ID
        ,CYC                                  as CYC
        ,sum(coalesce(BAL,0))                 as CREDITCERTPROMIS_AMT
        ,0                                    as CREDITCERT_AMT
      from DW_DEP_ACCT
      where AC_ID in ('251102','251103','251104','251105','251132','251133','251134','251135','251101','251131')
        and BAL>0
      group by PARTY_ID
        ,i_cWorkDate
        ,CYC
        ,0
    ) A
    group by PARTY_ID
      ,TIME_ID
      ,CYC
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'16');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,8);--
    --(4.5)、生成最终数据
    SET v_cAction='DW_LOAN_CUST_RISK_ANA';--
    delete from DW_LOAN_CUST_RISK_ANA where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'17');--
    commit;--

    insert into DW_LOAN_CUST_RISK_ANA
    (
       PARTY_ID                 --客户号
      ,TIME_ID                  --时间
      ,CYC
      ,CU_NM                    --客户名称
      ,GROUPCORPFLAG            --集团客户标志
      ,LN_RISK_AMT              --贷款风险准备金
      ,BAL_AMT                  --贷款余额
      ,NORMAL_AMT               --正常贷款余额
      ,CHECK_AMT                --关注贷款余额
      ,NEXT_AMT                 --次级贷款余额
      ,DOUBT_AMT                --可疑贷款余额
      ,LOST_AMT                 --损失贷款余额
      ,OVERDUR_INT
      ,OVER_INTEREST            --逾期贷款利息
      ,PROMISE_AMT              --保证金额
      ,ACCEPT_AMT               --承兑金额
      ,GUAR_AMT                 --保函金额
      ,BANK_CAPITAL             --银行资本额
      ,OVER_MAX_DAYS		    --逾期最长时间 add by chaibin on 20120911
	  ,org_id					--机构号       add by chaibin on 20120914
    )
    select
       A.PARTY_ID
      ,A.TIME_ID
      ,A.CYC
      ,A.CU_NM
      ,A.GROUPCORPFLAG
      ,A.LN_RISK_AMT
      ,A.BAL_AMT
      ,A.NORMAL_AMT
      ,A.CHECK_AMT
      ,A.NEXT_AMT
      ,A.DOUBT_AMT
      ,A.LOST_AMT
      ,A.OVERDUR_INT
      ,A.OVER_INTEREST
      ,0 --B.PROMISE_AMT
      ,0 --C.ACCEPT_AMT
      ,0 --D.GUAR_AMT
      ,0
	  ,OVER_MAX_DAYS
	  ,org_id
    from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP0 A

--      left outer join SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP1 B
--        on A.PARTY_ID=B.PARTY_ID
--          and A.TIME_ID=B.TIME_ID
--          and A.CYC=B.CYC
--      left outer join SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP2 C
--        on A.PARTY_ID=C.PARTY_ID
--          and A.TIME_ID=C.TIME_ID
--          and A.CYC=C.CYC
--      left outer join SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP3 D
--        on A.PARTY_ID=D.PARTY_ID
--          and A.TIME_ID=D.TIME_ID
--          and A.CYC=D.CYC

    where A.TIME_ID=i_cWorkDate
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.1');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,9);--
    SET v_cAction='merge into DW_LOAN_CUST_RISK_ANA';--
    merge into DW_LOAN_CUST_RISK_ANA A
    using
    (
      select
         PARTY_ID
        ,TIME_ID
        ,CYC
        ,PROMISE_AMT
      from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP1
      where TIME_ID=i_cWorkDate
    ) B
    on A.PARTY_ID   = B.PARTY_ID
      and A.TIME_ID = B.TIME_ID
      and A.CYC     = B.CYC
    when matched then
    update set
      PROMISE_AMT=coalesce(B.PROMISE_AMT,0)
    when not matched then
    insert values
    (
       B.PARTY_ID
      ,B.TIME_ID
      ,B.CYC
      ,''
      ,''
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,coalesce(B.PROMISE_AMT,0)
      ,0
      ,0
      ,0
	  ,0
	  ,''
    )
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.2');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,10);--
    merge into DW_LOAN_CUST_RISK_ANA A
    using
    (
      select
         PARTY_ID
        ,TIME_ID
        ,CYC
        ,ACCEPT_AMT
      from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP2
      where TIME_ID=i_cWorkDate
    ) B
    on A.PARTY_ID   = B.PARTY_ID
      and A.TIME_ID = B.TIME_ID
      and A.CYC     = B.CYC
    when matched then
    update set
      ACCEPT_AMT=coalesce(B.ACCEPT_AMT,0)
    when not matched then
    insert values
    (
       B.PARTY_ID
      ,B.TIME_ID
      ,B.CYC
      ,''
      ,''
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,coalesce(B.ACCEPT_AMT,0)
      ,0
      ,0
	  ,0
	  ,''
    )
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.3');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,11);--
    merge into DW_LOAN_CUST_RISK_ANA A
    using
    (
      select
         PARTY_ID
        ,TIME_ID
        ,CYC
        ,GUAR_AMT
      from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP3
      where TIME_ID=i_cWorkDate
    ) B
    on A.PARTY_ID   = B.PARTY_ID
      and A.TIME_ID = B.TIME_ID
      and A.CYC     = B.CYC
    when matched then
    update set
      GUAR_AMT=coalesce(B.GUAR_AMT,0)
    when not matched then
    insert values
    (
       B.PARTY_ID
      ,B.TIME_ID
      ,B.CYC
      ,''
      ,''
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,coalesce(B.GUAR_AMT,0)
      ,0
	  ,0
	  ,''
    )
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.3');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,12);--
    merge into DW_LOAN_CUST_RISK_ANA A
    using
    (
      select
         PARTY_ID
        ,TIME_ID
        ,CYC
        ,CREDITCERTPROMIS_AMT
        ,CREDITCERT_AMT
      from SESSION.acid__TIME_ID__TMP_DW_LOAN_CUST_RISK_ANA_TMP4
      where TIME_ID=i_cWorkDate
    ) B
    on A.PARTY_ID   = B.PARTY_ID
      and A.TIME_ID = B.TIME_ID
      and A.CYC     = B.CYC
    when matched then
    update set
      PROMISE_AMT=coalesce(A.PROMISE_AMT,0) + coalesce(B.CREDITCERTPROMIS_AMT,0)
      ,GUAR_AMT=coalesce(A.GUAR_AMT,0) + coalesce(B.CREDITCERT_AMT,0)
    when not matched then
    insert values
    (
       B.PARTY_ID
      ,B.TIME_ID
      ,B.CYC
      ,''
      ,''
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
      ,coalesce(B.CREDITCERTPROMIS_AMT,0)
      ,0
      ,coalesce(B.CREDITCERT_AMT,0)
      ,0
	  ,0
	  ,''
    )
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.4');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,13);--
    SET v_cAction='update into DW_LOAN_CUST_RISK_ANA';--
DECLARE CAPITAL1 DECIMAL(15,2);

      SELECT
         ( sum(coalesce(TBCBIBAL,0) - coalesce(TBDBIBAL,0)) )  INTO  CAPITAL1
       from SESSION.TMP_DDS_KER_BGFMTBLE A
         left outer join NDS_KER_BGFMGACC B
           on A.TBCAACID=B.FGCAACID
       where A.TBCADATE=v_cWorkDate8
         and B.FGCAATKD='4'  ;

    UPDATE DW_LOAN_CUST_RISK_ANA SET BANK_CAPITAL = CAPITAL1 WHERE time_id=i_cWorkDate ;

--    update DW_LOAN_CUST_RISK_ANA A
--    set BANK_CAPITAL =
--      --未按照币种进行统计，统计的是所有者权益科目
--      (select
--         sum(coalesce(TBCBIBAL,0) - coalesce(TBDBIBAL,0))
--       from SESSION.TMP_DDS_KER_BGFMTBLE A						-- 科目当日余额文件
--         left outer join NDS_KER_BGFMGACC B		-- 总账科目总表
--           on A.TBCAACID=B.FGCAACID
--       where A.TBCADATE=v_cWorkDate8
--         and B.FGCAATKD='4'
--      )
--    where time_id=i_cWorkDate
--    ;



    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.5');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,14);--

--    update DW_LOAN_CUST_RISK_ANA A
--    set GROUPCORPFLAG='T88002'
--    where exists (select 'X' from GROUPCUST_RELATION B where A.PARTY_ID=B.PARTY_ID)
--      and TIME_ID=i_cWorkDate
--    ;

MERGE INTO DW_LOAN_CUST_RISK_ANA A
USING GROUPCUST_RELATION B
ON A.PARTY_ID=B.PARTY_ID
WHEN MATCHED AND A.TIME_ID=i_cWorkDate
THEN UPDATE SET GROUPCORPFLAG='T88002' ;

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.6.1');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,15);--
    update DW_LOAN_CUST_RISK_ANA A
    set GROUPCORPFLAG='T88000'
    where GROUPCORPFLAG is null
      and TIME_ID=i_cWorkDate
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.6.2');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,16);--
    SET v_cAction='insert into DW_LOAN_CUST_RISK_ANA';--

    insert into DW_LOAN_CUST_RISK_ANA
    (
       PARTY_ID                 --客户号
      ,TIME_ID                  --时间
      ,CYC
      ,CU_NM                    --客户名称
      ,GROUPCORPFLAG            --集团客户标志
      ,LN_RISK_AMT              --贷款风险准备金
      ,BAL_AMT                  --贷款余额
      ,NORMAL_AMT               --正常贷款余额
      ,CHECK_AMT                --关注贷款余额
      ,NEXT_AMT                 --次级贷款余额
      ,DOUBT_AMT                --可疑贷款余额
      ,LOST_AMT                 --损失贷款余额
      ,OVERDUR_INT
      ,OVER_INTEREST            --逾期贷款利息
      ,PROMISE_AMT              --保证金额
      ,ACCEPT_AMT               --承兑金额
      ,GUAR_AMT                 --保函金额
      ,BANK_CAPITAL             --银行资本额
	  ,OVER_MAX_DAYS			--逾期最大天数		add by chaibin on 20120911
	  ,org_id					--机构号			add by chaibin on 20120914
    )
    select
      A.PARTY_ID
      ,A.TIME_ID
      ,'T01'
      ,''
      ,A.GROUPCORPFLAG
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(LN_RISK_AMT  ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(BAL_AMT      ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(NORMAL_AMT   ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(CHECK_AMT    ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(NEXT_AMT     ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(DOUBT_AMT    ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(LOST_AMT     ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(OVERDUR_INT  ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(OVER_INTEREST,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(PROMISE_AMT  ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(ACCEPT_AMT   ,0)), 2))
      ,sum(round(FN_DAY_TO_RMB(v_cWorkDate8, A.CYC, coalesce(GUAR_AMT     ,0)), 2))
      ,BANK_CAPITAL
	  ,max(OVER_MAX_DAYS)		--逾期最大天数 add by chaibin on 20120911
	  ,org_id
    from DW_LOAN_CUST_RISK_ANA A
    where A.TIME_ID=i_cWorkDate
    group by A.PARTY_ID
     ,A.TIME_ID
     ,'T01'
     ,''
     ,A.GROUPCORPFLAG
     ,BANK_CAPITAL
	 ,org_id
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.7');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,17);--

--   update DW_LOAN_CUST_RISK_ANA A
--    set CU_NM =
--      (
--        select CU_NM from DW_CUST_BASE_INFO B where A.PARTY_ID=B.PARTY_ID
--      ) where time_id=i_cWorkDate
--    ;

MERGE INTO DW_LOAN_CUST_RISK_ANA A
USING DW_CUST_BASE_INFO B ON A.PARTY_ID=B.PARTY_ID
WHEN MATCHED AND time_id=i_cWorkDate THEN UPDATE SET CU_NM = B.CU_NM ;

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.8');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,18);--
    SET v_cAction='insert into DW_LOAN_CUST_RISK_ANA 2';--

    insert into DW_LOAN_CUST_RISK_ANA
    (
       PARTY_ID                 --客户号
      ,TIME_ID                  --时间
      ,CYC
      ,CU_NM                    --客户名称
      ,GROUPCORPFLAG            --集团客户标志
      ,LN_RISK_AMT              --贷款风险准备金
      ,BAL_AMT                  --贷款余额
      ,NORMAL_AMT               --正常贷款余额
      ,CHECK_AMT                --关注贷款余额
      ,NEXT_AMT                 --次级贷款余额
      ,DOUBT_AMT                --可疑贷款余额
      ,LOST_AMT                 --损失贷款余额
      ,OVERDUR_INT
      ,OVER_INTEREST            --逾期贷款利息
      ,PROMISE_AMT              --保证金额
      ,ACCEPT_AMT               --承兑金额
      ,GUAR_AMT                 --保函金额
      ,BANK_CAPITAL             --银行资本额
	  ,OVER_MAX_DAYS			--逾期最大天数 add by chaibin on 20120911
	  ,org_id					--机构号       add by chaibin on 20120914
    )
    select
      B.MAST_PARTY_ID
      ,A.TIME_ID
      ,A.CYC
      ,B.MAST_CUST_NAME
      ,'T88003'
      ,sum(coalesce(LN_RISK_AMT  ,0))
      ,sum(coalesce(BAL_AMT      ,0))
      ,sum(coalesce(NORMAL_AMT   ,0))
      ,sum(coalesce(CHECK_AMT    ,0))
      ,sum(coalesce(NEXT_AMT     ,0))
      ,sum(coalesce(DOUBT_AMT    ,0))
      ,sum(coalesce(LOST_AMT     ,0))
      ,sum(coalesce(OVERDUR_INT  ,0))
      ,sum(coalesce(OVER_INTEREST,0))
      ,sum(coalesce(PROMISE_AMT  ,0))
      ,sum(coalesce(ACCEPT_AMT   ,0))
      ,sum(coalesce(GUAR_AMT     ,0))
      ,BANK_CAPITAL
	  ,max(OVER_MAX_DAYS)			--逾期最大天数 add by chaibin on 20120911
	  ,org_id						--机构号		add by chaibin on 20120914
    from GROUPCUST_RELATION B
      left outer join DW_LOAN_CUST_RISK_ANA A
        on A.PARTY_ID=B.PARTY_ID
    where A.TIME_ID=i_cWorkDate
      and A.CYC='T01'
    group by B.MAST_PARTY_ID
      ,A.TIME_ID
      ,A.CYC
      ,B.MAST_CUST_NAME
      ,'T88003'
      ,BANK_CAPITAL
	  ,org_id
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'18.9');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,19);--
--    --(5)、机构层个人贷款含信用卡数据分析(报表五)
--    delete from DW_LOANCARD_ORG_RISK_ANA where TIME_ID=i_cWorkDate;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'19');--
--    commit;--
--
--    insert into DW_LOANCARD_ORG_RISK_ANA
--    (
--      ORG_ID                               --机构
--      ,TIME_ID                             --时间
--      ,CYC
--      ,PRDT_ID                             --贷款种类
--      ,TP_5                                --五级分类
--      ,BAL_AMT                             --余额
--    )
--    select
--      ORG_ID                               --机构
--      ,TIME_ID                             --时间
--      ,CYC
--      ,PRDT_ID                             --贷款种类
--      ,TP_5                                --五级分类
--      ,sum(coalesce(BAL_AMT,0))
--    from DW_LOANCUST_ANA_INTEGRATE A
--    where A.CU_FL='T83001'
--      and A.TIME_ID=i_cWorkDate
--    group by ORG_ID
--      ,TIME_ID
--      ,CYC
--      ,PRDT_ID
--      ,TP_5
--    union
--    --信用卡的产品种类没有相应标准代码和含义
--    select
--      ORG_ID
--      ,i_cWorkDate
--      ,CYC
--      ,PRDT_ID
--      ,TP_5
--      ,sum(coalesce(BAL,0))
--    from DW_CARD_ACCT
--    group by ORG_ID
--      ,i_cWorkDate
--      ,CYC
--      ,PRDT_ID
--      ,TP_5
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'20');--
--    commit;--
--
--    --更新环比数据
--    merge into DW_LOANCARD_ORG_RISK_ANA A
--    using
--    (
--      select
--         B.ORG_ID  as ORG_ID
--        ,B.TIME_ID as TIME_ID
--        ,B.CYC     as CYC
--        ,B.PRDT_ID as PRDT_ID
--        ,B.TP_5    as TP_5
--        ,B.BAL_AMT as LM_BAL_AMT
--        ,C.BAL_AMT as LYD_BAL_AMT
--        ,D.BAL_AMT as LY_BAL_AMT
--      from DW_LOANCARD_ORG_RISK_ANA B
--        left outer join DW_LOANCARD_ORG_RISK_ANA C
--          on B.ORG_ID         = C.ORG_ID
--            and B.CYC         = C.CYC
--            and B.PRDT_ID     = C.PRDT_ID
--            and B.TP_5        = C.TP_5
--            and C .TIME_ID = date(i_cWorkDate) - 1 years
--        left outer join DW_LOANCARD_ORG_RISK_ANA D
--          on B.ORG_ID         = D.ORG_ID
--            and B.CYC         = D.CYC
--            and B.PRDT_ID     = D.PRDT_ID
--            and B.TP_5        = D.TP_5
--            and D .TIME_ID = date(v_cLastYLASTDay10)
--      where B.TIME_ID = date(i_cWorkDate) - int(substr(i_cWorkDate,9,2)) days
--    ) E
--    on A.ORG_ID         = E.ORG_ID
--      and A.CYC         = E.CYC
--      and A.PRDT_ID     = E.PRDT_ID
--      and A.TP_5        = E.TP_5
--      and A .TIME_ID = date(i_cWorkDate)
--    when matched then
--    update set
--       LM_BAL_AMT   = coalesce(E.LM_BAL_AMT   ,0)
--      ,LYD_BAL_AMT  = coalesce(E.LYD_BAL_AMT  ,0)
--      ,LY_BAL_AMT   = coalesce(E.LY_BAL_AMT   ,0)
--    when not matched then
--    insert values
--    (
--      ORG_ID
--      ,i_cWorkDate
--      ,CYC
--      ,PRDT_ID
--      ,TP_5
--      ,0
--      ,coalesce(LM_BAL_AMT ,0)
--      ,coalesce(LYD_BAL_AMT,0)
--      ,coalesce(LY_BAL_AMT ,0)
--    )
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'21');--
--    commit;--

    --(6)、机构层逾期时间数据分析(报表六)贷款逾期分析（五级）报表
    SET v_cAction='delete from DW_LOAN_ORG_OVER_ANA';--
    delete from DW_LOAN_ORG_OVER_ANA where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'22');--
    commit;--

    insert into DW_LOAN_ORG_OVER_ANA
    (
      ORG_ID                               --机构
      ,TIME_ID                             --时间
      ,CYC
      ,OVER_TERM_CODE                      --逾期期限代码
      ,TP_5                                --五级分类
      ,BAL_AMT                             --余额
    )
    select
      ORG_ID                               --机构
      ,TIME_ID                             --时间
      ,CYC
      ,OVER_TERM_CODE                      --逾期期限代码
      ,TP_5                                --五级分类
      ,sum(BAL_AMT)  as BAL_AMT--余额
    from (
    select
      ORG_ID                               --机构
      ,TIME_ID                             --时间
      ,CYC
      ,value(OVER_TERM_CODE,'') AS OVER_TERM_CODE --逾期期限代码
      ,TP_5                                --五级分类
      ,sum(coalesce(BAL_AMT,0))  as BAL_AMT--余额
    from DW_LOANCUST_ANA_INTEGRATE A
    where A.TIME_ID=i_cWorkDate
      and ac_id in (select distinct khdbacid from DDS_KER_BGFDKHDZ  where left(KHDAACID,4) in ('1301','1302','1303' ,'1304','1308'))
      --普通贷款+垫款
      and AC_ID not like '1831%'
      and AC_ID not like '1289%'
      and AC_ID not like '2419%'
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,OVER_TERM_CODE
      ,TP_5
    union all
    select
      A.ORG_ID
      ,i_cWorkDate AS TIME_ID
      ,A.CYC
      ,'' AS OVER_TERM_CODE
      ,'D41001' AS TP_5
      ,sum(case when CDFG='2' then -1 * coalesce(A.BAL,0) else coalesce(A.BAL,0) end) as BAL_AMT
    from V_DW_GL_ACCT A			--   内部帐分户 (分为表内数据BGFMFBAL 和表外数据 BGFMOBAL)
    where A.ACCT_ST = '1'
      and (A.AC_ID like '1289%' or A.AC_ID like '2419%')
      and A.BAL > 0
    group by A.ORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,''
      ,'D41001'
    union all
    select
      A.CORG_ID AS ORG_ID
      ,i_cWorkDate AS TIME_ID
      ,A.CYC
      ,'' AS OVER_TERM_CODE
      --,'D41001' AS TP_5
      ,lvl_5 AS TP_5
      ,sum(coalesce(abs(A.BAL),0)) as BAL_AMT
    from V_DW_CARD_ACCT A		-- 信用卡分户视图
    where A.BAL < 0
      --and A.ACCT_ST = 'D33001'
      and (A.LOAN_AC_ID = '125304')
    group by A.CORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,''
      --,'D41001'
      ,lvl_5
    ) A  group by ORG_ID
      ,TIME_ID
      ,CYC
      ,OVER_TERM_CODE
      ,TP_5
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'23');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,20);--
    SET v_cAction='merge into DW_LOAN_ORG_OVER_ANA';--

    merge into DW_LOAN_ORG_OVER_ANA A
    using
    (
      select
         B.ORG_ID         as ORG_ID
        ,B.TIME_ID        as TIME_ID
        ,B.CYC            as CYC
        ,B.OVER_TERM_CODE as OVER_TERM_CODE
        ,B.TP_5           as TP_5
        ,B.BAL_AMT        as LM_BAL_AMT
        ,C.BAL_AMT        as LYD_BAL_AMT
        ,D.BAL_AMT        as LY_BAL_AMT
      from DW_LOAN_ORG_OVER_ANA B
        left outer join DW_LOAN_ORG_OVER_ANA C
          on B.ORG_ID                = C.ORG_ID
            and B.CYC                = C.CYC
            and B.OVER_TERM_CODE     = C.OVER_TERM_CODE
            and B.TP_5               = C.TP_5
            and C .TIME_ID = substr(v_cLYSameDay8,1,4)||'-'||substr(v_cLYSameDay8,5,2)||'-'||substr(v_cLYSameDay8,7,2)
        left outer join DW_LOAN_ORG_OVER_ANA D
          on B.ORG_ID                = D.ORG_ID
            and B.CYC                = D.CYC
            and B.OVER_TERM_CODE     = D.OVER_TERM_CODE
            and B.TP_5               = D.TP_5
            and D .TIME_ID = v_cLastYLASTDay10
      where B.TIME_ID = to_char( date_adds(date(i_cWorkDate) , -int(substr(i_cWorkDate,9,2)) ),'yyyymmdd')
    ) E
    on A.ORG_ID                = E.ORG_ID
      and A.CYC                = E.CYC
      and A.OVER_TERM_CODE     = E.OVER_TERM_CODE
      and A.TP_5               = E.TP_5
      and A .TIME_ID = i_cWorkDate
    when matched then
    update set
       LM_BAL_AMT   = coalesce(E.LM_BAL_AMT   ,0)
      ,LYD_BAL_AMT  = coalesce(E.LYD_BAL_AMT  ,0)
      ,LY_BAL_AMT   = coalesce(E.LY_BAL_AMT   ,0)
    when not matched then
    insert values
    (
       E.ORG_ID
      ,i_cWorkDate
      ,E.CYC
      ,E.OVER_TERM_CODE
      ,E.TP_5
      ,0
      ,coalesce(E.LM_BAL_AMT ,0)
      ,coalesce(E.LYD_BAL_AMT,0)
      ,coalesce(E.LY_BAL_AMT ,0)
    )
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'24');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,21);--
--***************************************************************************
--************  START --  ADD BY CHAIBIN ON 20120912      *******************
--***************************************************************************

  --(6.2)、机构层逾期时间数据分析(报表六)
  -- 贷款逾期分析（四级）报表  (DW_LOAN_ORG_OVER_ANA_TP4) add by chaibin on 20120912
    SET v_cAction='delete from DW_LOAN_ORG_OVER_ANA_TP4';--
    delete from DW_LOAN_ORG_OVER_ANA_TP4 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'622');--
    commit;--

	  insert into DW_LOAN_ORG_OVER_ANA_TP4
    (
      ORG_ID                               --机构
      ,TIME_ID                             --时间
      ,CYC
      ,OVER_TERM_CODE                      --逾期期限代码
      ,TP_4                                --五级分类
      ,BAL_AMT                             --余额
    )
    select ORG_ID
      ,TIME_ID
      ,CYC
      ,OVER_TERM_CODE
      ,TP_4
      ,sum(BAL_AMT)
    from (
    select
      ORG_ID                               --机构
      ,TIME_ID                             --时间
      ,CYC
      ,value(OVER_TERM_CODE,'') as OVER_TERM_CODE --逾期期限代码
      ,TP_4                                --五级分类
      ,sum(coalesce(BAL_AMT,0)) AS BAL_AMT --余额
    from DW_LOANCUST_ANA_INTEGRATE A
    where A.TIME_ID=i_cWorkDate
      and ac_id in (select distinct khdbacid from DDS_KER_BGFDKHDZ  where left(KHDAACID,4) in ('1301','1302','1303' ,'1304','1308'))
      --普通贷款+垫款
      and AC_ID not like '1831%'
      and AC_ID not like '1289%'
      and AC_ID not like '2419%'
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,OVER_TERM_CODE
      ,TP_4
    union all
    select
      A.ORG_ID
      ,i_cWorkDate AS TIME_ID
      ,A.CYC
      ,'' AS OVER_TERM_CODE
      ,'D40001' AS TP_4
      ,sum(case when CDFG='2' then -1 * coalesce(A.BAL,0) else coalesce(A.BAL,0) end) AS BAL_AMT
    from V_DW_GL_ACCT A			--   内部帐分户 (分为表内数据BGFMFBAL 和表外数据 BGFMOBAL)
    where A.ACCT_ST = '1'
      and (A.AC_ID like '1289%' or A.AC_ID like '2419%')
      and A.BAL > 0
    group by A.ORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,''
      ,'D40001'
    union all
    select
      A.CORG_ID AS ORG_ID
      ,i_cWorkDate AS TIME_ID
      ,A.CYC
      ,'' AS OVER_TERM_CODE
      ,'D40001' AS TP_4
      ,sum(coalesce(abs(A.BAL),0)) AS BAL_AMT
    from V_DW_CARD_ACCT A      -- 信用卡分户视图
    where A.BAL < 0
      --and A.ACCT_ST = 'D33001'
      and (A.LOAN_AC_ID = '125304')
    group by A.CORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,''
      ,'D40001'
    ) A group by ORG_ID
      ,TIME_ID
      ,CYC
      ,OVER_TERM_CODE
      ,TP_4
    ;--


    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'623');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,22);--
    SET v_cAction='merge into DW_LOAN_ORG_OVER_ANA_TP4';--
    merge into DW_LOAN_ORG_OVER_ANA_TP4 A
    using
    (
      select
         B.ORG_ID         as ORG_ID
        ,B.TIME_ID        as TIME_ID
        ,B.CYC            as CYC
        ,B.OVER_TERM_CODE as OVER_TERM_CODE
        ,B.TP_4           as TP_4
        ,B.BAL_AMT        as LM_BAL_AMT
        ,C.BAL_AMT        as LYD_BAL_AMT
        ,D.BAL_AMT        as LY_BAL_AMT
      from DW_LOAN_ORG_OVER_ANA_TP4 B
        left outer join DW_LOAN_ORG_OVER_ANA_TP4 C
          on B.ORG_ID                = C.ORG_ID
            and B.CYC                = C.CYC
            and B.OVER_TERM_CODE     = C.OVER_TERM_CODE
            and B.TP_4               = C.TP_4
            and C .TIME_ID = substr(v_cLYSameDay8,1,4)||'-'||substr(v_cLYSameDay8,5,2)||'-'||substr(v_cLYSameDay8,7,2)
        left outer join DW_LOAN_ORG_OVER_ANA_TP4 D
          on B.ORG_ID                = D.ORG_ID
            and B.CYC                = D.CYC
            and B.OVER_TERM_CODE     = D.OVER_TERM_CODE
            and B.TP_4               = D.TP_4
            and D .TIME_ID = v_cLastYLASTDay10
      where B.TIME_ID = to_char( date_adds( date(i_cWorkDate) , -int(substr(i_cWorkDate,9,2))  ),'yyyymmdd')
    ) E
    on A.ORG_ID                = E.ORG_ID
      and A.CYC                = E.CYC
      and A.OVER_TERM_CODE     = E.OVER_TERM_CODE
      and A.TP_4               = E.TP_4
      and A .TIME_ID = i_cWorkDate
    when matched then
    update set
       LM_BAL_AMT   = coalesce(E.LM_BAL_AMT   ,0)
      ,LYD_BAL_AMT  = coalesce(E.LYD_BAL_AMT  ,0)
      ,LY_BAL_AMT   = coalesce(E.LY_BAL_AMT   ,0)
    when not matched then
    insert values
    (
       E.ORG_ID
      ,i_cWorkDate
      ,E.CYC
      ,E.OVER_TERM_CODE
      ,E.TP_4
      ,0
      ,coalesce(E.LM_BAL_AMT ,0)
      ,coalesce(E.LYD_BAL_AMT,0)
      ,coalesce(E.LY_BAL_AMT ,0)
    )
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'624');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,23);--
--****************************************************************************
--************  END --  ADD BY CHAIBIN ON 20120912      **********************
--****************************************************************************
    --(7)、机构层个人信贷科目数据分析(报表七、八)
    SET v_cAction='delete from RPT_SUM_LOAN_ORG';--
    delete from RPT_SUM_LOAN_ORG where DT=v_cWorkDate8;--
    delete from RPT_SUM_LOAN_ORG_TMP1;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'25');--
    commit;--

    --获取微型企业客户号(合同总额度小于5百万)---未按照币种进行区分统计
    insert into RPT_SUM_LOAN_ORG_TMP1
    (
      PARTY_ID
      ,SUM_AAL_LMT
    )
    select
      PARTY_ID
      ,sum(coalesce(BAL,0))
    from V_DW_LOAN_ACCT A		-- 贷款分户视图
    where exists (select 'X' from DW_COMPANY B	--  公司客户附加信息表
					where A.PARTY_ID=B.PARTY_ID )
    group by PARTY_ID
    having sum(coalesce(BAL,0))<5000000
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'25');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,24);--
    --union的后半部分20090611新加的，数据未跑
    insert into RPT_SUM_LOAN_ORG
    (
      ORG_ID                         --机构
      ,DT                             --日期
      ,CYC                            --币种
      ,CU_FL                          --企业/个人标志
      ,PRDT_ID                        --产品
      ,AC_ID                          --科目
      ,ASS_TP                         --贷款担保方式
      ,TP_5                           --五级分类
      ,ID_TY                          --行业
      ,ENSI                           --企业规模
      ,CS_ATT                         --企业性质
      ,LOAN_TP                        --贷款期限类型
      ,CI                             --贷款期限
      ,BAL                            --余额
      ,P_PDT                          --旬积数
      ,MON_PDT                        --月积数
      ,YEAR_PDT                       --年积数
      ,QTY                            --笔数
      ,CS_QTY                         --客户数
      ,YEAR_GIVE_CNT                  --本年发放账号数
      ,YEAR_GIVE_AMT                  --本年发放金额
      ,YEAR_RETURN_AMT                --本年回收金额
      ,IN_DUE_INT                     --表内应收利息
      ,OUT_DUE_INT                    --表外应收利息
      ,OVERDUR_INT                    --逾期贷款本金
    )
    select
      ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,CU_FL
      ,PRDT_ID
      ,AC_ID
      ,ASS_TP
      ,TP_5
      ,IND_TYPE
      ,CORP_SIZE
      ,''
      ,TERM_CODE
      ,TERM_ID
      ,sum(coalesce(BAL_AMT,0))
      ,0
      ,0
      ,0
      ,count(1)
      ,count(distinct PARTY_ID)
      ,sum(case when BG_DT > v_cLastYLASTDay8 then 1 else 0 end)
      ,sum(case when BG_DT > v_cLastYLASTDay8 then coalesce(GIVE_AMT,0) else 0 end)
      ,sum(coalesce(YEAR_RETURN_AMT,0))
      ,sum(coalesce(IN_DUE_INT ,0))
      ,sum(coalesce(OUT_DUE_INT,0))
      ,sum(coalesce(OVERDUR_INT,0))
    from DW_LOANACCT_ANA_INTEGRATE A
    where A.TIME_ID=i_cWorkDate
    group by ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,CU_FL
      ,PRDT_ID
      ,AC_ID
      ,ASS_TP
      ,TP_5
      ,IND_TYPE
      ,CORP_SIZE
      ,''
      ,TERM_CODE
      ,TERM_ID
      ,0
    union all
    select
      ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,CU_FL
      ,PRDT_ID
      ,AC_ID
      ,ASS_TP
      ,TP_5
      ,IND_TYPE
      ,'T27004'
      ,''
      ,TERM_CODE
      ,TERM_ID
      ,sum(coalesce(BAL_AMT,0))
      ,0
      ,0
      ,0
      ,count(1)
      ,count(distinct A.PARTY_ID)
      ,sum(case when BG_DT > v_cLastYLASTDay8 then 1 else 0 end)
      ,sum(case when BG_DT > v_cLastYLASTDay8 then coalesce(GIVE_AMT,0) else 0 end)
      ,sum(coalesce(YEAR_RETURN_AMT,0))
      ,sum(coalesce(IN_DUE_INT ,0))
      ,sum(coalesce(OUT_DUE_INT,0))
      ,sum(coalesce(OVERDUR_INT,0))
    from DW_LOANACCT_ANA_INTEGRATE A
      ,RPT_SUM_LOAN_ORG_TMP1 B
    where A.TIME_ID=i_cWorkDate
      and A.PARTY_ID=B.PARTY_ID
    group by ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,CU_FL
      ,PRDT_ID
      ,AC_ID
      ,ASS_TP
      ,TP_5
      ,IND_TYPE
      ,'T27004'
      ,''
      ,TERM_CODE
      ,TERM_ID
      ,0
    ;--

    commit;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'26');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,25);--
    --承兑票据金额
    SET v_cAction='delete from RPT_SUM_LOAN_ORG_ADD';--
    delete from RPT_SUM_LOAN_ORG_ADD where TIME_ID=v_cWorkDate8;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'26');--
    commit;--

    --20090611新加的，数据未跑
    insert into RPT_SUM_LOAN_ORG_ADD
    (
      ORG_ID
      ,TIME_ID
      ,CYC
      ,ENSI                           --企业规模
      ,ACCEPT_AMT
    )
    select
      A.CDAABRNO
      ,v_cWorkDate8
      ,A.CDAACCYC
      ,C.CORP_SIZE
      ,sum(coalesce(A.CDABAMNT,0))
    from DDS_KER_BLFMDLCD A					-- 承兑协议汇票登记文件
      left outer join V_DW_LOAN_CTRT B		-- 贷款合同信息视图
        on A.CDADCONO=B.ACO_NO
      left outer join (select distinct PARTY_ID,CORP_SIZE from DW_LOANACCT_ANA_INTEGRATE where TIME_ID=i_cWorkDate) C
        on B.PARTY_ID=C.PARTY_ID
    where A.CDAAACBS='3'
    group by A.CDAABRNO
      ,v_cWorkDate8
      ,A.CDAACCYC
      ,C.CORP_SIZE
    union all
    select
      A.CDAABRNO
      ,v_cWorkDate8
      ,A.CDAACCYC
      ,'T27004'
      ,sum(coalesce(A.CDABAMNT,0))
    from DDS_KER_BLFMDLCD A					--  承兑协议汇票登记文件
      left outer join V_DW_LOAN_CTRT B			-- 贷款合同信息视图
        on A.CDADCONO=B.ACO_NO
      ,RPT_SUM_LOAN_ORG_TMP1 C
    where A.CDAAACBS='3'
      and B.PARTY_ID=C.PARTY_ID
    group by A.CDAABRNO
      ,v_cWorkDate8
      ,A.CDAACCYC
      ,'T27004'
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'26');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,26);--
--    --(8)、机构层个人信贷科目数据分析(报表十四)
--    delete from DW_COMPANY_ALL_ANA where TIME_ID=i_cWorkDate;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'27');--
--    commit;--
--
--    insert into DW_COMPANY_ALL_ANA
--    (
--      ORG_ID                              --机构
--      ,TIME_ID                             --时间
--      ,CYC                                 --币种
--      ,PRDT_ID                             --贷款种类
--      ,IND_TYPE                            --行业
--      ,TP_5                                --五级分类
--      ,TP_4                                --四级分类
--      ,CORP_SIZE                           --企业规模
--      ,CREDIT_LVL                          --信用等级
--      ,CREDITCUST_CLASS                    --客户鉴定分类
--      ,BAL_AMT                             --余额
--      ,CUST_CNT                            --客户数
--    )
--    select
--      ORG_ID
--      ,TIME_ID
--      ,CYC
--      ,PRDT_ID
--      ,IND_TYPE
--      ,TP_5
--      ,TP_4
--      ,CORP_SIZE
--      ,CREDIT_LVL
--      ,CREDITCUST_CLASS
--      ,sum(coalesce(BAL_AMT,0))
--      ,count(distinct PARTY_ID)
--    from DW_LOANACCT_ANA_INTEGRATE
--    where TIME_ID=i_cWorkDate
--    group by ORG_ID
--      ,TIME_ID
--      ,CYC
--      ,PRDT_ID
--      ,IND_TYPE
--      ,TP_5
--      ,TP_4
--      ,CORP_SIZE
--      ,CREDIT_LVL
--      ,CREDITCUST_CLASS
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'28');--
--    commit;--
--
--    --更新环比数据
--    merge into DW_COMPANY_ALL_ANA A
--    using
--    (
--      select
--         B.ORG_ID           as ORG_ID
--        ,B.TIME_ID          as TIME_ID
--        ,B.CYC              as CYC
--        ,B.PRDT_ID          as PRDT_ID
--        ,B.IND_TYPE         as IND_TYPE
--        ,B.TP_5             as TP_5
--        ,B.TP_4             as TP_4
--        ,B.CORP_SIZE        as CORP_SIZE
--        ,B.CREDIT_LVL       as CREDIT_LVL
--        ,B.CREDITCUST_CLASS as CREDITCUST_CLASS
--        ,B.BAL_AMT          as LM_BAL_AMT
--        ,C.BAL_AMT          as LYD_BAL_AMT
--        ,D.BAL_AMT          as LY_BAL_AMT
--      from DW_COMPANY_ALL_ANA B
--        left outer join DW_COMPANY_ALL_ANA C
--          on B.ORG_ID                = C.ORG_ID
--            and B.CYC                = C.CYC
--            and B.PRDT_ID            = C.PRDT_ID
--            and B.IND_TYPE           = C.IND_TYPE
--            and B.TP_5               = C.TP_5
--            and B.TP_4               = C.TP_4
--            and B.CORP_SIZE          = C.CORP_SIZE
--            and B.CREDIT_LVL         = C.CREDIT_LVL
--            and B.CREDITCUST_CLASS   = C.CREDITCUST_CLASS
--            and C .TIME_ID = date(i_cWorkDate) - 1 years
--        left outer join DW_COMPANY_ALL_ANA D
--          on B.ORG_ID                = D.ORG_ID
--            and B.CYC                = D.CYC
--            and B.PRDT_ID            = D.PRDT_ID
--            and B.IND_TYPE           = D.IND_TYPE
--            and B.TP_5               = D.TP_5
--            and B.TP_4               = D.TP_4
--            and B.CORP_SIZE          = D.CORP_SIZE
--            and B.CREDIT_LVL         = D.CREDIT_LVL
--            and B.CREDITCUST_CLASS   = D.CREDITCUST_CLASS
--            and D .TIME_ID = date(v_cLastYLASTDay10)
--      where B.TIME_ID = date(i_cWorkDate) - int(substr(i_cWorkDate,9,2)) days
--    ) E
--    on A.ORG_ID                = E.ORG_ID
--      and A.CYC                = E.CYC
--      and A.PRDT_ID            = E.PRDT_ID
--      and A.IND_TYPE           = E.IND_TYPE
--      and A.TP_5               = E.TP_5
--      and A.TP_4               = E.TP_4
--      and A.CORP_SIZE          = E.CORP_SIZE
--      and A.CREDIT_LVL         = E.CREDIT_LVL
--      and A.CREDITCUST_CLASS   = E.CREDITCUST_CLASS
--      and A .TIME_ID = date(i_cWorkDate)
--    when matched then
--    update set
--       LM_BAL_AMT   = coalesce(E.LM_BAL_AMT   ,0)
--      ,LYD_BAL_AMT  = coalesce(E.LYD_BAL_AMT  ,0)
--      ,LY_BAL_AMT   = coalesce(E.LY_BAL_AMT   ,0)
--    when not matched then
--    insert values
--    (
--      ORG_ID
--      ,i_cWorkDate
--      ,CYC
--      ,PRDT_ID
--      ,IND_TYPE
--      ,TP_5
--      ,TP_4
--      ,CORP_SIZE
--      ,CREDIT_LVL
--      ,CREDITCUST_CLASS
--      ,0
--      ,0
--      ,coalesce(LM_BAL_AMT ,0)
--      ,coalesce(LYD_BAL_AMT,0)
--      ,coalesce(LY_BAL_AMT ,0)
--    )
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'29');--
--    commit;--

    --(9)、贷款报表贷款利率数据分析1(报表十一、十三)
    SET v_cAction='delete from DW_LOAN_RATE_ANA_1';--
    delete from DW_LOAN_RATE_ANA_1 where TIME_ID=v_cWorkDate8;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'30');--
    commit;--

    insert into DW_LOAN_RATE_ANA_1
    (
      ORG_ID                      --机构
      ,TIME_ID                     --时间
      ,CYC                         --币种
      ,TERM_CODE                   --期限段码
      ,DATA_TYPE                   --数据源标志
      ,MAX_RATE                    --最高利率
      ,MIN_RATE                    --最低利率
      ,MAR_AMT                     --最高利率贷款余额
      ,MIR_AMT                     --最低利率贷款余额
      ,INTERESTE                   --贷款利息
      ,BAL_AMT                     --贷款余额
    )
    select
      ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,TERM_CODE
      ,'1'
      ,max(RATE)
      ,min(RATE)
      ,0
      ,0
      ,sum(coalesce(GIVE_AMT,0) * coalesce(RATE,0))
      ,sum(coalesce(GIVE_AMT,0))
    from DW_LOANACCT_ANA_INTEGRATE
    where BG_DT >= v_cMonFirstDay
      and TIME_ID = i_cWorkDate
      --#20111031 桐庐删除,固定利率包含个人住房
      --and AC_ID not like '1289%'
      --and AC_ID not like '2419%'
      --and AC_ID not in ('180110','180405','180160','180455','180111','180406','180161','180456','180112','180162','180407','180457')
      --20111031 桐庐删除,固定利率包含个人住房#
      ------and TPPN_TP is null   (与上面按照科目过滤的条件等同)
      ------and TP_4 = 'D40001'
      ------and ACCT_ST = 'D14003'(账户状态不能只是正常)
      and BAL_AMT >0 --当月发放当月还款的不统计 20111010
      --20130321 桐庐踢出贴现和转贴现
      --and left(AC_ID,4) not in ('1289','2419')
      and AC_ID like '180%'
    group by ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,TERM_CODE
      ,'1'
    union all
    select
      ORG_ID
      ,v_cWorkDate8
      ,CYC
      --应用贷款剩余期限代码
      ,TERM_CODE2
      ,'2'
      ,max(RATE)
      ,min(RATE)
      ,0
      ,0
      ,sum(coalesce(GIVE_AMT,0) * coalesce(RATE,0))
      ,sum(coalesce(GIVE_AMT,0))
    from DW_LOANACCT_ANA_INTEGRATE
    where TIME_ID = i_cWorkDate
      and BG_DT >= v_cMonFirstDay
 --and (AC_ID like '1233%' or AC_ID like '1243%' or AC_ID in ('123401','124401','128103','128123','127103','127123','126103','126123'))
 --and (AC_ID like '1233%' or AC_ID like '1243%' or AC_ID in ('128103','128123','127103','127123','126103','126123'))
      and (AC_ID in ('180110','180405','180160','180455','180111','180406','180161','180456','180112','180162','180407','180457'))
      ------and TP_4 = 'D40001'
      ------and ACCT_ST = 'D14003'(账户状态不能只是正常)
      and BAL_AMT >0 --当月发放当月还款的不统计 20111010
    group by ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,TERM_CODE2
      ,'2'
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'31');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,27);--
    --更新最高、最低1
    merge into DW_LOAN_RATE_ANA_1 A
    using
    (
      select
         B.ORG_ID           as ORG_ID
        ,v_cWorkDate8       as TIME_ID
        ,B.CYC              as CYC
        ,B.TERM_CODE        as TERM_CODE
        ,'1'                as DATA_TYPE
        ,sum(case when B.RATE=C.MAX_RATE then coalesce(B.GIVE_AMT,0) else 0 end) as MAR_AMT
        ,sum(case when B.RATE=C.MIN_RATE then coalesce(B.GIVE_AMT,0) else 0 end) as MIR_AMT
      from DW_LOANACCT_ANA_INTEGRATE B
        left outer join DW_LOAN_RATE_ANA_1 C
          on B.ORG_ID                = C.ORG_ID
            and B.CYC                = C.CYC
            and B.TERM_CODE          = C.TERM_CODE
            and C.TIME_ID            = v_cWorkDate8
            and C.DATA_TYPE          = '1'
      where B.TIME_ID = i_cWorkDate
        and B.BG_DT >= v_cMonFirstDay
        --#20111031 桐庐删除,固定利率包含个人住房
        --and B.AC_ID not like '1289%'
        --and B.AC_ID not like '2419%'
  --and B.AC_ID not in ('180110','180405','180160','180455','180111','180406','180161','180456','180112','180162','180407','180457')
        --20111031 桐庐删除,固定利率包含个人住房#
        ------and TPPN_TP is null   (与上面按科目过滤的条件等同)
        ------and TP_4 = 'D40001'
        ------and ACCT_ST = 'D14003'(账户状态不能只是正常)
        and B.BAL_AMT >0 --当月发放当月还款的不统计 20111010
        --20130321 桐庐踢出贴现和转贴现
        --and left(AC_ID,4) not in ('1289','2419')
        and AC_ID like '180%'
      group by  B.ORG_ID
        ,v_cWorkDate8
        ,B.CYC
        ,B.TERM_CODE
        ,'1'
    ) E
    on A.ORG_ID                = E.ORG_ID
      and A.CYC                = E.CYC
      and A.TERM_CODE          = E.TERM_CODE
      and A.DATA_TYPE          = E.DATA_TYPE
      and A .TIME_ID = v_cWorkDate8
    when matched then
    update set
       MAR_AMT  = E.MAR_AMT
      ,MIR_AMT  = E.MIR_AMT
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'32');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,28);--
    --更新最高、最低2
    merge into DW_LOAN_RATE_ANA_1 A
    using
    (
      select
         B.ORG_ID           as ORG_ID
        ,v_cWorkDate8       as TIME_ID
        ,B.CYC              as CYC
        ,B.TERM_CODE2       as TERM_CODE2
        ,'2'                as DATA_TYPE
        ,sum(case when B.RATE=C.MAX_RATE then coalesce(B.GIVE_AMT,0) else 0 end) as MAR_AMT
        ,sum(case when B.RATE=C.MIN_RATE then coalesce(B.GIVE_AMT,0) else 0 end) as MIR_AMT
      from DW_LOANACCT_ANA_INTEGRATE B
        left outer join DW_LOAN_RATE_ANA_1 C
          on B.ORG_ID                = C.ORG_ID
            and B.CYC                = C.CYC
            and B.TERM_CODE2         = C.TERM_CODE
            and C.TIME_ID            = v_cWorkDate8
            and C.DATA_TYPE          = '2'
      where B.TIME_ID = i_cWorkDate
        and B.BG_DT >= v_cMonFirstDay
 --and (B.AC_ID like '1233%' or B.AC_ID like '1243%' or B.AC_ID in ('123401','124401','128103','128123','127103','127123','126103'
 --,'126123'))
        --and (B.AC_ID like '1233%' or B.AC_ID like '1243%' or B.AC_ID in ('128103','128123','127103','127123','126103','126123'))
        and (B.AC_ID in ('180110','180405','180160','180455','180111','180406','180161','180456','180112','180162','180407','180457'))
        ------and TP_4 = 'D40001'
        ------and ACCT_ST = 'D14003'(账户状态不能只是正常)
        and B.BAL_AMT >0 --当月发放当月还款的不统计 20111010
      group by  B.ORG_ID
        ,v_cWorkDate8
        ,B.CYC
        ,B.TERM_CODE2
        ,'2'
    ) E
    on A.ORG_ID                = E.ORG_ID
      and A.CYC                = E.CYC
      and A.TERM_CODE          = E.TERM_CODE2
      and A.DATA_TYPE          = E.DATA_TYPE
      and A .TIME_ID = v_cWorkDate8
    when matched then
    update set
       MAR_AMT  = E.MAR_AMT
      ,MIR_AMT  = E.MIR_AMT
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'33');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,29);--
exec 'set hive.optimize.index.filter = false';
    insert into DW_LOAN_RATE_ANA_1
    (
      ORG_ID                      --机构
      ,TIME_ID                     --时间
      ,CYC                         --币种
      ,TERM_CODE                   --期限段码
      ,DATA_TYPE                   --数据源标志
      ,MAX_RATE                    --最高利率
      ,MIN_RATE                    --最低利率
      ,MAR_AMT                     --最高利率贷款余额
      ,MIR_AMT                     --最低利率贷款余额
      ,INTERESTE                   --贷款利息
      ,BAL_AMT                     --贷款余额
    )
    select
       ORG_ID
      ,TIME_ID
      ,CYC
      ,TERM_CODE
      ,DATA_TYPE
      ,MAX_RATE
      ,MIN_RATE
      ,sum(coalesce(MAR_AMT,0))
      ,sum(coalesce(MIR_AMT,0))
      ,INTERESTE
      ,BAL_AMT
    from
    (
      select
         C.ORG_ID                         as ORG_ID
        ,C.TIME_ID                        as TIME_ID
        ,C.CYC                            as CYC
        ,C.TERM_CODE                      as TERM_CODE
        ,C.DATA_TYPE                      as DATA_TYPE
        ,C.MAX_RATE                       as MAX_RATE
        ,C.MIN_RATE                       as MIN_RATE
        ,sum(coalesce(D.MAR_AMT,0))       as MAR_AMT
        ,0                                as MIR_AMT
        ,C.INTERESTE                      as INTERESTE
        ,C.BAL_AMT                        as BAL_AMT
      from
      (
        select
          B.LVL1_NO                            as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.DATA_TYPE                         as DATA_TYPE
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_1 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL1_NO
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.DATA_TYPE
      ) as C
      left outer join
        (
          select
            B.LVL1_NO                    as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.DATA_TYPE                 as DATA_TYPE
            ,A.MAX_RATE                  as MAX_RATE
            ,A.MAR_AMT                   as MAR_AMT
          from DW_LOAN_RATE_ANA_1 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as D
        on C.ORG_ID  =D.ORG_ID
          and C.TIME_ID  =D.TIME_ID
          and C.CYC      =D.CYC
          and C.TERM_CODE=D.TERM_CODE
          and C.DATA_TYPE=D.DATA_TYPE
          and C.MAX_RATE =D.MAX_RATE
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.DATA_TYPE
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
      union all
      select
         C.ORG_ID                         as ORG_ID
        ,C.TIME_ID                        as TIME_ID
        ,C.CYC                            as CYC
        ,C.TERM_CODE                      as TERM_CODE
        ,C.DATA_TYPE                      as DATA_TYPE
        ,C.MAX_RATE                       as MAX_RATE
        ,C.MIN_RATE                       as MIN_RATE
        ,0                                as MAR_AMT
        ,sum(coalesce(E.MIR_AMT,0))       as MIR_AMT
        ,C.INTERESTE                      as INTERESTE
        ,C.BAL_AMT                        as BAL_AMT
      from
      (
        select
          B.LVL1_NO                            as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.DATA_TYPE                         as DATA_TYPE
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_1 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL1_NO
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.DATA_TYPE
      ) as C
      left outer join
        (
          select
            B.LVL1_NO                    as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.DATA_TYPE                 as DATA_TYPE
            ,A.MIN_RATE                  as MIN_RATE
            ,A.MIR_AMT                   as MIR_AMT
          from DW_LOAN_RATE_ANA_1 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as E
        on C.ORG_ID  =E.ORG_ID
          and C.TIME_ID  =E.TIME_ID
          and C.CYC      =E.CYC
          and C.TERM_CODE=E.TERM_CODE
          and C.DATA_TYPE=E.DATA_TYPE
          and C.MIN_RATE =E.MIN_RATE
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.DATA_TYPE
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
    ) as F
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,TERM_CODE
      ,DATA_TYPE
      ,MAX_RATE
      ,MIN_RATE
      ,INTERESTE
      ,BAL_AMT
    union all
    select
       ORG_ID
      ,TIME_ID
      ,CYC
      ,TERM_CODE
      ,DATA_TYPE
      ,MAX_RATE
      ,MIN_RATE
      ,sum(coalesce(MAR_AMT,0))
      ,sum(coalesce(MIR_AMT,0))
      ,INTERESTE
      ,BAL_AMT
    from
    (
      select
         C.ORG_ID                         as ORG_ID
        ,C.TIME_ID                        as TIME_ID
        ,C.CYC                            as CYC
        ,C.TERM_CODE                      as TERM_CODE
        ,C.DATA_TYPE                      as DATA_TYPE
        ,C.MAX_RATE                       as MAX_RATE
        ,C.MIN_RATE                       as MIN_RATE
        ,sum(coalesce(D.MAR_AMT,0))       as MAR_AMT
        ,0                                as MIR_AMT
        ,C.INTERESTE                      as INTERESTE
        ,C.BAL_AMT                        as BAL_AMT
      from
      (
        select
          B.LVL_2                              as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.DATA_TYPE                         as DATA_TYPE
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_1 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL_2
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.DATA_TYPE
      ) as C
      left outer join
        (
          select
            B.LVL_2                      as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.DATA_TYPE                 as DATA_TYPE
            ,A.MAX_RATE                  as MAX_RATE
            ,A.MAR_AMT                   as MAR_AMT
          from DW_LOAN_RATE_ANA_1 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as D
        on C.ORG_ID  =D.ORG_ID
          and C.TIME_ID  =D.TIME_ID
          and C.CYC      =D.CYC
          and C.TERM_CODE=D.TERM_CODE
          and C.DATA_TYPE=D.DATA_TYPE
          and C.MAX_RATE =D.MAX_RATE
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.DATA_TYPE
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
      union all
      select
         C.ORG_ID                         as ORG_ID
        ,C.TIME_ID                        as TIME_ID
        ,C.CYC                            as CYC
        ,C.TERM_CODE                      as TERM_CODE
        ,C.DATA_TYPE                      as DATA_TYPE
        ,C.MAX_RATE                       as MAX_RATE
        ,C.MIN_RATE                       as MIN_RATE
        ,0                                as MAR_AMT
        ,sum(coalesce(E.MIR_AMT,0))       as MIR_AMT
        ,C.INTERESTE                      as INTERESTE
        ,C.BAL_AMT                        as BAL_AMT
      from
      (
        select
          B.LVL_2                              as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.DATA_TYPE                         as DATA_TYPE
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_1 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL_2
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.DATA_TYPE
      ) as C
      left outer join
        (
          select
            B.LVL_2                      as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.DATA_TYPE                 as DATA_TYPE
            ,A.MIN_RATE                  as MIN_RATE
            ,A.MIR_AMT                   as MIR_AMT
          from DW_LOAN_RATE_ANA_1 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as E
        on C.ORG_ID  =E.ORG_ID
          and C.TIME_ID  =E.TIME_ID
          and C.CYC      =E.CYC
          and C.TERM_CODE=E.TERM_CODE
          and C.DATA_TYPE=E.DATA_TYPE
          and C.MIN_RATE =E.MIN_RATE
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.DATA_TYPE
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
    ) as G
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,TERM_CODE
      ,DATA_TYPE
      ,MAX_RATE
      ,MIN_RATE
      ,INTERESTE
      ,BAL_AMT
    ;--

exec 'set hive.optimize.index.filter = true';
    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'33');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,30);--
    --(10)、贷款报表贷款利率数据分析2(报表十二)--关于基准利率提取、执行利率-基准利率的分段代码
    SET v_cAction='delete from DW_LOAN_RATE_ANA_2';--
    delete from DW_LOAN_RATE_ANA_2 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'34');--
    commit;--

    insert into DW_LOAN_RATE_ANA_2
    (
      ORG_ID                 --机构
      ,TIME_ID                --时间
      ,CYC                    --币种
      ,TERM_CODE              --期限段码
      ,RATE_ZONE_CODE         --利率区间代码
      ,PRDT_ID                --贷款产品种类
      ,BAL_AMT                --贷款余额
    )
    select
      ORG_ID
      ,i_cWorkDate
      ,CYC
      ,TERM_CODE
      ,case
         --when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >=0.9 and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) <1    then 'L07001'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) <1    then 'L07001'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) =1    then 'L07002'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1    and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.1 then 'L07003'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.1  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.2 then 'L07004'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.2  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.3 then 'L07005'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.3  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.4 then 'L07006'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.4  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.5 then 'L07007'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.5  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=2   then 'L07008'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >2   then 'L07009'
       end
      ,PRDT_ID
      ,sum(coalesce(GIVE_AMT,0))
    from DW_LOANACCT_ANA_INTEGRATE
    where BG_DT >= v_cMonFirstDay
      and TIME_ID = i_cWorkDate
      --##20111031 桐庐删除,固定利率包含个人住房
      --and AC_ID not like '1289%'
      --and AC_ID not like '2419%'
      --and AC_ID not in ('180110','180405','180160','180455','180111','180406','180161','180456','180112','180162','180407','180457')
      --20111031 桐庐删除,固定利率包含个人住房##
      ------and ACCT_ST = 'D14003'(账户状态不能只是正常)
      ------and CYC='CNY'
      ------and AC_ID not like '1264%'
      ------and AC_ID not like '1274%'
      ------and AC_ID not like '1284%'
      ------and AC_ID not like '1257%'
      ------and TP_4 = 'D40001'
      and BAL_AMT >0 --20111031
	    --and left(AC_ID,4) not in ('1289','2419') --20130508 --桐庐去掉贴现和转贴现数据
	    and AC_ID like '180%'
    group by ORG_ID
      ,i_cWorkDate
      ,CYC
      ,TERM_CODE
      ,case
         --when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >=0.9 and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) <1    then 'L07001'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) <1    then 'L07001'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) =1    then 'L07002'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1    and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.1 then 'L07003'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.1  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.2 then 'L07004'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.2  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.3 then 'L07005'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.3  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.4 then 'L07006'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.4  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=1.5 then 'L07007'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >1.5  and coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then coalesce(BASIC_RATE,1) else coalesce(BASIC_RATE,1) end) <=2   then 'L07008'
         when coalesce(RATE,0)/(case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end) >2   then 'L07009'
       end
      ,PRDT_ID
--    union
--    select
--      A.ORG_ID
--      ,i_cWorkDate
--      ,A.CYC
--      ,'D63001'
--      ,'L07001'
--      ,B.PRDT_ID
--      ,sum(case when CDFG='2' then -1 * coalesce(A.BAL,0) else coalesce(A.BAL,0) end)
--    from DW_GL_ACCT A
--      left outer join DW_ACCT_PRDT B
--        on A.ACCT_ID=B.ACCT_ID
--    where A.ACCT_ST = '1'
--      and (A.AC_ID like '1289%' or A.AC_ID like '2419%')
--    group by A.ORG_ID
--      ,i_cWorkDate
--      ,A.CYC
--      ,'D63001'
--      ,'L07001'
--      ,B.PRDT_ID
--    union
--    select
--      A.ORG_ID
--      ,i_cWorkDate
--      ,A.CYC
--      ,'D63001'
--      ,'L07001'
--      ,B.PRDT_ID
--      ,sum(coalesce(abs(A.BAL),0))
--    from DW_CARD_ACCT A
--      left outer join DW_ACCT_PRDT B
--        on A.ACCT_ID=B.ACCT_ID
--    where A.BAL < 0
--      and A.ACCT_ST = 'D33001'
--      and (A.LOAN_AC_ID = '125302'
--        or A.LOAN_AC_ID = '125304')
--    group by A.ORG_ID
--      ,i_cWorkDate
--      ,A.CYC
--      ,'D63001'
--      ,'L07001'
--      ,B.PRDT_ID
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'35');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,31);--

    --(11)、各项贷款利息计算表(报表十七)
    SET v_cAction='delete from DW_LOAN_INTEREST_SUM';--
    delete from DW_LOAN_INTEREST_SUM where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'36');--
    commit;--

    insert into DW_LOAN_INTEREST_SUM
    (
      ORG_ID                     --机构
      ,TIME_ID                   --时间
      ,CYC                       --币种
      ,AC_ID                     --贷款科目
      ,BAL_AMT                   --余额
      ,MON_BAL                   --积数
      ,FUTURE_INT                --应计利息
      ,INTERESTE                 --贷款利息
      ,RECEIVE_INT               --已收利息
      ,IN_DUE_INT                --表内应收利息
      ,OUT_DUE_INT               --表外应收利息
    )
    select
      ORG_ID
      ,TIME_ID
      ,CYC
      ,AC_ID
      ,sum(coalesce(BAL_AMT    ,0))
      ,sum(coalesce(MON_BAL    ,0))
      ,sum(coalesce(FUTURE_INT ,0))
      ,sum(coalesce(BAL_AMT    ,0) * coalesce(RATE,0))
      ,sum(coalesce(RECEIVE_INT,0))
      ,sum(coalesce(IN_DUE_INT ,0))
      ,sum(coalesce(OUT_DUE_INT,0))
    from DW_LOANACCT_ANA_INTEGRATE
    where TIME_ID = i_cWorkDate
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,AC_ID
    union all
    select
      A.ORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,A.AC_ID
      ,sum(case when CDFG='2' then -1 * coalesce(A.BAL,0) else coalesce(A.BAL,0) end)
      ,0
      ,0
      ,0
      ,0
      ,0
      ,0
    from V_DW_GL_ACCT A
    where A.ACCT_ST = '1'
      and (A.AC_ID like '1289%' or A.AC_ID like '2419%' or A.AC_ID like '1392%')
      and A.BAL > 0
    group by A.ORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,A.AC_ID
      ,0
    union all
    select
      A.CORG_ID AS ORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,A.LOAN_AC_ID
      ,sum(coalesce(abs(A.BAL),0))
      ,0
      ,0
      ,0
      ,0
      ,sum(IN_DUE_INT)   --2013年10月29日 辉耀提供规则
      ,sum(OUT_DUE_INT)  --2013年10月29日 辉耀提供规则
    from V_DW_CARD_ACCT A
    where A.BAL < 0
      --and A.ACCT_ST = 'D33001'
      --and (A.LOAN_AC_ID = '125304')
    group by A.CORG_ID
      ,i_cWorkDate
      ,A.CYC
      ,A.LOAN_AC_ID
      ,0
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'37');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,32);--
    insert into DW_LOAN_INTEREST_SUM
    (
      ORG_ID                    --机构
      ,TIME_ID                   --时间
      ,CYC                       --币种
      ,AC_ID                     --贷款科目
      ,BAL_AMT                   --余额
      ,MON_BAL                   --积数
      ,FUTURE_INT                --应计利息
      ,INTERESTE                 --贷款利息
      ,RECEIVE_INT               --已收利息
      ,IN_DUE_INT                --表内应收利息
      ,OUT_DUE_INT               --表外应收利息
    )
    select
      B.LVL1_NO
      ,A.TIME_ID
      ,A.CYC
      ,A.AC_ID
      ,sum(coalesce(A.BAL_AMT    ,0))
      ,sum(coalesce(A.MON_BAL    ,0))
      ,sum(coalesce(A.FUTURE_INT ,0))
      ,sum(coalesce(A.INTERESTE  ,0))
      ,sum(coalesce(A.RECEIVE_INT,0))
      ,sum(coalesce(A.IN_DUE_INT ,0))
      ,sum(coalesce(A.OUT_DUE_INT,0))
    from DW_LOAN_INTEREST_SUM A
      left outer join DIM_ORG B
        on A.ORG_ID=B.LVL0_NO
    where TIME_ID = i_cWorkDate
    group by B.LVL1_NO
      ,A.TIME_ID
      ,A.CYC
      ,A.AC_ID
    union all
    select
      B.LVL_2
      ,A.TIME_ID
      ,A.CYC
      ,A.AC_ID
      ,sum(coalesce(A.BAL_AMT    ,0))
      ,sum(coalesce(A.MON_BAL    ,0))
      ,sum(coalesce(A.FUTURE_INT ,0))
      ,sum(coalesce(A.INTERESTE  ,0))
      ,sum(coalesce(A.RECEIVE_INT,0))
      ,sum(coalesce(A.IN_DUE_INT ,0))
      ,sum(coalesce(A.OUT_DUE_INT,0))
    from DW_LOAN_INTEREST_SUM A
      left outer join DIM_ORG B
        on A.ORG_ID=B.LVL0_NO
    where TIME_ID = i_cWorkDate
    group by B.LVL_2
      ,A.TIME_ID
      ,A.CYC
      ,A.AC_ID
    ;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,33);--
    --(12)、各行贷款综合收息率计算(报表十八)
    SET v_cTableName='DW_BRANCH_RECINT_SUM.DELETE';--
    SET v_cAction='delete from DW_BRANCH_RECINT_SUM';--
    delete from DW_BRANCH_RECINT_SUM where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'38');--
    commit;--

    --------从贷款分户明细即流水中取的5011，由于收回往年挂息(1321)、往年挂息今年转表外(1321-107或217)，所以分户中会较多
    ------insert into DW_BRANCH_RECINT_SUM
    ------(
    ------   ORG_ID               --机构
    ------  ,TIME_ID              --时间
    ------  ,CYC                  --币种
    ------  ,AC_ID                --利息科目
    ------  ,RECEIVE_INT          --已收利息
    ------  ,MON_BAL              --利息收入
    ------  ,IN_DUE_INT           --表内应收利息
    ------  ,OUT_DUE_INT          --表外应收利息
    ------)
    ------select
    ------   ORG_ID
    ------  ,TIME_ID
    ------  ,CYC
    ------  ,AC_ID
    ------  ,sum(coalesce(RECEIVE_INT,0))
    ------  ,sum(coalesce(MON_BAL    ,0))
    ------  ,sum(coalesce(IN_DUE_INT ,0))
    ------  ,sum(coalesce(OUT_DUE_INT,0))
    ------from
    ------  (
    ------    select
    ------      INAABRNO                                                                         as ORG_ID
    ------      ,i_cWorkDate                                                                     as TIME_ID
    ------      ,INAACCYC                                                                        as CYC
    ------      ,INAAACID                                                                        as AC_ID
    ------      ,0                                                                               as RECEIVE_INT
    ------      ,sum(case when INBZDATE > v_cLastYLASTDay8 then coalesce(INAFIAM2,0) else 0 end) as MON_BAL
    ------      ,sum(case when INAKFLAG='1' then coalesce(INABBLNC,0) else 0 end)                as IN_DUE_INT
    ------      ,sum(case when INAKFLAG='0' then coalesce(INABBLNC,0) else 0 end)                as OUT_DUE_INT
    ------    from DDS_KER_BLFMPMIN
    ------    ------where INBZDATE > v_cLastYLASTDay8
    ------    group by INAABRNO
    ------      ,i_cWorkDate
    ------      ,INAACCYC
    ------      ,INAAACID
    ------    union
    ------    select
    ------      AR12BRNO                                                                         as ORG_ID
    ------      ,i_cWorkDate                                                                     as TIME_ID
    ------      ,AR02CCYC                                                                        as CYC
    ------      ,case when AR10CDFG='1' then AR08ACID when AR10CDFG='1' then AR09ACID end        as AC_ID
    ------      ,0                                                                               as RECEIVE_INT
    ------      ,0                                                                               as MON_BAL
    ------      ,sum(case when AR10CDFG='1' then coalesce(AR07AMT,0) else 0 end)                 as IN_DUE_INT
    ------      ,sum(case when AR10CDFG='0' then coalesce(AR07AMT,0) else 0 end)                 as OUT_DUE_INT
    ------    from NDS_KER_ACFTCCAR
    ------    group by AR12BRNO
    ------      ,i_cWorkDate
    ------      ,AR02CCYC
    ------      ,case when AR10CDFG='1' then AR08ACID when AR10CDFG='1' then AR09ACID end
    ------    union
    ------    select
    ------      ORG_ID                                                                           as ORG_ID
    ------      ,TIME_ID                                                                         as TIME_ID
    ------      ,CYC                                                                             as CYC
    ------      ,AC_ID                                                                           as AC_ID
    ------      ,RNARIAM2 + RNATIAM2 + RNBMIAM2 + RNBNIAM2 + RNCCIAM2                            as RECEIVE_INT
    ------      ,0                                                                               as MON_BAL
    ------      ,0                                                                               as IN_DUE_INT
    ------      ,0                                                                               as OUT_DUE_INT
    ------    from
    ------    (
    ------      select
    ------        RNAGBRNO                                                                      ORG_ID
    ------        ,i_cWorkDate                                                                  TIME_ID
    ------        ,RNAACCYC                                                                     CYC
    ------        ,'5011'                                                                       AC_ID
    ------        ,sum(case when coalesce(RNARIAM2,0)>=0 then coalesce(RNARIAM2,0) else 0 end)  RNARIAM2
    ------        ,sum(case when coalesce(RNATIAM2,0)>=0 then coalesce(RNATIAM2,0) else 0 end)  RNATIAM2
    ------        ,sum(case when coalesce(RNBMIAM2,0)>=0 then coalesce(RNBMIAM2,0) else 0 end)  RNBMIAM2
    ------        ,sum(case when coalesce(RNBNIAM2,0)>=0 then coalesce(RNBNIAM2,0) else 0 end)  RNBNIAM2
    ------        ,sum(case when coalesce(RNCCIAM2,0)>=0 then coalesce(RNCCIAM2,0) else 0 end)  RNCCIAM2
    ------      from DDS_KER_BLFMMTRN
    ------      where RNAUDATE>v_cLastYLASTDay8
    ------        and RNAUDATE<=v_cWorkDate8
    ------        and RNAAWBFG='1'
    ------        and (RNAANTCD!='5104' and RNAANTCD!='5107')
    ------      group by RNAGBRNO
    ------        ,i_cWorkDate
    ------        ,RNAACCYC
    ------        ,'5011'
    ------    ) B
    ------  ) A
    ------group by ORG_ID
    ------  ,TIME_ID
    ------  ,CYC
    ------  ,AC_ID
    ------;--

    if(v_cWorkDate8 <> v_cCurYLASTDay8)
    then
      SET v_cTableName='DW_BRANCH_RECINT_SUM.INSERT1';--
      --从总帐取的5011，由于未含收回往年挂息(1321)、冲减往年挂息今年转表外(1321-107或217)，所以比分户中统计的少
      insert into DW_BRANCH_RECINT_SUM
      (
         ORG_ID               --机构
        ,TIME_ID              --时间
        ,CYC                  --币种
        ,AC_ID                --利息科目
        ,RECEIVE_INT          --已收利息
        ,MON_BAL              --利息收入
        ,IN_DUE_INT           --表内应收利息
        ,OUT_DUE_INT          --表外应收利息
      )
      select
         ORG_ID
        ,TIME_ID
        ,CYC
        ,AC_ID
        ,sum(coalesce(RECEIVE_INT,0))
        ,sum(coalesce(MON_BAL    ,0))
        ,sum(coalesce(IN_DUE_INT ,0))
        ,sum(coalesce(OUT_DUE_INT,0))
      from
        (
          select
            INAABRNO                                                                         as ORG_ID
            ,i_cWorkDate                                                                     as TIME_ID
            ,INAACCYC                                                                        as CYC
            ,INAAACID                                                                        as AC_ID
            ,0                                                                               as RECEIVE_INT
            ,sum(case when INBZDATE > v_cLastYLASTDay8 then coalesce(INAFIAM2,0) else 0 end) as MON_BAL
            ,sum(case when INAKFLAG='1' then coalesce(INABBLNC,0) else 0 end)                as IN_DUE_INT
            ,sum(case when INAKFLAG='0' then coalesce(INABBLNC,0) else 0 end)                as OUT_DUE_INT
          from DDS_KER_BLFMPMIN		-- 贷款利息文件
          ------where INBZDATE > v_cLastYLASTDay8
          group by INAABRNO
            ,i_cWorkDate
            ,INAACCYC
            ,INAAACID
          union all
          --2013年10月28日 修改，曾辉耀
          select
             T.CORG_ID   as ORG_ID
            ,i_cWorkDate as TIME_ID
            ,T.CYC       as CYC
            , '132123'   as AC_ID	-- 应收利息科目  表外利息科目
            ,0          as RECEIVE_INT
            ,0          as MON_BAL
            ,sum(IN_DUE_INT)   as IN_DUE_INT	-- 尚欠利息金额
            ,0   as OUT_DUE_INT	                -- 表内外标志   1-表内 2－表外
          from V_DW_CARD_ACCT T
	        WHERE T.IN_DUE_INT>0
          group by T.CORG_ID, T.CYC
          UNION ALL
          select
             T.CORG_ID   as ORG_ID
            ,i_cWorkDate as TIME_ID
            ,T.CYC      as CYC
            ,'10723'    as AC_ID	-- 应收利息科目  表外利息科目
            ,0          as RECEIVE_INT
            ,0          as MON_BAL
            ,0          as IN_DUE_INT	-- 尚欠利息金额
            ,sum(coalesce(T.OUT_DUE_INT,0))   as OUT_DUE_INT	-- 表内外标志   1-表内 2－表外
          from V_DW_CARD_ACCT T
	        WHERE T.OUT_DUE_INT>0
          group by T.CORG_ID, T.CYC
          union all
          select
            PARTY_ID                                                                         as ORG_ID
            ,i_cWorkDate                                                                     as TIME_ID
            ,BASE_CURRENCY_CD                                                                as CYC
            ,AC_ID                                                                           as AC_ID
            ,sum(coalesce(END_CREDIT_BAL,0) - coalesce(END_DEBIT_BAL,0))                     as RECEIVE_INT
            ,0                                                                               as MON_BAL
            ,0                                                                               as IN_DUE_INT
            ,0                                                                               as OUT_DUE_INT
          from DW_GL_BAL		-- 总账余额表
          where AC_ID in ('5011','5012')
            and DATA_DT=v_cWorkDate8
            and BASE_CURRENCY_CD=CURRENCY_CD
            and right(trim(PARTY_ID),3) != '999'
            --and BASE_CURRENCY_CD='CNY'
          group by PARTY_ID
            ,i_cWorkDate
            ,BASE_CURRENCY_CD
            ,AC_ID
        ) A
      group by ORG_ID
        ,TIME_ID
        ,CYC
        ,AC_ID
      ;--
    else
      SET v_cTableName='DW_BRANCH_RECINT_SUM.INSERT2';--
      --从总帐取的5011，由于未含收回往年挂息(1321)、冲减往年挂息今年转表外(1321-107或217)，所以比分户中统计的少
      insert into DW_BRANCH_RECINT_SUM
      (
         ORG_ID               --机构
        ,TIME_ID              --时间
        ,CYC                  --币种
        ,AC_ID                --利息科目
        ,RECEIVE_INT          --已收利息
        ,MON_BAL              --利息收入
        ,IN_DUE_INT           --表内应收利息
        ,OUT_DUE_INT          --表外应收利息
      )
      select
         ORG_ID
        ,TIME_ID
        ,CYC
        ,AC_ID
        ,sum(coalesce(RECEIVE_INT,0))
        ,sum(coalesce(MON_BAL    ,0))
        ,sum(coalesce(IN_DUE_INT ,0))
        ,sum(coalesce(OUT_DUE_INT,0))
      from
        (
          select
            INAABRNO                                                                         as ORG_ID
            ,i_cWorkDate                                                                     as TIME_ID
            ,INAACCYC                                                                        as CYC
            ,INAAACID                                                                        as AC_ID
            ,0                                                                               as RECEIVE_INT
            ,sum(case when INBZDATE > v_cLastYLASTDay8 then coalesce(INAFIAM2,0) else 0 end) as MON_BAL
            ,sum(case when INAKFLAG='1' then coalesce(INABBLNC,0) else 0 end)                as IN_DUE_INT
            ,sum(case when INAKFLAG='0' then coalesce(INABBLNC,0) else 0 end)                as OUT_DUE_INT
          from DDS_KER_BLFMPMIN		-- 贷款利息文件
          ------where INBZDATE > v_cLastYLASTDay8
          group by INAABRNO
            ,i_cWorkDate
            ,INAACCYC
            ,INAAACID
          union all
          --2013年10月28日 修改，zenghuiyao
          select
             T.CORG_ID    as ORG_ID
            ,i_cWorkDate  as TIME_ID
            ,T.CYC        as CYC
            ,'132123'     as AC_ID	-- 应收利息科目  表外利息科目
            ,0  as RECEIVE_INT
            ,0  as MON_BAL
            ,sum(coalesce(T.IN_DUE_INT,0))   as IN_DUE_INT	-- 尚欠利息金额
            ,0  as OUT_DUE_INT	                                -- 表内外标志   1-表内 2－表外
          from V_DW_CARD_ACCT T
          where IN_DUE_INT>0
          group by CORG_ID,
            CYC
          union all
          --2013年10月28日 修改，zenghuiyao
          select
             T.CORG_ID   as ORG_ID
            ,i_cWorkDate as TIME_ID
            ,T.CYC       as CYC
            ,'10723'        as AC_ID	-- 应收利息科目  表外利息科目
            ,0   as RECEIVE_INT
            ,0   as MON_BAL
            ,0   as IN_DUE_INT	        -- 尚欠利息金额
            ,sum(coalesce(T.OUT_DUE_INT,0))  as OUT_DUE_INT	-- 表内外标志   1-表内 2－表外
          from V_DW_CARD_ACCT T
          where OUT_DUE_INT>0
          group by CORG_ID,
            CYC
          union all
    --20130508 修改年终结转取数
--          select
--            ORG_ID                                                                           as ORG_ID
--            ,i_cWorkDate                                                                     as TIME_ID
--            ,CYC                                                                             as CYC
--            ,'5011'                                                                          as AC_ID
--            ,sum(coalesce(END_CREDIT_BAL,0) - coalesce(END_DEBIT_BAL,0))                     as RECEIVE_INT
--            ,0                                                                               as MON_BAL
--            ,0                                                                               as IN_DUE_INT
--            ,0                                                                               as OUT_DUE_INT
--          from DW_GL_YEND_BAL
--          where (AC_ID like '5011%' or AC_ID like '5012%')
--            and DT=v_cWorkDate8
--            and right(trim(ORG_ID),3) != '999'
--            --and BASE_CURRENCY_CD='CNY'
--          group by ORG_ID
--            ,i_cWorkDate
--            ,CYC
--            ,'5011'
--            ,0
--
          select
            ORG_ID                                                                           as ORG_ID
            ,i_cWorkDate                                                                     as TIME_ID
            ,CYC                                                                             as CYC
            ,'5011'                                                                          as AC_ID
            ,sum(coalesce(END_CREDIT_BAL,0) - coalesce(END_DEBIT_BAL,0))                     as RECEIVE_INT
            ,0                                                                               as MON_BAL
            ,0                                                                               as IN_DUE_INT
            ,0                                                                               as OUT_DUE_INT
          from --DW_GL_ALL_BAL A
               DW_GAS_BAL --20131202
          where AC_ID in (select C.KHDAACID from DDS_KER_BGFDKHDZ C
              where C.KHDBACID like '5011%' or C.KHDBACID like '5012%')
            and DATA_DT=v_cWorkDate8
            and right(trim(ORG_ID),3) != '999'
            and CYC not in ('T01','U01','R01')
            --and BASE_CURRENCY_CD='CNY'
          group by ORG_ID
            ,i_cWorkDate
            ,CYC
            ,'5011'
            ,0
        ) A
      group by ORG_ID
        ,TIME_ID
        ,CYC
        ,AC_ID
      ;--
    end if;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,34);--
    SET v_cTableName='DW_BRANCH_RECINT_SUM.T01';--
    insert into DW_BRANCH_RECINT_SUM
      (
         ORG_ID               --机构
        ,TIME_ID              --时间
        ,CYC                  --币种
        ,AC_ID                --利息科目
        ,RECEIVE_INT          --已收利息
        ,MON_BAL              --利息收入
        ,IN_DUE_INT           --表内应收利息
        ,OUT_DUE_INT          --表外应收利息
      )
    select ORG_ID               --机构
        ,TIME_ID              --时间
        ,'T01'                  --币种
        ,AC_ID                --利息科目
        ,sum(case when CYC='CNY' then RECEIVE_INT else round(FN_DAY_TO_RMB(v_cWorkDate8,CYC,RECEIVE_INT),2) end)   --已收利息
        ,sum(case when CYC='CNY' then MON_BAL else round(FN_DAY_TO_RMB(v_cWorkDate8,CYC,MON_BAL),2) end)            --利息收入
        ,sum(case when CYC='CNY' then IN_DUE_INT else round(FN_DAY_TO_RMB(v_cWorkDate8,CYC,IN_DUE_INT),2) end)      --表内应收利息
        ,sum(case when CYC='CNY' then OUT_DUE_INT else round(FN_DAY_TO_RMB(v_cWorkDate8,CYC,OUT_DUE_INT),2) end)   --表外应收利息
    from DW_BRANCH_RECINT_SUM
    where TIME_ID=i_cWorkDate
    and CYC not in ('T01','U01','R01')
    group by ORG_ID,TIME_ID,AC_ID;--
    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'39');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,35);--

    --(13)、贷款执行利率、上浮幅度测算表(报表十九)
    --去除贴现、转贴现，去除银行承兑汇票垫款
    SET v_cAction='delete from DW_LOAN_RATE_SUM_1';--
    delete from DW_LOAN_RATE_SUM_1 where TIME_ID=v_cWorkDate8;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'40');--
    commit;--

    SET v_cAction='insert into DW_LOAN_RATE_SUM_1';--

    insert into DW_LOAN_RATE_SUM_1
    (
      ORG_ID                                 --机构
      ,TIME_ID                               --时间
      ,CYC                                   --币种
      ,CU_FL_NEW                             --个人/公司  1-个人   2-公司
      ,TERM_CODE                             --期限段码   1-半年以内 2-半年至1年 3-一年以上
      ,ASS_TP                                --担保方式
      ,TOTAL_BAL                             --贷款总余额
      ,BAL_AMT                               --余额
      ,MON_BAL                               --积数
      ,MONRATE_BAL                           --贷款利率积数
      ,FLOAT_BAL                             --贷款浮动利率积数
    )
    select
      ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,CU_FL
      ,(case
          when TERM_ID<=6    then 'L08001'
          when TERM_ID<=12    then 'L08002'
          else 'L08003'
        end) as TERM_CODE
      ,ASS_TP
      ,0
      ,sum(coalesce(BAL_AMT,0))
      ,sum(coalesce(MON_BAL,0))
      ,sum(coalesce(MON_BAL,0) * coalesce(RATE,0))
      ,sum(coalesce(MON_BAL,0) * (coalesce(RATE,0) - coalesce(BASIC_RATE,0)) / (case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end))
    from
    (
      select
        ORG_ID
        ,CYC
        ,CU_FL
--        ,MONTH_BETWEEN(ED_DT,BG_DT) as TERM_ID
,MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD')) as TERM_ID
        ,ASS_TP
        ,BAL_AMT
        ,MON_BAL
        ,RATE
        ,BASIC_RATE
      from DW_LOANACCT_ANA_INTEGRATE
      where  ac_id in
(select distinct khdbacid from DDS_KER_BGFDKHDZ  where left(KHDAACID,4) in ('1301','1302','1303' ,'1304','1308'))
and TIME_ID = i_cWorkDate
    ) A
    group by ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,CU_FL
      ,(case
          when TERM_ID<=6    then 'L08001'
          when TERM_ID<=12    then 'L08002'
          else 'L08003'
        end)
      ,ASS_TP
      ,0
    ;--

    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,36);--
    --这里有问题，主要是贷款总余额的币种折算问题
    SET v_cAction='update DW_LOAN_RATE_SUM_1';--
DECLARE BAL1 DECIMAL(16,2);
SELECT sum(coalesce(BAL_AMT,0)) INTO BAL1 from DW_LOANACCT_ANA_INTEGRATE where TIME_ID = i_cWorkDate ;

UPDATE DW_LOAN_RATE_SUM_1 SET TOTAL_BAL = BAL1 WHERE TIME_ID = v_cWorkDate8 ;

--   update DW_LOAN_RATE_SUM_1
--    set TOTAL_BAL = (select sum(coalesce(BAL_AMT,0)) from DW_LOANACCT_ANA_INTEGRATE where TIME_ID = i_cWorkDate)
--    where TIME_ID = v_cWorkDate8
--    ;

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'41');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,37);--
--    insert into DW_LOAN_RATE_SUM_1
--    (
--      ORG_ID                                 --机构
--      ,TIME_ID                               --时间
--      ,CYC                                   --币种
--      ,CU_FL_NEW                             --个人/公司  1-个人   2-公司
--      ,TERM_CODE                             --期限段码   1-半年以内 2-半年至1年 3-一年以上
--      ,ASS_TP                                --担保方式
--      ,TOTAL_BAL                             --贷款总余额
--      ,BAL_AMT                               --余额
--      ,MON_BAL                               --积数
--      ,MONRATE_BAL                           --贷款利率积数
--      ,FLOAT_BAL                             --贷款浮动利率积数
--    )
--    select
--      B.LVL_2
--      ,A.TIME_ID
--      ,A.CYC
--      ,A.CU_FL_NEW
--      ,A.TERM_CODE
--      ,A.ASS_TP
--      ,A.TOTAL_BAL
--      ,sum(coalesce(A.BAL_AMT    ,0))
--      ,sum(coalesce(A.MON_BAL    ,0))
--      ,sum(coalesce(A.MONRATE_BAL,0))
--      ,sum(coalesce(A.FLOAT_BAL  ,0))
--    from DW_LOAN_RATE_SUM_1 A
--      left outer join DIM_ORG B
--        on A.ORG_ID=B.LVL0_NO
--    where A.TIME_ID = v_cWorkDate8
--    group by B.LVL_2
--      ,A.TIME_ID
--      ,A.CYC
--      ,A.CU_FL_NEW
--      ,A.TERM_CODE
--      ,A.ASS_TP
--      ,A.TOTAL_BAL
--    union
--    select
--      B.LVL1_NO
--      ,A.TIME_ID
--      ,A.CYC
--      ,A.CU_FL_NEW
--      ,A.TERM_CODE
--      ,A.ASS_TP
--      ,A.TOTAL_BAL
--      ,sum(coalesce(A.BAL_AMT    ,0))
--      ,sum(coalesce(A.MON_BAL    ,0))
--      ,sum(coalesce(A.MONRATE_BAL,0))
--      ,sum(coalesce(A.FLOAT_BAL  ,0))
--    from DW_LOAN_RATE_SUM_1 A
--      left outer join DIM_ORG B
--        on A.ORG_ID=B.LVL0_NO
--    where A.TIME_ID = v_cWorkDate8
--    group by B.LVL1_NO
--      ,A.TIME_ID
--      ,A.CYC
--      ,A.CU_FL_NEW
--      ,A.TERM_CODE
--      ,A.ASS_TP
--      ,A.TOTAL_BAL
--    ;--
--
--    --记录日志
--    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'41');--
--    commit;--

    --(14)、各项贷款执行利率、上浮幅度情况汇总(报表二十、二十一)
	  -- 先删除当天数据然后再插入，以防重跑
	  SET v_cAction='delete from DW_BRANCH_RECINT_SUM_2';--
    delete from DW_LOAN_RATE_SUM_2 where TIME_ID=i_cWorkDate;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'42');--
    commit;--

    insert into DW_LOAN_RATE_SUM_2
    (
      ORG_ID                       --机构
      ,TIME_ID                     --时间
      ,CYC                         --币种
      ,DATA_TYPE                   --数据标识        1--全部，T83001 T83002--个人、公司
      ,TOTAL_BAL                   --贷款总余额
      ,BAL_AMT                     --余额
      ,MON_BAL                     --积数
      ,MONRATE_BAL                 --贷款利率积数
      ,FLOAT_BAL                   --贷款浮动利率积数
    )
    --个人、公司部分
    select
      ORG_ID
      ,TIME_ID
      ,CYC
      ,CU_FL			-- 企业/个人标志
      ,0
      ,sum(coalesce(BAL_AMT,0))
      ,sum(coalesce(MON_BAL,0))
      ,sum(coalesce(MON_BAL,0) * coalesce(RATE,0))
      ,sum(coalesce(MON_BAL,0) * (coalesce(RATE,0) - coalesce(BASIC_RATE,0)) / (case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end))
    from DW_LOANACCT_ANA_INTEGRATE		-- 贷款客户机构分析表   Loan_Itegrate_Base_D   47
    where TIME_ID = i_cWorkDate and ac_id in
(select distinct khdbacid from DDS_KER_BGFDKHDZ  where left(KHDAACID,4) in ('1301','1302','1303' ,'1304','1308'))
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,CU_FL
      ,0
    union all
    --全部
    select
      ORG_ID
      ,TIME_ID
      ,CYC
      ,'1'		 --数据标识 1--全部，T83001 T83002--个人、公司
      ,0
      ,sum(coalesce(BAL_AMT,0))
      ,sum(coalesce(MON_BAL,0))
      ,sum(coalesce(MON_BAL,0) * coalesce(RATE,0))
      ,sum(coalesce(MON_BAL,0) * (coalesce(RATE,0) - coalesce(BASIC_RATE,0)) / (case when coalesce(BASIC_RATE,1)=0 then 1 else coalesce(BASIC_RATE,1) end))
    from DW_LOANACCT_ANA_INTEGRATE	-- 贷款客户机构分析表   Loan_Itegrate_Base_D   47
    where TIME_ID = i_cWorkDate and ac_id in
(select distinct khdbacid from DDS_KER_BGFDKHDZ  where left(KHDAACID,4) in ('1301','1302','1303' ,'1304','1308'))
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,'1'
      ,0
    ;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,38);--
    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'43');--
    commit;--

    --20090611新加的，数据未跑
    --(15)、人民币贴现利率水平表(报表十五)
    SET v_cAction='delete from DW_LOAN_RATE_ANA_3';--
    delete from DW_LOAN_RATE_ANA_3 where TIME_ID=v_cWorkDate8;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'42');--
    commit;--

    insert into DW_LOAN_RATE_ANA_3
    (
      ORG_ID                        --机构
      ,TIME_ID                      --时间
      ,CYC                          --币种
      ,TERM_CODE                    --期限段码(1 '3个月（含）以内',2 '3—6个月',3 '6个月以上')
      ,TPPN_TP                      --汇票类型(汇票类型 'D25001' '银行承兑汇票' 'D25002' '商业承兑汇票')
      ,INVT_TP                      --贴现类型(交易类型 'D55001' '贴现' 'D55002' '转贴现买断转出' 'D55003' '买断式再贴现' 'D55004' '转贴现买断转入')
      ,MAX_RATE                     --最高利率
      ,MIN_RATE                     --最低利率
      ,MAR_AMT                      --最高利率余额
      ,MIR_AMT                      --最低利率余额
      ,INTERESTE                    --贴现利息
      ,BAL_AMT                      --贴现余额
    )

  select
      ORG_ID
     ,v_cWorkDate8
     ,CYC
     ,TERM_CODE
     ,TPPN_TP
     ,INVT_TP
     ,MAX(RATE)
     ,MIN(RATE)
     ,0
     ,0
     ,SUM(INTEREST)
     ,SUM(BAL_AMT )
  from
    (
         select
            ORG_ID
           ,CYC
           ,(case
               when MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD'))  <=3  then '1'
               when MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD')) >3
                and MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD')) <=6  then '2'
               else '3'
             end) as TERM_CODE
           ,TPPN_TP
           ,INVT_TP
           ,RATE
           ,coalesce(GIVE_AMT,0) * coalesce(RATE,0)  AS INTEREST
           ,coalesce(GIVE_AMT,0)                     AS BAL_AMT
         from DW_LOANACCT_ANA_INTEGRATE
         where TIME_ID = i_cWorkDate
           and TPPN_TP like 'D25%'
           and BG_DT >= v_cMonFirstDay
      ) aa

    group by
       ORG_ID
      ,v_cWorkDate8
      ,CYC
      ,TERM_CODE
      ,TPPN_TP
      ,INVT_TP
    ;--

    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'43');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,39);--
MERGE INTO DW_LOAN_RATE_ANA_3 AA
USING (
      select
         B.TPPN_TP
        ,B.INVT_TP
        ,sum(case when B.RATE=A.MAX_RATE then coalesce(GIVE_AMT,0) else 0 end) AS  MAR1
        ,sum(case when B.RATE=A.MIN_RATE then coalesce(GIVE_AMT,0) else 0 end) AS  MIR1
    FROM DW_LOAN_RATE_ANA_3 A JOIN DW_LOANACCT_ANA_INTEGRATE B
        ON  A.ORG_ID   = B.ORG_ID
        and A.CYC      = B.CYC
        and A.TERM_CODE=(case when MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD')) <= 3  then '1'
                              when MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD')) > 3
                               and MONTH_BETWEEN(to_date(ED_DT,'YYYYMMDD'),to_date(BG_DT,'YYYYMMDD')) <= 6  then '2'
                              else '3' end)
        and A.TPPN_TP  =B.TPPN_TP
        and A.INVT_TP  =B.INVT_TP
        and B.TIME_ID = i_cWorkDate
        and B.BG_DT >= v_cMonFirstDay
        and B.BAL_AMT >0
group by B.TPPN_TP,B.INVT_TP
) BB
ON  AA.TPPN_TP  = BB.TPPN_TP
AND AA.INVT_TP  = BB.INVT_TP
WHEN MATCHED AND AA.TIME_ID=v_cWorkDate8 THEN
UPDATE SET MAR_AMT= BB.MAR1,
           MIR_AMT= BB.MIR1  ;


    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'44');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,40);--
exec 'set hive.optimize.index.filter = false';
    insert into DW_LOAN_RATE_ANA_3
    (
      ORG_ID                        --机构
      ,TIME_ID                      --时间
      ,CYC                          --币种
      ,TERM_CODE                    --期限段码
      ,TPPN_TP                      --汇票类型
      ,INVT_TP                      --贴现类型(交易类型)
      ,MAX_RATE                     --最高利率
      ,MIN_RATE                     --最低利率
      ,MAR_AMT                      --最高利率余额
      ,MIR_AMT                      --最低利率余额
      ,INTERESTE                    --贴现利息
      ,BAL_AMT                      --贴现余额
    )
    select
      ORG_ID                        --机构
      ,TIME_ID                      --时间
      ,CYC                          --币种
      ,TERM_CODE                    --期限段码
      ,TPPN_TP                      --汇票类型
      ,INVT_TP                      --贴现类型(交易类型)
      ,MAX_RATE                     --最高利率
      ,MIN_RATE                     --最低利率
      ,sum(coalesce(MAR_AMT,0))     --最高利率余额
      ,sum(coalesce(MIR_AMT,0))     --最低利率余额
      ,INTERESTE                    --贴现利息
      ,BAL_AMT                      --贴现余额
    from
    (
      select
         C.ORG_ID                           as ORG_ID
        ,C.TIME_ID                          as TIME_ID
        ,C.CYC                              as CYC
        ,C.TERM_CODE                        as TERM_CODE
        ,C.TPPN_TP                          as TPPN_TP
        ,C.INVT_TP                          as INVT_TP
        ,C.MAX_RATE                         as MAX_RATE
        ,C.MIN_RATE                         as MIN_RATE
        ,sum(coalesce(MAR_AMT,0))           as MAR_AMT
        ,0                                  as MIR_AMT
        ,C.INTERESTE                        as INTERESTE
        ,C.BAL_AMT                          as BAL_AMT
      from
      (
        select
          B.LVL1_NO                            as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.TPPN_TP                           as TPPN_TP
          ,A.INVT_TP                           as INVT_TP
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_3 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL1_NO
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.TPPN_TP
          ,A.INVT_TP
      ) as C
      left outer join
        (
          select
            B.LVL1_NO                    as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.TPPN_TP                   as TPPN_TP
            ,A.INVT_TP                   as INVT_TP
            ,A.MAX_RATE                  as MAX_RATE
            ,A.MAR_AMT                   as MAR_AMT
          from DW_LOAN_RATE_ANA_3 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as D
        on C.ORG_ID  =D.ORG_ID
          and C.TIME_ID  =D.TIME_ID
          and C.CYC      =D.CYC
          and C.TERM_CODE=D.TERM_CODE
          and C.MAX_RATE =D.MAX_RATE
          and C.TPPN_TP  =D.TPPN_TP
          and C.INVT_TP  =D.INVT_TP
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.TPPN_TP
        ,C.INVT_TP
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
      union all
      select
         C.ORG_ID                        as ORG_ID
        ,C.TIME_ID                       as TIME_ID
        ,C.CYC                           as CYC
        ,C.TERM_CODE                     as TERM_CODE
        ,C.TPPN_TP                       as TPPN_TP
        ,C.INVT_TP                       as INVT_TP
        ,C.MAX_RATE                      as MAX_RATE
        ,C.MIN_RATE                      as MIN_RATE
        ,0                               as MAR_AMT
        ,sum(coalesce(MIR_AMT,0))        as MIR_AMT
        ,C.INTERESTE                     as INTERESTE
        ,C.BAL_AMT                       as BAL_AMT
      from
      (
        select
          B.LVL1_NO                            as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.TPPN_TP                           as TPPN_TP
          ,A.INVT_TP                           as INVT_TP
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_3 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL1_NO
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.TPPN_TP
          ,A.INVT_TP
      ) as C
      left outer join
        (
          select
            B.LVL1_NO                    as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.TPPN_TP                   as TPPN_TP
            ,A.INVT_TP                   as INVT_TP
            ,A.MIN_RATE                  as MIN_RATE
            ,A.MIR_AMT                   as MIR_AMT
          from DW_LOAN_RATE_ANA_3 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as D
        on C.ORG_ID  =D.ORG_ID
          and C.TIME_ID  =D.TIME_ID
          and C.CYC      =D.CYC
          and C.TERM_CODE=D.TERM_CODE
          and C.MIN_RATE =D.MIN_RATE
          and C.TPPN_TP  =D.TPPN_TP
          and C.INVT_TP  =D.INVT_TP
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.TPPN_TP
        ,C.INVT_TP
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
    ) as F
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,TERM_CODE
      ,TPPN_TP
      ,INVT_TP
      ,MAX_RATE
      ,MIN_RATE
      ,INTERESTE
      ,BAL_AMT
    union all
    select
      ORG_ID                        --机构
      ,TIME_ID                      --时间
      ,CYC                          --币种
      ,TERM_CODE                    --期限段码
      ,TPPN_TP                      --汇票类型
      ,INVT_TP                      --贴现类型(交易类型)
      ,MAX_RATE                     --最高利率
      ,MIN_RATE                     --最低利率
      ,sum(coalesce(MAR_AMT,0))     --最高利率余额
      ,sum(coalesce(MIR_AMT,0))     --最低利率余额
      ,INTERESTE                    --贴现利息
      ,BAL_AMT                      --贴现余额
    from
    (
      select
         C.ORG_ID                           as ORG_ID
        ,C.TIME_ID                          as TIME_ID
        ,C.CYC                              as CYC
        ,C.TERM_CODE                        as TERM_CODE
        ,C.TPPN_TP                          as TPPN_TP
        ,C.INVT_TP                          as INVT_TP
        ,C.MAX_RATE                         as MAX_RATE
        ,C.MIN_RATE                         as MIN_RATE
        ,sum(coalesce(MAR_AMT,0))           as MAR_AMT
        ,0                                  as MIR_AMT
        ,C.INTERESTE                        as INTERESTE
        ,C.BAL_AMT                          as BAL_AMT
      from
      (
        select
          B.LVL_2                              as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.TPPN_TP                           as TPPN_TP
          ,A.INVT_TP                           as INVT_TP
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_3 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL_2
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.TPPN_TP
          ,A.INVT_TP
      ) as C
      left outer join
        (
          select
            B.LVL_2                      as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.TPPN_TP                   as TPPN_TP
            ,A.INVT_TP                   as INVT_TP
            ,A.MAX_RATE                  as MAX_RATE
            ,A.MAR_AMT                   as MAR_AMT
          from DW_LOAN_RATE_ANA_3 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as D
        on C.ORG_ID  =D.ORG_ID
          and C.TIME_ID  =D.TIME_ID
          and C.CYC      =D.CYC
          and C.TERM_CODE=D.TERM_CODE
          and C.MAX_RATE =D.MAX_RATE
          and C.TPPN_TP  =D.TPPN_TP
          and C.INVT_TP  =D.INVT_TP
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.TPPN_TP
        ,C.INVT_TP
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
      union all
      select
         C.ORG_ID                    as ORG_ID
        ,C.TIME_ID                   as TIME_ID
        ,C.CYC                       as CYC
        ,C.TERM_CODE                 as TERM_CODE
        ,C.TPPN_TP                   as TPPN_TP
        ,C.INVT_TP                   as INVT_TP
        ,C.MAX_RATE                  as MAX_RATE
        ,C.MIN_RATE                  as MIN_RATE
        ,0                           as MAR_AMT
        ,sum(coalesce(MIR_AMT,0))    as MIR_AMT
        ,C.INTERESTE                 as INTERESTE
        ,C.BAL_AMT                   as BAL_AMT
      from
      (
        select
          B.LVL_2                              as ORG_ID
          ,A.TIME_ID                           as TIME_ID
          ,A.CYC                               as CYC
          ,A.TERM_CODE                         as TERM_CODE
          ,A.TPPN_TP                           as TPPN_TP
          ,A.INVT_TP                           as INVT_TP
          ,max(MAX_RATE)                       as MAX_RATE
          ,min(MIN_RATE)                       as MIN_RATE
          ,sum(coalesce(A.INTERESTE,0))        as INTERESTE
          ,sum(coalesce(A.BAL_AMT,0))          as BAL_AMT
        from DW_LOAN_RATE_ANA_3 A
          left outer join DIM_ORG B
            on A.ORG_ID=B.LVL0_NO
        where A.TIME_ID = v_cWorkDate8
        group by B.LVL_2
          ,A.TIME_ID
          ,A.CYC
          ,A.TERM_CODE
          ,A.TPPN_TP
          ,A.INVT_TP
      ) as C
      left outer join
        (
          select
            B.LVL_2                      as ORG_ID
            ,A.TIME_ID                   as TIME_ID
            ,A.CYC                       as CYC
            ,A.TERM_CODE                 as TERM_CODE
            ,A.TPPN_TP                   as TPPN_TP
            ,A.INVT_TP                   as INVT_TP
            ,A.MIN_RATE                  as MIN_RATE
            ,A.MIR_AMT                   as MIR_AMT
          from DW_LOAN_RATE_ANA_3 A
            left outer join DIM_ORG B
              on A.ORG_ID=B.LVL0_NO
          where A.TIME_ID = v_cWorkDate8
        ) as D
        on C.ORG_ID  =D.ORG_ID
          and C.TIME_ID  =D.TIME_ID
          and C.CYC      =D.CYC
          and C.TERM_CODE=D.TERM_CODE
          and C.MIN_RATE =D.MIN_RATE
          and C.TPPN_TP  =D.TPPN_TP
          and C.INVT_TP  =D.INVT_TP
      group by C.ORG_ID
        ,C.TIME_ID
        ,C.CYC
        ,C.TERM_CODE
        ,C.TPPN_TP
        ,C.INVT_TP
        ,C.MAX_RATE
        ,C.MIN_RATE
        ,C.INTERESTE
        ,C.BAL_AMT
        ,0
    ) as F
    group by ORG_ID
      ,TIME_ID
      ,CYC
      ,TERM_CODE
      ,TPPN_TP
      ,INVT_TP
      ,MAX_RATE
      ,MIN_RATE
      ,INTERESTE
      ,BAL_AMT
    ;--

exec 'set hive.optimize.index.filter = true';
    --记录日志
    insert into ETL.PROCLOG(ProcName,WORKDATE,WorkTime,TableName) values(v_cProcName,i_cWorkDate1,CURRENT TIMESTAMP,'45');--
    commit;--
--insert into AABB (HPHM,QFRQ,DQRQ,JE) values('LOAN_REPORT_ANANLYZE_ITEGRATE',I_CWORKDATE1,current_timestamp,41);--
    --处理主过程完毕，写入日志;--
    SET o_cProcState=sqlcode;--
    SET v_cProcState = CHAR(0) || '00000 Success:';--

    SET v_cAction=v_cProcName || ' ... 处理成功';--
    SET o_cAction=v_cAction||'-'||v_cProcState;--
    SET o_cTableName=v_cTableName;--
    SET o_dProcDate=CURRENT TIMESTAMP ;--

END P1;

CREATE OR REPLACE PROCEDURE E4_RPT_DEP_LOAN_STAT (
    IN IN_DATE	VARCHAR(8),
    OUT OUT_SQLCODE	INTEGER,
    OUT OUT_MSG	VARCHAR(255) )
  SPECIFIC "SQL170518101629397"
  LANGUAGE SQL
  NOT DETERMINISTIC
  EXTERNAL ACTION
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
  OLD SAVEPOINT LEVEL
BEGIN
	DECLARE SQLSTATE CHAR(5)  DEFAULT '00000';--
	DECLARE SQLCODE  INTEGER  DEFAULT 0;--
	DECLARE proc_return	INTEGER DEFAULT 0;--
	DECLARE v_yesterday VARCHAR(10) DEFAULT '';			--昨日日期
	DECLARE v_last_mon_end VARCHAR(10) DEFAULT '';		--上月末日期
	DECLARE v_last_year_end VARCHAR(10) DEFAULT '';		--上年末日期
	DECLARE v_year_days	INTEGER DEFAULT 0;				--本年天数

	DECLARE CONTINUE HANDLER FOR NOT FOUND ,SQLEXCEPTION,SQLWARNING
begin
 RETURN 10;
end;

	SET out_sqlcode=SQLCODE;--
	SET out_msg='';--

	--上月末日期、上年末日期 --昨日日期
	SELECT
		LAST_FIN_MON_END,last_fin_year_end,last_day
	INTO
		v_last_mon_end,v_last_year_end,v_yesterday
	FROM
		dim_date
	WHERE
		date_id = in_date
	;--
	IF out_sqlcode = 100 THEN
		SET out_msg = '输入日期[' || in_date || ']日期维表无对应记录';--
		RETURN 10;        --
	ELSEIF out_sqlcode <> 0 THEN
		SET out_msg = '查询日期维表错误';--
		RETURN 10;--
	END IF;--

	--年初到现在天数 用于计算年日均
	SET v_year_days = DAYOFYEAR(TO_DATE(in_date,'YYYYMMDD')) ;--

	--定义账户积数累计临时表存放按科目汇总年积数的数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_DW_ACCT_PDT_YYYYMM
	(
		org_id		string,
		cyc		string,
		AC_ID           string NOT NULL,     --科目
		node_lvl_2      string,
		YEAR_PDT	decimal(26,2)        --年积数
	)
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_DW_ACCT_PDT_YYYYMM] 失败';--
		RETURN 10;--
	END IF;--

		--定义临时表存放银行承兑汇票数据
	DECLARE GLOBAL TEMPORARY table tmp_acceptance_bill
	(
		data_dt string,		--日期
		org_id  string,			--机构
		cyc     string,			--币种
		bal decimal(18,2)		--余额
	)
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_acceptance_bill] 失败';--
		RETURN 10;--
	END IF;--


	--定义临时表存放存款临时数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_dep
	(
		DATA_DT              string  NOT NULL,    --日期
		ORG_ID               string  NOT NULL,    --机构
		CYC                  string  NOT NULL,    --币种
		AC_ID                string  NOT NULL,    --科目
		BAL                  DECIMAL(16,2)   ,    --余额
		YEAR_PDT	     decimal(26,2)        --年积数
	)
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_dep] 失败';--
		RETURN 10;--
	END IF;--

	--存放存款 YEAR_PDT数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_dep_year_pdt
	(
		DATA_DT              string NOT NULL, 			--日期
		ORG_ID               string NOT NULL,			--机构
		CYC                  string NOT NULL,			--币种
		AC_ID                string NOT NULL,			--科目
		node_lvl_2           string,
		BAL                  DECIMAL(16,2)   , 			--余额
		YEAR_PDT			       DECIMAL(26,2)   			--年积数
	)
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_dep_year_pdt] 失败';--
		RETURN 10;--
	END IF;--

	DECLARE GLOBAL TEMPORARY TABLE tmp_loan
	(
		DATA_DT              string NOT NULL,    --日期
		ORG_ID               string NOT NULL,    --机构
		CYC                  string NOT NULL,    --币种
		AC_ID                string NOT NULL,    --科目
		TP_4                 string,             --四级分类
		TP_5                 string,             --五级分类
		BAL                  DECIMAL(16,2),      --余额
		year_pdt             decimal(26,2)       --年积数
	)
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_loan] 失败';--
		RETURN 10;--
	END IF;--

	--存款贷款合并临时表
	DECLARE GLOBAL TEMPORARY TABLE tmp_rpt_dep_loan_tmp LIKE rpt_dep_loan_stat
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_rpt_dep_loan_tmp] 失败';--
		RETURN 10;--
	END IF;--

	--存款、贷款、银行承兑汇票合并总数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_rpt_dep_loan LIKE rpt_dep_loan_stat
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_rpt_dep_loan] 失败';--
		RETURN 10;--
	END IF;--

	--存放比昨日数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_rpt_dep_loan_fr LIKE rpt_dep_loan_stat
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_rpt_dep_loan_fr] 失败';--
		RETURN 10;--
	END IF;--

	--存放比上月数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_rpt_dep_loan_mi LIKE rpt_dep_loan_stat
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_rpt_dep_loan_mi] 失败';--
		RETURN 10;--
	END IF;--

	--存放比年初数据
	DECLARE GLOBAL TEMPORARY TABLE tmp_rpt_dep_loan_end LIKE rpt_dep_loan_stat
	NOT LOGGED WITH REPLACE ON COMMIT PRESERVE ROWS;--
	IF out_sqlcode <> 0 THEN
		SET out_msg = '定义[tmp_rpt_dep_loan_end] 失败';--
		RETURN 10;--
	END IF;--

	--锁目标表
	LOCK TABLE RPT_DEP_LOAN_STAT IN EXCLUSIVE MODE;--
	IF out_sqlcode = 100  THEN
		SET out_sqlcode = 0;--
	ELSEIF out_sqlcode <> 0 THEN
		SET out_msg = '锁[RPT_DEP_LOAN_STAT] 失败';--
		RETURN 10;--
	END IF;--

	IF out_sqlcode = 100  THEN
		SET out_sqlcode = 0;--
	ELSEIF out_sqlcode <> 0 THEN
		SET out_msg = '删除[DM_DEP_ANAST] 失败';--
		RETURN 10;--
	END IF;--


--处理主过程

/**********************************************************************/
/******************    1.存款数据处理       ***************************/
/**********************************************************************/
	--存款需要判账户状态
	--期限，余额需要分段
	--1.1 存款分户数据处理
  -- xulonghai 20150329 根据口径表只从v_DW_ACCT_PDT_YYYYMM统计,去掉各分户

  INSERT INTO session.tmp_dep
	(
		DATA_DT              ,--日期
		ORG_ID               ,--机构
		CYC                  ,--币种
		AC_ID                ,--科目
		BAL                  ,--余额
		YEAR_PDT
	)
  SELECT in_date,
         t1.ORG_ID,
         t1.CCY,
         t1.SBJ,
         SUM(CASE WHEN t3.CALC_RULE = '-'
                    THEN (case when t1.BAL=0 then 0.00 else -ABS(t1.BAL) end)
                    ELSE (case when t1.BAL=0 then 0.00 else  ABS(t1.BAL) end)  END) AS BAL,
         SUM(CASE WHEN t3.CALC_RULE = '-'
                    THEN (case when t1.YEAR_PDT=0 then 0.00 else -ABS(t1.YEAR_PDT) end)
                    ELSE (case when t1.YEAR_PDT=0 then 0.00 else  ABS(t1.YEAR_PDT) end) END) AS YEAR_PDT
  FROM dw_acct_pdt_yyyymm t1
  JOIN DDS_KER_BGFDKHDZ t2
    ON t2.KHDBACID = t1.SBJ
  JOIN STA_CALIBER_DETAIL t3
    ON t3.ITEM_CODE = t2.KHDAACID
   AND t3.CALIBER_CODE = 'DEP_ALL_001'
   AND t3.START_DT_ACTIVE <= in_date
   AND t3.END_DT_ACTIVE > in_date
   AND t3.STATUS = '1'
  GROUP BY t1.ORG_ID,
           t1.CCY,
           t1.SBJ;--


INSERT INTO session.tmp_dep_year_pdt
	(
		DATA_DT        , 			--日期
		ORG_ID         ,			--机构
		CYC            ,			--币种
		AC_ID          ,			--科目
		node_lvl_2     ,      --企业/个人标识
		BAL            , 			--余额
		YEAR_PDT			  --年积数
	)
  select in_date,
    		 t1.org_id,
    		 t1.cyc,
    		 t1.ac_id,
    		 CASE
           WHEN t3.CALIBER_CODE = 'DEP_PRSN_001' THEN '310'
           ELSE '210'
         END,
    		 SUM(CASE WHEN t3.CALC_RULE = '-'
                            THEN (case when t1.bal=0 then 0.00 else -ABS(t1.bal) end)
                            ELSE (case when t1.bal=0 then 0.00 else  ABS(t1.bal) end)  END) as bal,
    		 SUM(CASE WHEN t3.CALC_RULE = '-'
                            THEN (case when t1.year_pdt=0 then 0.00 else -ABS(t1.year_pdt) end)
                            ELSE (case when t1.year_pdt=0 then 0.00 else  ABS(t1.year_pdt) end) END) as year_pdt
  FROM session.tmp_dep t1
  JOIN DDS_KER_BGFDKHDZ t2
    ON t2.KHDBACID = t1.ac_id
  JOIN STA_CALIBER_DETAIL t3
    ON t3.ITEM_CODE = t2.KHDAACID
   AND t3.CALIBER_CODE IN ('DEP_PRSN_001','DEP_CORP_001')
   AND t3.START_DT_ACTIVE <= in_date
   AND t3.END_DT_ACTIVE > in_date
   AND t3.STATUS = '1'
  GROUP BY t1.org_id,
      		 t1.cyc,
      		 t1.ac_id,
      		 CASE
             WHEN t3.CALIBER_CODE = 'DEP_PRSN_001' THEN '310'
             ELSE '210'
           END; --

/**********************************************************************/
/******************    2.贷款数据处理       ***************************/
/**********************************************************************/
	--2.1 贷款分户数据处理

  INSERT INTO session.tmp_loan
	(
	 	DATA_DT      ,--日期
		ORG_ID       ,--机构
		CYC          ,--币种
		AC_ID        ,--科目
		TP_4         ,--四级分类
		TP_5         ,--五级分类
		BAL          ,--余额
		YEAR_PDT	  --年积数
	)
  SELECT in_date,
         t1.ORG_ID,
         t1.CCY,
         t1.SBJ,
         t1.TP_4,
         t1.TP_5,
         SUM(t1.BAL) AS BAL,
         SUM(t1.YEAR_PDT) AS YEAR_PDT
  FROM(
        SELECT --in_date,
               t1.ORG_ID,
               t1.CCY,
               t1.SBJ,
               t1.TP_4,
               t1.TP_5,
               SUM(CASE WHEN CALC_RULE = '-' THEN -t1.BAL ELSE t1.BAL END) AS BAL,
               SUM(CASE WHEN CALC_RULE = '-' THEN -t1.YEAR_PDT ELSE t1.YEAR_PDT END) AS YEAR_PDT
        FROM (SELECT t1.ORG_ID,
                     t1.SBJ,
                     t1.CCY,
                     t1.BAL,
                     t1.YEAR_PDT,
                     NVL(t2.TP_4,'D40001') AS TP_4,
                     COALESCE(t2.TP_5,t3.LVL_5,'D41001') AS TP_5
              FROM dw_acct_pdt_yyyymm t1
              LEFT JOIN v_dw_loan_acct t2
                ON t2.acct_id = t1.acct_id
      	       AND t2.cyc = t1.ccy
              LEFT JOIN v_dw_card_acct t3
                ON t3.acct_id = t1.acct_id
		           AND t3.cyc = t1.ccy
		           AND t3.loan_ac_id = t1.sbj
             )t1
        JOIN DDS_KER_BGFDKHDZ t2
          ON t2.KHDBACID = t1.SBJ
        JOIN STA_CALIBER_DETAIL t3
          ON t3.ITEM_CODE = t2.KHDAACID
         AND t3.CALIBER_CODE = 'LN_ALL_001'
         AND t3.START_DT_ACTIVE <= in_date
         AND t3.END_DT_ACTIVE > in_date
         AND t3.STATUS = '1'
        GROUP BY t1.ORG_ID,
                 t1.CCY,
                 t1.SBJ,
                 t1.TP_4,
                 t1.TP_5
        UNION ALL
        SELECT --in_date,
               ORG_ID,
               CCY,
               '125305' AS SBJ,
               'D40001',
               'D41001',
               SUM(BAL) AS BAL, --分期付款剩余本金
               SUM(YEAR_PDT) AS YEAR_PDT
        FROM(SELECT ORG_ID,
                    CYC AS CCY ,
                    MP_REM_BAL AS BAL, --分期付款剩余本金
                    0 AS YEAR_PDT
             FROM DW_CARD_ACCT --信用卡分户
             UNION ALL
             SELECT REPLACE(ORG_ID,'A','') AS ORG_ID,
                    CURR_CD,
                    0 AS BAL,
                    DRBALYV * v_year_days AS YEAR_PDT --分期付款剩余本金年积数
             FROM RPT_BUSI_COND
             WHERE FREQ_CD = 'D'
               AND ITEM_LEVEL = 3
               AND ITEM_CODE = '13043001' --分期付款剩余本金
               AND CURR_CD NOT IN ('ACCOUNT')
               AND DATA_DT = in_date
               AND ORG_ID LIKE 'A%' --只取支行
            )
        GROUP BY ORG_ID,
                 CCY
      ) t1
  GROUP BY t1.ORG_ID,
           t1.CCY,
           t1.SBJ,
           t1.TP_4,
           t1.TP_5;--

 insert into session.tmp_acceptance_bill
  (
		data_dt,		--日期
		org_id ,			--机构
		cyc ,			--币种
		bal 		--余额
	)
  SELECT in_date AS DATA_DT,
         ORG_ID,
         CURR_CD,
         SUM(PEDRBAL)
  FROM(
        SELECT
               REPLACE(ORG_ID,'A','') AS ORG_ID,--退到网点，后面再汇总到支行和总行
               CURR_CD,
               PEDRBAL
        FROM RPT_BUSI_COND
        WHERE DATA_DT = in_date
          AND ITEM_LEVEL = 3 --三级科目
          AND ORG_ID LIKE 'A%'
          AND ITEM_CODE = '1030101' --银行承兑汇票科目
          AND CURR_CD NOT IN ('ACCOUNT') --不取本外币合计
          AND FREQ_CD = 'D'
      )
  GROUP BY ORG_ID,
           CURR_CD;--

	IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '银行承兑汇票处理 失败';--
		RETURN 10;--
    END IF;--


-------------------------------------------------------------
	--拼接存、贷款临时表
	INSERT INTO session.tmp_rpt_dep_loan_tmp
	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	SELECT
		value(aa.data_dt, bb.data_dt),							--日期
		value(aa.org_id, bb.org_id),							--机构
		value(aa.cyc, bb.cyc),									--币种
		value(aa.dep_bal, 0),									--总存款
		value(aa.sav_bal, 0),									--储蓄存款
		value(aa.dep_com_bal,0),								--对公存款
		0, 0, 0, 0,0,0,0,0,0,
		value(bb.ln_bal, 0),									--贷款余额
		value(bb.LN_bad_BAL, 0),								--不良贷款余额
		value(bb.DIS_BAL, 0),									--贴现余额
		0, 0, 0, 0,0,0,0,0,0,
		round(value(aa.dep_year_pdt/v_year_days,0),2),			--存款年日均
		round(value(aa.sav_year_pdt/v_year_days,0),2),			--储蓄存款年日均
		round(value(aa.dep_com_year_pdt/v_year_days,0),2),		--对公存款年日均
		0,0,0,0,0,0,0,0,0,
		round(value(bb.ln_year_pdt/v_year_days,0),2),			--贷款年日均
		round(value(bb.LN_bad_year_pdt/v_year_days,0),2),		--不良贷款年日均
		round(value(bb.DIS_year_pdt/v_year_days,0),2),			--贴现年日均
		0,0,0,0,0,0,0,0,0,
		0,								--银行承兑汇票余额
		0							        --银行承兑汇票比上年增长
	FROM
	(
		select data_dt,
		  case when substr(org_id,4,3)='999' then substr(org_id,1,3)||'000' else org_id end as org_id,
		  cyc,
			sum(a.bal) as dep_bal,
			sum(a.year_pdt) as dep_year_pdt,
			sum(CASE WHEN node_lvl_2='310' THEN a.bal ELSE 0 END) as sav_bal,
			sum(CASE WHEN node_lvl_2='310' THEN a.year_pdt ELSE 0 END) as sav_year_pdt,
			sum(case WHEN node_lvl_2<>'310' then a.bal else 0 end) as dep_com_bal,
			sum(case WHEN node_lvl_2<>'310' then a.year_pdt else 0 end) as dep_com_year_pdt
		from
			session.tmp_dep_year_pdt a
		group by
			data_dt,case when substr(org_id,4,3)='999' then substr(org_id,1,3)||'000' else org_id end,cyc
	) aa
	FULL OUTER JOIN
	(
		SELECT
			b.data_dt,
			case when substr(org_id,4,3)='999' then substr(org_id,1,3)||'000' else org_id end as org_id,
			b.cyc,
			sum(b.bal) as ln_bal,
			sum(b.year_pdt) as ln_year_pdt,
			sum(CASE WHEN b.tp_5 IN ('D41003','D41004','D41005') THEN value(b.bal, 0) ELSE 0 END ) AS LN_bad_BAL,
			sum(CASE WHEN b.tp_5 IN ('D41003','D41004','D41005') THEN value(b.year_pdt, 0) ELSE 0 END ) AS LN_bad_year_pdt,
			sum(CASE
            WHEN d.CALIBER_CODE = 'LN_DIS_001' AND d.CALC_RULE = '-' THEN (case when b.bal=0 then 0.00 else -ABS(b.bal) end)
            WHEN d.CALIBER_CODE = 'LN_DIS_001' AND d.CALC_RULE = '+' THEN (case when b.bal=0 then 0.00 else  ABS(b.bal) end)
            ELSE 0
          END
         ) AS DIS_BAL,
			sum(CASE
            WHEN d.CALIBER_CODE = 'LN_DIS_001' AND d.CALC_RULE = '-' THEN (case when b.year_pdt=0 then 0.00 else -ABS(b.year_pdt) end)
            WHEN d.CALIBER_CODE = 'LN_DIS_001' AND d.CALC_RULE = '+' THEN (case when b.year_pdt=0 then 0.00 else  ABS(b.year_pdt) end)
            ELSE 0
          END
         ) AS DIS_year_pdt
		FROM session.tmp_loan b
    LEFT JOIN DDS_KER_BGFDKHDZ c
      ON c.KHDBACID = b.ac_id
    LEFT JOIN STA_CALIBER_DETAIL d
      ON d.ITEM_CODE = c.KHDAACID
     AND d.CALIBER_CODE = 'LN_DIS_001'
     AND d.START_DT_ACTIVE <= in_date
     AND d.END_DT_ACTIVE > in_date
     AND d.STATUS = '1'
		GROUP BY
			b.data_dt, case when substr(org_id,4,3)='999' then substr(org_id,1,3)||'000' else org_id end, b.cyc
	) bb
	ON
		aa.data_dt = bb.data_dt AND
		aa.org_id = bb.org_id AND
		aa.cyc = bb.cyc
	;--
	IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '联接存贷款临时表 失败';--
		RETURN 10;--
    END IF;--


	--合并银行承兑汇票数据到临时表 tmp_rpt_dep_loan
	insert into session.tmp_rpt_dep_loan
	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	select
		value(aa.data_dt, bb.data_dt),							--日期
		value(aa.org_id, bb.org_id),							--机构
		value(aa.cyc, bb.cyc),									--币种
		value(aa.dep_bal, 0),									--总存款
		value(aa.sav_bal, 0),									--储蓄存款
		value(aa.DEP_COM_BAL,0)			   , --对公存款余额
		value(aa.DEP_LDAY_INCR,0)          , --存款比昨日
		value(aa.DEP_LMON_INCR,0)		   , --存款比上月
		value(aa.DEP_YBGN_INCR,0)          , --存款比年初
		value(aa.SAV_LDAY_INCR,0)          , --储蓄比昨日
		value(aa.SAV_LMON_INCR,0)		   , --储蓄比上月
		value(aa.SAV_YBGN_INCR,0)          , --储蓄比年初
		value(aa.DEP_COM_LDAY_INCR,0)	   , --对公存款比昨日
		value(aa.DEP_COM_LMON_INCR,0)	   , --对公存款比上月
		value(aa.DEP_COM_LYEAR_INCR,0)     , --对公存款比年初
		value(aa.LN_BAL,0)                 , --贷款余额
		value(aa.BAD_LN_BAL,0)             , --不良贷款
		value(aa.DIS_BAL,0)                , --贴现
		value(aa.LN_LDAY_INCR,0)           , --贷款比昨日
		value(aa.LN_LMON_INCR,0)		   , --贷款比上月
		value(aa.LN_YBGN_INCR,0)           , --贷款比年初
		value(aa.BAD_LN_LDAY_INCR,0)       , --不良贷款比昨日
		value(aa.BAD_LN_LMON_INCR,0)	   , --不良贷款比上月
		value(aa.BAD_LN_YBGN_INCR,0)       , --不良贷款比年初
		value(aa.DIS_LDAY_INCR,0)          , --贴现比昨日
		value(aa.DIS_LMON_INCR,0)		   , --贴现比上月
		value(aa.DIS_YBGN_INCR,0)          , --贴现比年初
		value(aa.DEP_DAY_AVG_YEAR,0)	   , --存款年日均
		value(aa.SAV_DAY_AVG_YEAR,0)	   , --其中储蓄年日均
		value(aa.DEP_COM_DAY_AVG_YEAR,0)   , --其中对公存款年日均
		value(aa.DEP_AVG_LDAY_INCR,0)	   , --存款年日均比昨日
		value(aa.DEP_AVG_LMON_INCR,0)	   , --存款年日均比上月
		value(aa.DEP_AVG_LYEAR_INCR,0)	   , --存款年日均比年初
		value(aa.SAV_AVG_LDAY_INCR,0)	   , --其中储蓄年日均比昨日
		value(aa.SAV_AVG_LMON_INCR,0)	   , --其中储蓄年日均比上月
		value(aa.SAV_AVG_LYEAR_INCR,0)	   , --其中储蓄年日均比年初
		value(aa.DEP_COM_AVG_LDAY_INCR,0)  , --其中对公存款年日均比昨日
		value(aa.DEP_COM_AVG_LMON_INCR,0)  , --其中对公存款年日均比上月
		value(aa.DEP_COM_AVG_LYEAR_INCR,0) , --其中对公存款年日均比年初
		value(aa.LN_DAY_AVG_YEAR,0)		   , --贷款年日均
		value(aa.LN_BAD_DAY_AVG_YEAR,0)	   , --其中不良贷款年日均
		value(aa.LN_DIS_DAY_AVG_YEAR,0)	   , --其中贴现年日均
		value(aa.LN_AVG_LDAY_INCR,0)	   , --贷款年日均比昨日
		value(aa.LN_AVG_LMON_INCR,0)	   , --贷款年日均比上月
		value(aa.LN_AVG_LYEAR_INCR,0)	   , --贷款年日均比年初
		value(aa.LN_BAD_AVG_LDAY_INCR,0)   , --其中不良贷款年日均比昨日
		value(aa.LN_BAD_AVG_LMON_INCR,0)   , --其中不良贷款年日均比上月
		value(aa.LN_BAD_AVG_LYEAR_INCR,0)  , --其中不良贷款年日均比年初
		value(aa.LN_DIS_AVG_LDAY_INCR,0)   , --其中贴现年日均比昨日
		value(aa.LN_DIS_AVG_LMON_INCR,0)   , --其中贴现年日均比上月
		value(aa.LN_DIS_AVG_LYEAR_INCR,0)  , --其中贴现年日均比年初
		value(bb.BAL,0)					   , --银行承兑汇票余额
		0									 --银行承兑汇票比上年增长
	from
		session.tmp_rpt_dep_loan_tmp aa
	full outer join
		session.tmp_acceptance_bill bb
	ON
		aa.data_dt = bb.data_dt AND
		aa.org_id = bb.org_id AND
		aa.cyc = bb.cyc
	;--
	IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '合并银行承兑汇票数据 失败';--
		RETURN 10;--
    END IF;--

	--汇总到支行和总行
    INSERT INTO session.tmp_rpt_dep_loan
	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
    SELECT
    	DATA_DT                , --日期
    	up_org                 , --机构
    	CYC                    , --币种
    	sum(DEP_BAL)                , --总存款
    	sum(SAV_BAL)                , --储蓄余额
		sum(dep_com_bal)			, --对公存款余额
    	sum(DEP_LDAY_INCR)          , --存款比昨日
		sum(DEP_LMON_INCR)			, --存款比上月
    	sum(DEP_YBGN_INCR)          , --存款比年初
    	sum(SAV_LDAY_INCR)          , --储蓄比昨日
		sum(SAV_LMON_INCR)			, --储蓄比上月
    	sum(SAV_YBGN_INCR)          , --储蓄比年初
		sum(DEP_COM_LDAY_INCR)		, --对公存款比昨日
		sum(DEP_COM_LMON_INCR)		, --对公存款比上月
		sum(DEP_COM_LYEAR_INCR)		, --对公存款比年初
    	sum(LN_BAL)                 , --贷款余额
    	sum(BAD_LN_BAL)             , --不良贷款
    	sum(DIS_BAL)                , --贴现
    	sum(LN_LDAY_INCR)           , --贷款比昨日
		sum(LN_LMON_INCR)			, --贷款比上月
    	sum(LN_YBGN_INCR)           , --贷款比年初
    	sum(BAD_LN_LDAY_INCR)       , --不良贷款比昨日
		sum(BAD_LN_LMON_INCR)		, --不良贷款比上月
    	sum(BAD_LN_YBGN_INCR)       , --不良贷款比年初
    	sum(DIS_LDAY_INCR)          , --贴现比昨日
		sum(DIS_LMON_INCR)			, --贴现比上月
    	sum(DIS_YBGN_INCR)          , --贴现比年初
		sum(DEP_DAY_AVG_YEAR)		, --存款年日均
		sum(SAV_DAY_AVG_YEAR)	   , --其中储蓄年日均
		sum(DEP_COM_DAY_AVG_YEAR)   , --其中对公存款年日均
		sum(DEP_AVG_LDAY_INCR)	   , --存款年日均比昨日
		sum(DEP_AVG_LMON_INCR)   , --存款年日均比上月
		sum(DEP_AVG_LYEAR_INCR)	   , --存款年日均比年初
		sum(SAV_AVG_LDAY_INCR)	   , --其中储蓄年日均比昨日
		sum(SAV_AVG_LMON_INCR)	   , --其中储蓄年日均比上月
		sum(SAV_AVG_LYEAR_INCR)	   , --其中储蓄年日均比年初
		sum(DEP_COM_AVG_LDAY_INCR)  , --其中对公存款年日均比昨日
		sum(DEP_COM_AVG_LMON_INCR)  , --其中对公存款年日均比上月
		sum(DEP_COM_AVG_LYEAR_INCR) , --其中对公存款年日均比年初
		sum(LN_DAY_AVG_YEAR)		   , --贷款年日均
		sum(LN_BAD_DAY_AVG_YEAR)	   , --其中不良贷款年日均
		sum(LN_DIS_DAY_AVG_YEAR)	   , --其中贴现年日均
		sum(LN_AVG_LDAY_INCR)	   , --贷款年日均比昨日
		sum(LN_AVG_LMON_INCR)	   , --贷款年日均比上月
		sum(LN_AVG_LYEAR_INCR)	   , --贷款年日均比年初
		sum(LN_BAD_AVG_LDAY_INCR)   , --其中不良贷款年日均比昨日
		sum(LN_BAD_AVG_LMON_INCR)   , --其中不良贷款年日均比上月
		sum(LN_BAD_AVG_LYEAR_INCR)  , --其中不良贷款年日均比年初
		sum(LN_DIS_AVG_LDAY_INCR)   , --其中贴现年日均比昨日
		sum(LN_DIS_AVG_LMON_INCR)   , --其中贴现年日均比上月
		sum(LN_DIS_AVG_LYEAR_INCR)  , --其中贴现年日均比年初
		sum(ACCTCE_BAL)			   , --银行承兑汇票余额
		sum(ACCTCE_LYEAR_INCR)		 --银行承兑汇票比上年增长
	FROM
		session.tmp_rpt_dep_loan a,
		V_ALL_ORG_LVL b
		--v_dim_org_def b	 汇总到支行和总行参数表
	WHERE	a.org_id = b.org
	  AND b.up_lvl IN ('2','3') --2:支行,3：总行
    AND lvl = '1' --网点
	GROUP BY
    		DATA_DT, up_org, CYC
	;--
    IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '汇总到总行和支行 失败';--
		RETURN 10;--
    END IF;--

 declare num int;
SELECT 1 INTO num FROM DIM_RATE WHERE RATE_DATE = IN_DATE limit 1;

  IF num != 1 THEN
    SET out_sqlcode = 32767;--
    SET out_msg = '没有最新的汇率数据,币种折算失败';    --
		RETURN 10;--
  END IF;--

  INSERT INTO session.tmp_rpt_dep_loan
	(
	  DATA_DT                , --日期
    ORG_ID                 , --机构
    CYC                    , --币种
    DEP_BAL                , --总存款
    SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    DEP_YBGN_INCR          , --存款比年初
    SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    LN_BAL                 , --贷款余额
    BAD_LN_BAL             , --不良贷款
    DIS_BAL                , --贴现
    LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    LN_YBGN_INCR           , --贷款比年初
    BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    BAD_LN_YBGN_INCR       , --不良贷款比年初
    DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	SELECT
    	t1.DATA_DT                , --日期
    	t1.ORG_ID                 , --机构
    	'R01'                  , --币种
    	SUM(DEP_BAL * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_BAL)), 2)                , --总存款
    	SUM(SAV_BAL * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, SAV_BAL)), 2)                , --储蓄余额
    	SUM(DEP_COM_BAL * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_COM_BAL)), 2)			   , --对公存款余额
    	SUM(DEP_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_LDAY_INCR)), 2)          , --存款比昨日
    	SUM(DEP_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_LMON_INCR)), 2)          , --存款比上月
    	SUM(DEP_YBGN_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_YBGN_INCR)), 2)          , --存款比年初
    	SUM(SAV_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, SAV_LDAY_INCR)), 2)          , --储蓄比昨日
    	SUM(SAV_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, SAV_LMON_INCR)), 2)          , --储蓄比上月
    	SUM(SAV_YBGN_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, SAV_YBGN_INCR)), 2)          , --储蓄比年初
    SUM(DEP_COM_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_COM_LDAY_INCR)), 2) , --对公存款比昨日
    SUM(DEP_COM_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_COM_LMON_INCR)), 2) , --对公存款比上月
    SUM(DEP_COM_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DEP_COM_LYEAR_INCR)), 2), --对公存款比年初
    	SUM(LN_BAL * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, LN_BAL)), 2)                 , --贷款余额
    	SUM(BAD_LN_BAL * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, BAD_LN_BAL)), 2)             , --不良贷款
    	SUM(DIS_BAL * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DIS_BAL)), 2)                , --贴现
    	SUM(LN_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, LN_LDAY_INCR)), 2)           , --贷款比昨日
    	SUM(LN_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, LN_LMON_INCR)), 2)           , --贷款比上月
    	SUM(LN_YBGN_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, LN_YBGN_INCR)), 2)           , --贷款比年初
    	SUM(BAD_LN_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, BAD_LN_LDAY_INCR)), 2)  , --不良贷款比昨日
    	SUM(BAD_LN_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, BAD_LN_LMON_INCR)), 2)  , --不良贷款比上月
    	SUM(BAD_LN_YBGN_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, BAD_LN_YBGN_INCR)), 2)  , --不良贷款比年初
    	SUM(DIS_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DIS_LDAY_INCR)), 2)          ,  --贴现比昨日
    	SUM(DIS_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DIS_LMON_INCR)), 2)          , --贴现比上月
    	SUM(DIS_YBGN_INCR * YRCAEXRT / YRCACUNO),--ROUND(sum(FN_DAY_TO_RMB(in_date, cyc, DIS_YBGN_INCR)), 2)          , --贴现比年初
  SUM(DEP_DAY_AVG_YEAR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_DAY_AVG_YEAR)), 2)	, --存款年日均
  SUM(SAV_DAY_AVG_YEAR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,SAV_DAY_AVG_YEAR)), 2)	, --其中储蓄年日均
SUM(DEP_COM_DAY_AVG_YEAR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_COM_DAY_AVG_YEAR)), 2), --其中对公存款年日均
SUM(DEP_AVG_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_AVG_LDAY_INCR)), 2), --存款年日均比昨日
  		SUM(DEP_AVG_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_AVG_LMON_INCR)), 2)			, --存款年日均比上月
  		SUM(DEP_AVG_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_AVG_LYEAR_INCR)), 2)		, --存款年日均比年初
  		SUM(SAV_AVG_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,SAV_AVG_LDAY_INCR)), 2)			, --其中储蓄年日均比昨日
  		SUM(SAV_AVG_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,SAV_AVG_LMON_INCR)), 2)			, --其中储蓄年日均比上月
  		SUM(SAV_AVG_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,SAV_AVG_LYEAR_INCR)), 2)		, --其中储蓄年日均比年初
  		SUM(DEP_COM_AVG_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_COM_AVG_LDAY_INCR)), 2)		, --其中对公存款年日均比昨日
  		SUM(DEP_COM_AVG_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_COM_AVG_LMON_INCR)), 2)		, --其中对公存款年日均比上月
  		SUM(DEP_COM_AVG_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,DEP_COM_AVG_LYEAR_INCR)), 2)	, --其中对公存款年日均比年初
  		SUM(LN_DAY_AVG_YEAR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_DAY_AVG_YEAR)), 2)			, --贷款年日均
  		SUM(LN_BAD_DAY_AVG_YEAR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_BAD_DAY_AVG_YEAR)), 2)		, --其中不良贷款年日均
  		SUM(LN_DIS_DAY_AVG_YEAR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_DIS_DAY_AVG_YEAR)), 2)		, --其中贴现年日均
  		SUM(LN_AVG_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_AVG_LDAY_INCR)), 2)			, --贷款年日均比昨日
  		SUM(LN_AVG_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_AVG_LMON_INCR)), 2)			, --贷款年日均比上月
  		SUM(LN_AVG_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_AVG_LYEAR_INCR)), 2)			, --贷款年日均比年初
  		SUM(LN_BAD_AVG_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_BAD_AVG_LDAY_INCR)), 2)		, --其中不良贷款年日均比昨日
  		SUM(LN_BAD_AVG_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_BAD_AVG_LMON_INCR)), 2)		, --其中不良贷款年日均比上月
  		SUM(LN_BAD_AVG_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_BAD_AVG_LYEAR_INCR)), 2)		, --其中不良贷款年日均比年初
  		SUM(LN_DIS_AVG_LDAY_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_DIS_AVG_LDAY_INCR)), 2)		, --其中贴现年日均比昨日
  		SUM(LN_DIS_AVG_LMON_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_DIS_AVG_LMON_INCR)), 2)		, --其中贴现年日均比上月
  		SUM(LN_DIS_AVG_LYEAR_INCR * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,LN_DIS_AVG_LYEAR_INCR)), 2)		, --其中贴现年日均比年初
  		SUM(ACCTCE_BAL * YRCAEXRT / YRCACUNO),--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,ACCTCE_BAL)), 2)				, --银行承兑汇票余额
  		SUM(ACCTCE_LYEAR_INCR * YRCAEXRT / YRCACUNO)--ROUND(SUM(FN_DAY_TO_RMB(IN_DATE,CYC,ACCTCE_LYEAR_INCR)), 2)			  --银行承兑汇票比上年增长
    FROM 	session.tmp_rpt_dep_loan t1
    LEFT JOIN DIM_RATE t2
      ON t2.YRCACCYC = t1.CYC
     AND t2.RATE_DATE = IN_DATE
	WHERE	t1.CYC <> 'CNY'
	GROUP BY	t1.DATA_DT,
            t1.ORG_ID;--

    IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = out_sqlcode || ':币种折算 失败';--
		RETURN 10;--
    END IF;--

    --本外币合计
    INSERT INTO session.tmp_rpt_dep_loan
 	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	SELECT
    	DATA_DT                , --日期
    	ORG_ID                 , --机构
    	'T01'                    , --币种

    	sum(DEP_BAL)                , --总存款
    	sum(SAV_BAL)                , --储蓄余额
		sum(dep_com_bal)			, --对公存款余额
    	sum(DEP_LDAY_INCR)          , --存款比昨日
		sum(DEP_LMON_INCR)			, --存款比上月
    	sum(DEP_YBGN_INCR)          , --存款比年初
    	sum(SAV_LDAY_INCR)          , --储蓄比昨日
		sum(SAV_LMON_INCR)			, --储蓄比上月
    	sum(SAV_YBGN_INCR)          , --储蓄比年初
		sum(DEP_COM_LDAY_INCR)		, --对公存款比昨日
		sum(DEP_COM_LMON_INCR)		, --对公存款比上月
		sum(DEP_COM_LYEAR_INCR)		, --对公存款比年初
    	sum(LN_BAL)                 , --贷款余额
    	sum(BAD_LN_BAL)             , --不良贷款
    	sum(DIS_BAL)                , --贴现
    	sum(LN_LDAY_INCR)           , --贷款比昨日
		sum(LN_LMON_INCR)			, --贷款比上月
    	sum(LN_YBGN_INCR)           , --贷款比年初
    	sum(BAD_LN_LDAY_INCR)       , --不良贷款比昨日
		sum(BAD_LN_LMON_INCR)		, --不良贷款比上月
    	sum(BAD_LN_YBGN_INCR)       , --不良贷款比年初
    	sum(DIS_LDAY_INCR)          , --贴现比昨日
		sum(DIS_LMON_INCR)			, --贴现比上月
    	sum(DIS_YBGN_INCR)          , --贴现比年初
		sum(DEP_DAY_AVG_YEAR)		, --存款年日均
		sum(SAV_DAY_AVG_YEAR)	   , --其中储蓄年日均
		sum(DEP_COM_DAY_AVG_YEAR)   , --其中对公存款年日均
		sum(DEP_AVG_LDAY_INCR)	   , --存款年日均比昨日
		sum(DEP_AVG_LMON_INCR)   , --存款年日均比上月
		sum(DEP_AVG_LYEAR_INCR)	   , --存款年日均比年初
		sum(SAV_AVG_LDAY_INCR)	   , --其中储蓄年日均比昨日
		sum(SAV_AVG_LMON_INCR)	   , --其中储蓄年日均比上月
		sum(SAV_AVG_LYEAR_INCR)	   , --其中储蓄年日均比年初
		sum(DEP_COM_AVG_LDAY_INCR)  , --其中对公存款年日均比昨日
		sum(DEP_COM_AVG_LMON_INCR)  , --其中对公存款年日均比上月
		sum(DEP_COM_AVG_LYEAR_INCR) , --其中对公存款年日均比年初
		sum(LN_DAY_AVG_YEAR)		   , --贷款年日均
		sum(LN_BAD_DAY_AVG_YEAR)	   , --其中不良贷款年日均
		sum(LN_DIS_DAY_AVG_YEAR)	   , --其中贴现年日均
		sum(LN_AVG_LDAY_INCR)	   , --贷款年日均比昨日
		sum(LN_AVG_LMON_INCR)	   , --贷款年日均比上月
		sum(LN_AVG_LYEAR_INCR)	   , --贷款年日均比年初
		sum(LN_BAD_AVG_LDAY_INCR)   , --其中不良贷款年日均比昨日
		sum(LN_BAD_AVG_LMON_INCR)   , --其中不良贷款年日均比上月
		sum(LN_BAD_AVG_LYEAR_INCR)  , --其中不良贷款年日均比年初
		sum(LN_DIS_AVG_LDAY_INCR)   , --其中贴现年日均比昨日
		sum(LN_DIS_AVG_LMON_INCR)   , --其中贴现年日均比上月
		sum(LN_DIS_AVG_LYEAR_INCR)  , --其中贴现年日均比年初
		sum(ACCTCE_BAL)			   , --银行承兑汇票余额
		sum(ACCTCE_LYEAR_INCR)		 --银行承兑汇票比上年增长
    FROM
    	session.tmp_rpt_dep_loan
	WHERE
		CYC in ('CNY', 'R01')
	GROUP BY
		DATA_DT, ORG_ID
	;--
	IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '本外币合计 失败';--
		RETURN 10;--
    END IF;--


	--今天比昨日
    INSERT INTO session.tmp_rpt_dep_loan_fr
	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	SELECT
    	value(a.data_dt, in_date),
    	value(a.org_id, c.org_id),
    	value(a.cyc, c.cyc),

    	value(a.dep_bal, 0),						--总存款
    	value(a.sav_bal, 0),						--储蓄存款
		value(a.dep_com_bal,0),						--对公存款余额
    	value(a.dep_bal,0) - value(c.dep_bal,0),	--存款比昨日
    	value(a.DEP_LMON_INCR,0),					--存款比上月
    	value(a.DEP_YBGN_INCR,0),					--存款比年初
    	value(a.sav_bal,0) - value(c.sav_bal,0),	--储蓄存款比昨日
    	value(a.SAV_LMON_INCR,0),					--储蓄存款比上月
    	value(a.SAV_YBGN_INCR,0),					--储蓄存款比年初
    	value(a.dep_com_bal,0) - value(c.dep_com_bal,0),		--对公存款比昨日
    	value(a.DEP_COM_LMON_INCR,0),							--对公存款比上月
    	value(a.DEP_COM_LYEAR_INCR,0),							--对公存款比年初
		value(a.ln_bal,0),									--贷款余额
		value(a.BAD_LN_BAL,0),								--不良贷款余额
		value(a.dis_bal,0),									--贴现余额
    	value(a.ln_bal,0) - value(c.ln_bal,0),					--贷款比昨日
    	value(a.LN_LMON_INCR,0),								--贷款比上月
    	value(a.LN_YBGN_INCR,0),								--贷款比年初
    	value(a.BAD_LN_BAL,0) - value(c.BAD_LN_BAL,0),		--不良贷款比昨日
    	value(a.BAD_LN_LMON_INCR,0),						--不良贷款比上月
    	value(a.BAD_LN_YBGN_INCR,0),						--不良贷款比年初
    	value(a.dis_bal,0) - value(c.dis_bal,0),				--贴现比昨日
    	value(a.DIS_LMON_INCR,0),								--贴现比上月
    	value(a.DIS_YBGN_INCR,0),								--贴现比年初
    	value(a.DEP_DAY_AVG_YEAR,0),						--存款年日均
    	value(a.SAV_DAY_AVG_YEAR,0),						--储蓄存款年日均
    	value(a.DEP_COM_DAY_AVG_YEAR,0),					--对公存款年日均
    	value(a.DEP_DAY_AVG_YEAR,0)-value(c.DEP_DAY_AVG_YEAR,0),	--存款年日均比昨日
    	value(a.DEP_AVG_LMON_INCR,0),								--存款年日均比上月
    	value(a.DEP_AVG_LYEAR_INCR,0),								--存款年日均比年初
    	value(a.SAV_DAY_AVG_YEAR,0)-value(c.SAV_DAY_AVG_YEAR,0),	--储蓄存款年日均比昨日
    	value(a.SAV_AVG_LMON_INCR,0),								--储蓄存款年日均比上月
    	value(a.SAV_AVG_LYEAR_INCR,0),								--储蓄存款年日均比年初
    	value(a.DEP_COM_DAY_AVG_YEAR,0)-value(c.DEP_COM_DAY_AVG_YEAR,0),	--对公存款年日均比昨日
    	value(a.DEP_COM_AVG_LMON_INCR,0),									--对公存款年日均比上月
    	value(a.DEP_COM_AVG_LYEAR_INCR,0),									--对公存款年日均比年初
    	value(a.LN_DAY_AVG_YEAR,0),					--贷款年日均
    	value(a.LN_BAD_DAY_AVG_YEAR,0),				--不良贷款年日均
    	value(a.LN_DIS_DAY_AVG_YEAR,0),				--贴现年日均
    	value(a.LN_DAY_AVG_YEAR,0)-value(c.LN_DAY_AVG_YEAR,0),	--贷款年日均比昨日
    	value(a.LN_AVG_LMON_INCR,0),								--贷款年日均比上月
    	value(a.LN_AVG_LYEAR_INCR,0),								--贷款年日均比年初
    	value(a.LN_BAD_DAY_AVG_YEAR,0)-value(c.LN_BAD_DAY_AVG_YEAR,0),	--不良贷款年日均比昨日
    	value(a.LN_BAD_AVG_LMON_INCR,0),									--不良贷款年日均比上月
    	value(a.LN_BAD_AVG_LYEAR_INCR,0),									--不良贷款年日均比年初
    	value(a.LN_DIS_DAY_AVG_YEAR,0)-value(c.LN_DIS_DAY_AVG_YEAR,0),		--贴现年日均比昨日
    	value(a.LN_DIS_AVG_LMON_INCR,0),      --贴现年日均比上月
    	value(a.LN_DIS_AVG_LYEAR_INCR,0),     --贴现年日均比年初
    	value(a.ACCTCE_BAL,0),	              --银行承兑汇票余额
    	value(a.ACCTCE_LYEAR_INCR,0)          --银行承兑汇票比上年增长
    FROM
    	session.tmp_rpt_dep_loan a
	--(SELECT * FROM rpt_dep_loan_stat_bak WHERE DATA_DT = in_date) a
    FULL OUTER JOIN
    	(SELECT * FROM rpt_dep_loan_stat WHERE DATA_DT = v_yesterday) c
    	--(SELECT * FROM rpt_dep_loan_stat_bak WHERE DATA_DT = v_yesterday) c
    ON
    	a.org_id = c.org_id AND
    	a.cyc = c.cyc
    ;--
    IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '写[session.tmp_rpt_dep_loan_fr] 失败';--
		RETURN 10;--
    END IF;--

	--今天比上月
    INSERT INTO session.tmp_rpt_dep_loan_mi
	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	SELECT
    	value(a.data_dt, in_date),
    	value(a.org_id, c.org_id),
    	value(a.cyc, c.cyc),

    	value(a.dep_bal, 0),						--总存款
    	value(a.sav_bal, 0),						--储蓄存款
		value(a.dep_com_bal,0),						--对公存款余额
    	value(a.DEP_LDAY_INCR,0),					--存款比昨日
    	value(a.dep_bal,0) - value(c.dep_bal,0),	--存款比上月
    	value(a.DEP_YBGN_INCR,0),					--存款比年初
    	value(a.SAV_LDAY_INCR,0),					--储蓄存款比昨日
    	value(a.sav_bal,0) - value(c.sav_bal,0),	--储蓄存款比上月
    	value(a.SAV_YBGN_INCR,0),					--储蓄存款比年初
    	value(a.DEP_COM_LDAY_INCR,0),						--对公存款比昨日
    	value(a.dep_com_bal,0) - value(c.dep_com_bal,0),	--对公存款比上月
    	value(a.DEP_COM_LYEAR_INCR,0),						--对公存款比年初
		value(a.ln_bal,0),									--贷款余额
		value(a.BAD_LN_BAL,0),								--不良贷款余额
		value(a.dis_bal,0),									--贴现余额
    	value(a.LN_LDAY_INCR,0),							--贷款比昨日
    	value(a.ln_bal,0) - value(c.ln_bal,0),					--贷款比上月
    	value(a.LN_YBGN_INCR,0),								--贷款比年初
    	value(a.BAD_LN_LDAY_INCR,0),										--不良贷款比昨日
    	value(a.BAD_LN_BAL,0) - value(c.BAD_LN_BAL,0),						--不良贷款比上月
    	value(a.BAD_LN_YBGN_INCR,0),										--不良贷款比年初
    	value(a.DIS_LDAY_INCR,0),										--贴现比昨日
    	value(a.dis_bal,0) - value(c.dis_bal,0),					--贴现比上月
    	value(a.DIS_YBGN_INCR,0),						        --贴现比年初
    	value(a.DEP_DAY_AVG_YEAR,0),						--存款年日均
    	value(a.SAV_DAY_AVG_YEAR,0),						--储蓄存款年日均
    	value(a.DEP_COM_DAY_AVG_YEAR,0),					--对公存款年日均
    	value(a.DEP_AVG_LDAY_INCR,0),								--存款年日均比昨日
    	value(a.DEP_DAY_AVG_YEAR,0)-value(c.DEP_DAY_AVG_YEAR,0),	--存款年日均比上月
    	value(a.DEP_AVG_LYEAR_INCR,0),								--存款年日均比年初
    	value(a.SAV_AVG_LDAY_INCR,0),								--储蓄存款年日均比昨日
    	value(a.SAV_DAY_AVG_YEAR,0)-value(c.SAV_DAY_AVG_YEAR,0),	--储蓄存款年日均比上月
    	value(a.SAV_AVG_LYEAR_INCR,0),								--储蓄存款年日均比年初
    	value(a.DEP_COM_AVG_LDAY_INCR,0),									--对公存款年日均比昨日
    	value(a.DEP_COM_DAY_AVG_YEAR,0)-value(c.DEP_COM_DAY_AVG_YEAR,0),	--对公存款年日均比上月
    	value(a.DEP_COM_AVG_LYEAR_INCR,0),									--对公存款年日均比年初
    	value(a.LN_DAY_AVG_YEAR,0),					--贷款年日均
    	value(a.LN_BAD_DAY_AVG_YEAR,0),				--不良贷款年日均
    	value(a.LN_DIS_DAY_AVG_YEAR,0),				--贴现年日均
    	value(a.LN_AVG_LDAY_INCR,0),								--贷款年日均比昨日
    	value(a.LN_DAY_AVG_YEAR,0)-value(c.LN_DAY_AVG_YEAR,0),		--贷款年日均比上月
    	value(a.LN_AVG_LYEAR_INCR,0),				--贷款年日均比年初
    	value(a.LN_BAD_AVG_LDAY_INCR,0),			--不良贷款年日均比昨日
    	value(a.LN_BAD_DAY_AVG_YEAR,0)-value(c.LN_BAD_DAY_AVG_YEAR,0),  --不良贷款年日均比上月
    	value(a.LN_BAD_AVG_LYEAR_INCR,0),				--不良贷款年日均比年初
    	value(a.LN_DIS_AVG_LDAY_INCR,0),			        --贴现年日均比昨日
    	value(a.LN_DIS_DAY_AVG_YEAR,0)-value(c.LN_DIS_DAY_AVG_YEAR,0),	--贴现年日均比上月
    	value(a.LN_DIS_AVG_LYEAR_INCR,0),				--贴现年日均比年初
    	value(a.ACCTCE_BAL,0),	                                        --银行承兑汇票余额
    	value(a.ACCTCE_LYEAR_INCR,0)                                    --银行承兑汇票比上年增长
    FROM
    	session.tmp_rpt_dep_loan_fr a
	--(SELECT * FROM rpt_dep_loan_stat_bak WHERE DATA_DT = in_date) a
    FULL OUTER JOIN
    	(SELECT * FROM rpt_dep_loan_stat WHERE DATA_DT = v_last_mon_end) c
    	--(SELECT * FROM rpt_dep_loan_stat_bak WHERE DATA_DT = v_last_mon_end) c
    ON
    	a.org_id = c.org_id AND
    	a.cyc = c.cyc
    ;--
    IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '写[session.tmp_rpt_dep_loan_mi] 失败';--
		RETURN 10;--
    END IF;--

	--今天比年初
    INSERT INTO session.tmp_rpt_dep_loan_end
	(
		DATA_DT                , --日期
    	ORG_ID                 , --机构
    	CYC                    , --币种
    	DEP_BAL                , --总存款
    	SAV_BAL                , --储蓄存款余额
		DEP_COM_BAL			   , --对公存款余额
    	DEP_LDAY_INCR          , --存款比昨日
		DEP_LMON_INCR		   , --存款比上月
    	DEP_YBGN_INCR          , --存款比年初
    	SAV_LDAY_INCR          , --储蓄比昨日
		SAV_LMON_INCR		   , --储蓄比上月
    	SAV_YBGN_INCR          , --储蓄比年初
		DEP_COM_LDAY_INCR	   , --对公存款比昨日
		DEP_COM_LMON_INCR	   , --对公存款比上月
		DEP_COM_LYEAR_INCR     , --对公存款比年初
    	LN_BAL                 , --贷款余额
    	BAD_LN_BAL             , --不良贷款
    	DIS_BAL                , --贴现
    	LN_LDAY_INCR           , --贷款比昨日
		LN_LMON_INCR		   , --贷款比上月
    	LN_YBGN_INCR           , --贷款比年初
    	BAD_LN_LDAY_INCR       , --不良贷款比昨日
		BAD_LN_LMON_INCR	   , --不良贷款比上月
    	BAD_LN_YBGN_INCR       , --不良贷款比年初
    	DIS_LDAY_INCR          , --贴现比昨日
		DIS_LMON_INCR		   , --贴现比上月
    	DIS_YBGN_INCR          , --贴现比年初
		DEP_DAY_AVG_YEAR	   , --存款年日均
		SAV_DAY_AVG_YEAR	   , --其中储蓄年日均
		DEP_COM_DAY_AVG_YEAR   , --其中对公存款年日均
		DEP_AVG_LDAY_INCR	   , --存款年日均比昨日
		DEP_AVG_LMON_INCR	   , --存款年日均比上月
		DEP_AVG_LYEAR_INCR	   , --存款年日均比年初
		SAV_AVG_LDAY_INCR	   , --其中储蓄年日均比昨日
		SAV_AVG_LMON_INCR	   , --其中储蓄年日均比上月
		SAV_AVG_LYEAR_INCR	   , --其中储蓄年日均比年初
		DEP_COM_AVG_LDAY_INCR  , --其中对公存款年日均比昨日
		DEP_COM_AVG_LMON_INCR  , --其中对公存款年日均比上月
		DEP_COM_AVG_LYEAR_INCR , --其中对公存款年日均比年初
		LN_DAY_AVG_YEAR		   , --贷款年日均
		LN_BAD_DAY_AVG_YEAR	   , --其中不良贷款年日均
		LN_DIS_DAY_AVG_YEAR	   , --其中贴现年日均
		LN_AVG_LDAY_INCR	   , --贷款年日均比昨日
		LN_AVG_LMON_INCR	   , --贷款年日均比上月
		LN_AVG_LYEAR_INCR	   , --贷款年日均比年初
		LN_BAD_AVG_LDAY_INCR   , --其中不良贷款年日均比昨日
		LN_BAD_AVG_LMON_INCR   , --其中不良贷款年日均比上月
		LN_BAD_AVG_LYEAR_INCR  , --其中不良贷款年日均比年初
		LN_DIS_AVG_LDAY_INCR   , --其中贴现年日均比昨日
		LN_DIS_AVG_LMON_INCR   , --其中贴现年日均比上月
		LN_DIS_AVG_LYEAR_INCR  , --其中贴现年日均比年初
		ACCTCE_BAL			   , --银行承兑汇票余额
		ACCTCE_LYEAR_INCR		 --银行承兑汇票比上年增长
	)
	SELECT
    	value(a.data_dt, in_date),
    	value(a.org_id, c.org_id),
    	value(a.cyc, c.cyc),

    	value(a.dep_bal, 0),						--总存款
    	value(a.sav_bal, 0),						--储蓄存款
		value(a.dep_com_bal,0),						--对公存款余额
    	value(a.DEP_LDAY_INCR,0),					--存款比昨日
    	value(a.DEP_LMON_INCR,0),					--存款比上月
    	value(a.dep_bal,0) - value(c.dep_bal,0),					--存款比年初
    	value(a.SAV_LDAY_INCR,0),					--储蓄存款比昨日
    	value(a.SAV_LMON_INCR,0),					--储蓄存款比上月
    	value(a.sav_bal,0) - value(c.sav_bal,0),					--储蓄存款比年初
    	value(a.DEP_COM_LDAY_INCR,0),				--对公存款比昨日
    	value(a.DEP_COM_LMON_INCR,0),							--对公存款比上月
    	value(a.dep_com_bal,0) - value(c.dep_com_bal,0),							--对公存款比年初
		value(a.ln_bal,0),									--贷款余额
		value(a.BAD_LN_BAL,0),								--不良贷款余额
		value(a.dis_bal,0),									--贴现余额
    	value(a.LN_LDAY_INCR,0),								--贷款比昨日
    	value(a.LN_LMON_INCR,0),								--贷款比上月
    	value(a.ln_bal,0) - value(c.ln_bal,0),					--贷款比年初
    	value(a.BAD_LN_LDAY_INCR,0),										--不良贷款比昨日
    	value(a.BAD_LN_LMON_INCR,0),										--不良贷款比上月
    	value(a.BAD_LN_BAL,0) - value(c.BAD_LN_BAL,0),						--不良贷款比年初
    	value(a.DIS_LDAY_INCR,0),								--贴现比昨日
    	value(a.DIS_LMON_INCR,0),								--贴现比上月
    	value(a.dis_bal,0) - value(c.dis_bal,0),				--贴现比年初
    	value(a.DEP_DAY_AVG_YEAR,0),						--存款年日均
    	value(a.SAV_DAY_AVG_YEAR,0),						--储蓄存款年日均
    	value(a.DEP_COM_DAY_AVG_YEAR,0),					--对公存款年日均
    	value(a.DEP_AVG_LDAY_INCR,0),														--存款年日均比昨日
    	value(a.DEP_AVG_LMON_INCR,0),														--存款年日均比上月
    	value(a.DEP_DAY_AVG_YEAR,0)-value(c.DEP_DAY_AVG_YEAR,0),							--存款年日均比年初
    	value(a.SAV_AVG_LDAY_INCR,0),								--储蓄存款年日均比昨日
    	value(a.SAV_AVG_LMON_INCR,0),								--储蓄存款年日均比上月
    	value(a.SAV_DAY_AVG_YEAR,0)-value(c.SAV_DAY_AVG_YEAR,0),	--储蓄存款年日均比年初
    	value(a.DEP_COM_AVG_LDAY_INCR,0),									--对公存款年日均比昨日
    	value(a.DEP_COM_AVG_LMON_INCR,0),									--对公存款年日均比上月
    	value(a.DEP_COM_DAY_AVG_YEAR,0)-value(c.DEP_COM_DAY_AVG_YEAR,0),	--对公存款年日均比年初
    	value(a.LN_DAY_AVG_YEAR,0),					--贷款年日均
    	value(a.LN_BAD_DAY_AVG_YEAR,0),				--不良贷款年日均
    	value(a.LN_DIS_DAY_AVG_YEAR,0),				--贴现年日均
    	value(a.LN_AVG_LDAY_INCR,0),								--贷款年日均比昨日
    	value(a.LN_AVG_LMON_INCR,0),								--贷款年日均比上月
    	value(a.LN_DAY_AVG_YEAR,0)-value(c.LN_DAY_AVG_YEAR,0),		--贷款年日均比年初
    	value(a.LN_BAD_AVG_LDAY_INCR,0),									--不良贷款年日均比昨日
    	value(a.LN_BAD_AVG_LMON_INCR,0),									--不良贷款年日均比上月
    	value(a.LN_BAD_DAY_AVG_YEAR,0)-value(c.LN_BAD_DAY_AVG_YEAR,0),		--不良贷款年日均比年初
    	value(a.LN_DIS_AVG_LDAY_INCR,0),					--贴现年日均比昨日
    	value(a.LN_DIS_AVG_LMON_INCR,0),					--贴现年日均比上月
    	value(a.LN_DIS_DAY_AVG_YEAR,0)-value(c.LN_DIS_DAY_AVG_YEAR,0),		--贴现年日均比年初
    	value(a.ACCTCE_BAL,0),							--银行承兑汇票余额
    	value(a.ACCTCE_BAL,0)-value(c.ACCTCE_BAL,0)			--银行承兑汇票比上年增长
    FROM
    	session.tmp_rpt_dep_loan_mi a
	--(SELECT * FROM rpt_dep_loan_stat_bak WHERE DATA_DT = in_date) a
    FULL OUTER JOIN
    	(SELECT * FROM rpt_dep_loan_stat WHERE DATA_DT = v_last_year_end) c
    	--(SELECT * FROM rpt_dep_loan_stat_bak WHERE DATA_DT = v_last_year_end) c
    ON
    	a.org_id = c.org_id AND
    	a.cyc = c.cyc
    ;--
    IF out_sqlcode <> 0 and out_sqlcode<>100 THEN
		SET out_msg = '写[session.tmp_rpt_dep_loan_end] 失败';--
		RETURN 10;--
    END IF;--

    	--先删除当天数据,以防重跑
	DELETE FROM RPT_DEP_LOAN_STAT
  WHERE data_dt = in_date	;--

	-----------------------------------------------------------------------------------------
  --INSERT INTO tEmp_rpt_dep_loan_end SELECT * FROM session.tmp_rpt_dep_loan_end;COMMIT;--
	--写物理表
	INSERT INTO RPT_DEP_LOAN_STAT SELECT * FROM session.tmp_rpt_dep_loan_end
	;--
    IF out_sqlcode = 100 THEN
		SET out_sqlcode = 0;--
    ELSEIF out_sqlcode <> 0 THEN
		SET out_msg = '映射[RPT_DEP_LOAN_STAT]写物理表 失败';--
		RETURN 10;--
    END IF;--

	SET out_sqlcode = 0;--
	SET out_msg = '映射[RPT_DEP_LOAN_STAT]成功完成';--

	COMMIT;--
	set OUT_SQLCODE=0;--
	RETURN 0;--
error_return:
	ROLLBACK;--
	RETURN 1;--
END;



CREATE OR REPLACE PROCEDURE E4_RPT_GJYW003 (
    IN S_DATE VARCHAR(8),
    OUT OUT_SQLCODE INTEGER,
    OUT OUT_MSG VARCHAR(255) )
  SPECIFIC "E4_RPT_GJYW003"
  LANGUAGE SQL
  NOT DETERMINISTIC
  EXTERNAL ACTION
  MODIFIES SQL DATA
  CALLED ON NULL INPUT
  INHERIT SPECIAL REGISTERS
  OLD SAVEPOINT LEVEL
BEGIN
  DECLARE SQLSTATE CHAR(5)  DEFAULT '00000';--
  DECLARE SQLCODE  INTEGER  DEFAULT 0;--
  DECLARE proc_return INTEGER DEFAULT 0;--
  DECLARE CONTINUE HANDLER FOR NOT FOUND ,SQLEXCEPTION,SQLWARNING

  SET out_sqlcode=SQLCODE;--
  SET out_msg=NULL;--


 /*第1步 清除输入参数日期的数据*/
   DELETE FROM rpt_gjyw003 WHERE DT = s_date;--

   IF out_sqlcode = 100 THEN
        SET out_sqlcode = 0;--
   ELSEIF out_sqlcode <> 0 THEN
        SET out_msg = 'DELETE rpt_gjyw003';--
         return 1;
       --  GOTO ERROR_RETURN;--
   END IF;--


  /*第2步 插入数据  结汇*/
  DECLARE GLOBAL TEMPORARY TABLE tmp_RPT_GJYW003 like rpt_gjyw003
    NOT LOGGED WITH REPLACE;--
    IF out_sqlcode <> 0 THEN
        SET out_msg = '定义[tmp_gl_ec_cal] 失败';--
         return 1;
          --  GOTO error_return;--
    END IF;--

--20110630修改，
--B21001经常项目,B21003服务贸易,B21011收益和经常转移 ,B21015资本与金融项目,B21017直接投资 ,B21021证券投资,B21024其它投资,B21028金融机构资本金外币转换
--汇总时再计算
  INSERT INTO session.tmp_RPT_GJYW003 (
  DT             ,
  BUSI_TP        ,
  CYC            ,
  PROJ           ,
  AMT            ,
  SUM_AMT        ,
  BANK_AMT       ,
  E_ORG_AMT      ,
  C_ORG_AMT      ,
  F_ORG_AMT      ,
  NATION_AMT     ,
  NON_NATION_AMT
  )
  SELECT
  spccdate ,
  CASE WHEN SPCATDTP IN ('1', '2') THEN 'B14001'
       WHEN SPCATDTP IN ('3', '4') THEN 'B14002' END as busi_tp,
  CASE WHEN SPCATDTP IN ('1', '2') THEN SPCACCYC
      WHEN SPCATDTP IN ('3', '4') THEN SPCBCCYC END as cyc,
  CASE    WHEN SPCACSCS IN ('110HJ', '11001', '110XJ',
               '11002', '11003', '11004', '11005', '11006')
          THEN 'B21002'  --  1、货物贸易
          WHEN SPCACSCS IN ('12XHJ', '12X01', '12XXJ', '12X02', '12X03',
                           '12X04', '12X05', '12X06')
          THEN 'B21004'    -- 其中：银行卡
          WHEN SPCACSCS IN ('121HJ', '12101', '121XJ', '12102', '12103',
               '12104', '12106' )
          THEN 'B21005'    -- 运输
          WHEN SPCACSCS IN ('122HJ', '12201', '122XJ', '12202', '12203',
                '12204', '12105','12205', '12206')
          THEN 'B21006'   -- 旅游
          WHEN SPCACSCS IN ('123HJ', '12301', '123XJ', '12302', '12303',
               '12304', '12305', '12306')
          THEN 'B21007'  -- 金融和保险服务
          WHEN SPCACSCS IN ('124HJ', '12401', '124XJ', '12402', '12403',
               '12404', '12405', '12406' )
          THEN 'B21008'   -- 专有权利使用费和特许费
          WHEN SPCACSCS IN ('125HJ', '12501', '125XJ', '12502', '12503',
              '12504', '12505', '12506')
          THEN 'B21009'         -- 咨询服务
          WHEN SPCACSCS IN ('126HJ', '12601', '126XJ', '12602', '12603',
               '12604', '12605', '12606'  )
          THEN 'B21010'         -- 其它服务
          WHEN SPCACSCS IN ('131HJ', '13101', '131XJ', '13102', '13103',
               '13104', '13105', '13106' )
          THEN 'B21012'  -- 其中：职工报酬和赡家款
          WHEN SPCACSCS IN ('132HJ', '13201', '132XJ', '13202', '13203',
              '13204', '13205', '13206')
          THEN 'B21013'    -- 投资收益
          WHEN SPCACSCS IN ('133HJ', '13301', '133XJ', '13302', '13303',
               '13304', '13305', '13306' )
          THEN 'B21014'  -- 其它经常转移
          WHEN SPCACSCS IN ('210HJ', '21001', '210XJ', '21002', '21003',
              '21004', '21005', '21006')
          THEN 'B21016'    -- 1、资本账户
          WHEN SPCACSCS IN ('221HJ', '22101', '221XJ', '22102', '22103',
              '22104', '22105', '22106')
          THEN 'B21018'   -- 其中：投资资本金
          WHEN SPCACSCS IN ('222HJ', '22201', '222XJ', '22202', '22203',
               '22204', '22205', '22206')
          THEN 'B21019'  -- 直接投资撤资
          WHEN SPCACSCS IN ('223HJ', '22301', '223XJ', '22302', '22303',
              '22304', '22305', '22306')
          THEN 'B21020'      -- 房地产
          WHEN SPCACSCS IN ('231HJ', '23101', '231XJ', '23102', '23103', '23104', '23105', '23106' ) THEN 'B21022'                               -- 其中：对境外证券投资撤回
          WHEN SPCACSCS IN ('232HJ', '23201', '232XJ', '23202', '23203', '23204', '23205', '23206') THEN 'B21023'                               -- 证券筹资
          WHEN SPCACSCS IN ('241HJ', '24101', '241XJ', '24102', '24103', '24104', '24105', '24106') THEN 'B21025'                               -- 其中：跨境贷款
          WHEN SPCACSCS IN ('242HJ', '24201', '242XJ', '24202', '24203', '24204', '24205', '24206' ) THEN 'B21026'                               -- 外债转贷款
          WHEN SPCACSCS IN ('250HJ', '25001', '250XJ', '25002', '25003', '25004', '25005', '25006') THEN 'B21027'                               -- 4、国内外汇贷款
          WHEN SPCACSCS IN ('461HJ', '261HJ', '26101',  '46101', '461XJ',  '261XJ', '26102',  '46102', '26103', '46103', '26104', '46104', '26105', '46105', '26106', '46106' ) THEN 'B21029'    -- 其中：资本金（营运资金）
          WHEN SPCACSCS IN ('262HJ', '26201', '262XJ', '26202', '26203', '26204', '26205', '26206' ) THEN 'B21030'                               -- 代债务人结汇
          WHEN SPCACSCS IN ('270HJ', '27001', '27002', '27003', '27004', '27005', '27006') THEN 'B21031'                     -- 三、其它
ELSE '' END  as PROJ,
SUM(CASE WHEN spcacscs IN ('100HJ','110HJ','120HJ','12XHJ','121HJ','122HJ','123HJ','124HJ','125HJ','126HJ','130HJ','131HJ','132HJ','133HJ','200HJ','210HJ','220HJ','221HJ','222HJ','223HJ','230HJ','231HJ','232HJ','240HJ','440HJ','241HJ','242HJ','250HJ','260XJ','261HJ','262HJ','270HJ','270XJ') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('100HJ','110HJ','120HJ','12XHJ','121HJ','122HJ','123HJ','124HJ','125HJ','126HJ','130HJ','131HJ','132HJ','133HJ','200HJ','210HJ','220HJ','221HJ','222HJ','223HJ','230HJ','231HJ','232HJ','240HJ','440HJ','241HJ','242HJ','250HJ','260XJ','461HJ','261HJ','262HJ','270HJ','270XJ') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as AMT,  --小计
SUM(CASE WHEN spcacscs IN ('100XJ','110XJ','120XJ','12XXJ','121XJ','122XJ','123XJ','124XJ','125XJ','126XJ','130XJ','131XJ','132XJ','133XJ','200XJ','210XJ','220XJ','221XJ','222XJ','223XJ','230XJ','231XJ','232XJ','240XJ','440XJ','241XJ','242XJ','250XJ','260HJ','261XJ','262XJ','270XJ','270HJ') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('100XJ','110XJ','120XJ','12XXJ','121XJ','122XJ','123XJ','124XJ','125XJ','126XJ','130XJ','131XJ','132XJ','133XJ','200XJ','210XJ','220XJ','221XJ','222XJ','223XJ','230XJ','231XJ','232XJ','240XJ','440XJ','241XJ','242XJ','250XJ','260HJ','261XJ','262XJ','270XJ','270HJ') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as SUM_AMT, --合计
SUM(CASE WHEN spcacscs IN ('10001','11001','12001','12X01','12101','12201','12301','12401','12501','12601','13001','13101','13201','13301','20001','21001','22001','22101','22201','22301','23001','23101','23201','24001','44001','24101','24201','25001','26001','26101','26201','27001') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('10001','11001','12001','12X01','12101','12201','12301','12401','12501','12601','13001','13101','13201','13301','20001','21001','22001','22101','22201','22301','23001','23101','23201','24001','44001','24101','24201','25001','26001','26101','26201','27001') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as BANK_AMT, --银行自身
SUM(CASE WHEN spcacscs IN ('10002','11002','12002','12X02','12102','12202','12302','12402','12502','12602','13002','13102','13202','13302','20002','21002','22002','22102','22202','22302','23002','23102','23202','24002','44002','24102','24202','25002','26002','26102','26202','27002') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('10002','11002','12002','12X02','12102','12202','12302','12402','12502','12602','13002','13102','13202','13302','20002','21002','22002','22102','22202','22302','23002','23102','23202','24002','44002','24102','24202','25002','26002','26102','26202','27002') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as E_ORG_AMT,  --金融机构
SUM(CASE WHEN spcacscs IN ('10003','11003','11005','11006','12003','12X03','12103','12203','12303','12403','12503','12603','13003','13103','13203','13303','20003','21003','22003','22203','22303','23003','23103','23203','24003','44003','24203','25003','26003','26103','26203') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('10003','11003','11005','11006','12003','12X03','12103','12203','12303','12403','12503','12603','13003','13103','13203','13303','20003','21003','22003','22203','22303','23003','23103','23203','24003','44003','24203','25003','26003','26103','26203') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as C_ORG_AMT, --中资机构(居民个人类贸易项下算在中资机构中)
SUM(CASE WHEN spcacscs IN ('10004','11004','12004','12X04','12104','12204','12304','12404','12504','12604','13004','13104','13204','13304','20004','21004','22004','22103','22104','22204','22304','23004','23104','23204','24004','44004','24103','24104','24204','25004','26004','26104','26204','27003','27004') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('10004','11004','12004','12X04','12104','12204','12304','12404','12504','12604','13004','13104','13204','13304','20004','21004','22004','22104','22103','22204','22304','23004','23104','23204','24004','44004','24103','24104','24204','25004','26004','26104','26204','27003','27004') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as F_ORG_AMT, --外资机构
SUM(CASE WHEN spcacscs IN ('10005','12005','12X05','12105','12205','12305','12405','12505','12605','13005','13105','13205','13305','20005','21005','22005','22105','22205','22305','23005','23105','23205','24005','44005','24105','24205','25005','26005','26105','26205','27005') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('10005','12005','12X05','12105','12205','12305','12405','12505','12605','13005','13105','13205','13305','20005','21005','22005','22105','22205','22305','23005','23105','23205','24005','44005','24105','24205','25005','26005','26105','26205','27005') AND SPCATDTP IN ('3','4') THEN SPCbAMT END)  as NATION_AMT,  --居民个人
SUM(CASE WHEN spcacscs IN ('10006','12006','12X06','12106','12206','12306','12406','12506','12606','13006','13106','13206','13306','20006','21006','22006','22106','22206','22306','23006','23106','23206','24006','44006','24106','24206','25006','26006','26106','26206','27006') AND SPCATDTP IN ('1','2') THEN SPCaAMT
     WHEN spcacscs IN ('10006','12006','12X06','12106','12206','12306','12406','12506','12606','13006','13106','13206','13306','20006','21006','22006','22106','22206','22306','23006','23106','23206','24006','44006','24106','24206','25006','26006','26106','26206','27006') AND SPCATDTP IN ('3','4') THEN SPCbAMT END ) as NON_NATION_AMT
FROM NDS_KER_AFFMSPTS
WHERE substr(spccdate, 1, 6) =  substr(s_date, 1, 6)
and spccdate<=s_date
and SPCATDTP IN ('1','2')
AND SPCARS1B <> '9'
and SPCBFLAG not in ('2', '3')
AND SPCACSCS IN
('100HJ', '10001', '100XJ', '10002', '10003', '10004', '10005', '10006',
'110HJ', '11001', '110XJ', '11002', '11003', '11004', '11005', '11006',
'120HJ', '12001', '120XJ', '12002', '12003', '12004', '12005', '12006',
'12XHJ', '12X01', '12XXJ', '12X02', '12X03', '12X04', '12X05', '12X06',
'121HJ', '12101', '121XJ', '12102', '12103', '12104', '12105', '12106',
'122HJ', '12201', '122XJ', '12202', '12203', '12204', '12205', '12206',
'123HJ', '12301', '123XJ', '12302', '12303', '12304', '12305', '12306',
'124HJ', '12401', '124XJ', '12402', '12403', '12404', '12405', '12406',
'125HJ', '12501', '125XJ', '12502', '12503', '12504', '12505', '12506',
'126HJ', '12601', '126XJ', '12602', '12603', '12604', '12605', '12606',
'130HJ', '13001', '130XJ', '13002', '13003', '13004', '13005', '13006',
'131HJ', '13101', '131XJ', '13102', '13103', '13104', '13105', '13106',
'132HJ', '13201', '132XJ', '13202', '13203', '13204', '13205', '13206',
'133HJ', '13301', '133XJ', '13302', '13303', '13304', '13305', '13306',
'200HJ', '20001', '200XJ', '20002', '20003', '20004', '20005', '20006',
'210HJ', '21001', '210XJ', '21002', '21003', '21004', '21005', '21006',
'220HJ', '22001', '220XJ', '22002', '22003', '22004', '22005', '22006',
'221HJ', '22101', '221XJ', '22102', '22103', '22104', '22105', '22106',
'222HJ', '22201', '222XJ', '22202', '22203', '22204', '22205', '22206',
'223HJ', '22301', '223XJ', '22302', '22303', '22304', '22305', '22306',
'230HJ', '23001', '230XJ', '23002', '23003', '23004', '23005', '23006',
'231HJ', '23101', '231XJ', '23102', '23103', '23104', '23105', '23106',
'232HJ', '23201', '232XJ', '23202', '23203', '23204', '23205', '23206',
'240HJ', '440HJ', '24001', '44001', '240XJ', '440XJ', '24002', '44002',
'24003', '44003', '24004', '44004', '24005', '44005', '24006', '44006',
'241HJ', '24101', '241XJ', '24102', '24103', '24104', '24105', '24106',
'242HJ', '24201', '242XJ', '24202', '24203', '24204', '24205', '24206',
'250HJ', '25001', '250XJ', '25002', '25003', '25004', '25005', '25006',
'260XJ', '26001', '260HJ', '26002', '26003', '26004', '26005', '26006',
'261HJ', '26101', '261XJ', '26102','26103', '26104', '26105',  '26106',
'262HJ', '26201', '262XJ', '26202', '26203', '26204', '26205', '26206',
'270HJ', '270XJ', '27001', '27002', '27003', '27004', '27005', '27006')
GROUP BY
    SPCCDATE,
  CASE WHEN SPCATDTP IN ('1', '2') THEN 'B14001'
       WHEN SPCATDTP IN ('3', '4') THEN 'B14002' END ,
  CASE WHEN SPCATDTP IN ('1', '2') THEN SPCACCYC
      WHEN SPCATDTP IN ('3', '4') THEN SPCBCCYC END,
  CASE    WHEN SPCACSCS IN ('110HJ', '11001', '110XJ',
               '11002', '11003', '11004', '11005', '11006')
          THEN 'B21002'  --  1、货物贸易
          WHEN SPCACSCS IN ('12XHJ', '12X01', '12XXJ', '12X02', '12X03',
                           '12X04', '12X05', '12X06')
          THEN 'B21004'    -- 其中：银行卡
          WHEN SPCACSCS IN ('121HJ', '12101', '121XJ', '12102', '12103',
               '12104', '12106' )
          THEN 'B21005'    -- 运输
          WHEN SPCACSCS IN ('122HJ', '12201', '122XJ', '12202', '12203',
                '12204','12105', '12205', '12206')
          THEN 'B21006'   -- 旅游
          WHEN SPCACSCS IN ('123HJ', '12301', '123XJ', '12302', '12303',
               '12304', '12305', '12306')
          THEN 'B21007'  -- 金融和保险服务
          WHEN SPCACSCS IN ('124HJ', '12401', '124XJ', '12402', '12403',
               '12404', '12405', '12406' )
          THEN 'B21008'   -- 专有权利使用费和特许费
          WHEN SPCACSCS IN ('125HJ', '12501', '125XJ', '12502', '12503',
              '12504', '12505', '12506')
          THEN 'B21009'         -- 咨询服务
          WHEN SPCACSCS IN ('126HJ', '12601', '126XJ', '12602', '12603',
               '12604', '12605', '12606'  )
          THEN 'B21010'         -- 其它服务
          WHEN SPCACSCS IN ('131HJ', '13101', '131XJ', '13102', '13103',
               '13104', '13105', '13106' )
          THEN 'B21012'  -- 其中：职工报酬和赡家款
          WHEN SPCACSCS IN ('132HJ', '13201', '132XJ', '13202', '13203',
              '13204', '13205', '13206')
          THEN 'B21013'    -- 投资收益
          WHEN SPCACSCS IN ('133HJ', '13301', '133XJ', '13302', '13303',
               '13304', '13305', '13306' )
          THEN 'B21014'  -- 其它经常转移
          WHEN SPCACSCS IN ('210HJ', '21001', '210XJ', '21002', '21003',
              '21004', '21005', '21006')
          THEN 'B21016'    -- 1、资本账户
          WHEN SPCACSCS IN ('221HJ', '22101', '221XJ', '22102', '22103',
              '22104', '22105', '22106')
          THEN 'B21018'   -- 其中：投资资本金
          WHEN SPCACSCS IN ('222HJ', '22201', '222XJ', '22202', '22203',
               '22204', '22205', '22206')
          THEN 'B21019'  -- 直接投资撤资
          WHEN SPCACSCS IN ('223HJ', '22301', '223XJ', '22302', '22303',
              '22304', '22305', '22306')
          THEN 'B21020'      -- 房地产
          WHEN SPCACSCS IN ('231HJ', '23101', '231XJ', '23102', '23103', '23104', '23105', '23106' ) THEN 'B21022'                               -- 其中：对境外证券投资撤回
          WHEN SPCACSCS IN ('232HJ', '23201', '232XJ', '23202', '23203', '23204', '23205', '23206') THEN 'B21023'                               -- 证券筹资
          WHEN SPCACSCS IN ('241HJ', '24101', '241XJ', '24102', '24103', '24104', '24105', '24106') THEN 'B21025'                               -- 其中：跨境贷款
          WHEN SPCACSCS IN ('242HJ', '24201', '242XJ', '24202', '24203', '24204', '24205', '24206' ) THEN 'B21026'                               -- 外债转贷款
          WHEN SPCACSCS IN ('250HJ', '25001', '250XJ', '25002', '25003', '25004', '25005', '25006') THEN 'B21027'                               -- 4、国内外汇贷款
          WHEN SPCACSCS IN ('461HJ', '261HJ', '26101',  '46101', '461XJ',  '261XJ', '26102',  '46102', '26103', '46103', '26104', '46104', '26105', '46105', '26106', '46106' ) THEN 'B21029'    -- 其中：资本金（营运资金）
          WHEN SPCACSCS IN ('262HJ', '26201', '262XJ', '26202', '26203', '26204', '26205', '26206' ) THEN 'B21030'                               -- 代债务人结汇
          WHEN SPCACSCS IN ('270HJ', '27001', '27002', '27003', '27004', '27005', '27006') THEN 'B21031'                     -- 三、其它
ELSE '' END;--
        IF out_sqlcode <> 0 THEN
        IF out_sqlcode <> 100 THEN
          SET out_msg = 'insert rpt_gjyw003 date '||s_date;--
          return 1;
          -- GOTO ERROR_RETURN;--
        END IF;--
      END IF; --




 /*第2步 插入数据  售汇*/
INSERT INTO session.tmp_RPT_GJYW003 (
DT             ,
BUSI_TP        ,
CYC            ,
PROJ           ,
AMT ,
SUM_AMT ,
BANK_AMT  ,
E_ORG_AMT ,
C_ORG_AMT ,
F_ORG_AMT ,
NATION_AMT  ,
NON_NATION_AMT
)
SELECT
spccdate,
CASE WHEN SPCATDTP IN ('1', '2') THEN 'B14001'
     WHEN SPCATDTP IN ('3', '4') THEN 'B14002' END,
CASE WHEN SPCATDTP IN ('1', '2') THEN SPCACCYC
     WHEN SPCATDTP IN ('3', '4') THEN SPCBCCYC END,
CASE      WHEN SPCACSCS IN ('300HJ', '30001', '300XJ', '30002', '30003', '30004', '30005', '30006'                                                 ) THEN 'B21001'
          WHEN SPCACSCS IN ('310HJ', '31001', '310XJ', '31002', '31003', '31004', '31005', '31006'                                                 ) THEN 'B21002'
          WHEN SPCACSCS IN ('320HJ', '32001', '320XJ', '32002', '32003', '32004', '32005', '32006'                                                 ) THEN 'B21003'
          WHEN SPCACSCS IN ('32XHJ', '32X01', '32XXJ', '32X02', '32X03', '32X04', '32X05', '32X06'                                                 ) THEN 'B21004'
          WHEN SPCACSCS IN ('321HJ', '32101', '321XJ', '32102', '32103', '32104', '32105', '32106'                                                 ) THEN 'B21005'
          WHEN SPCACSCS IN ('322HJ', '32201', '322XJ', '32202', '32203', '32204', '32205', '32206'                                                 ) THEN 'B21006'
          WHEN SPCACSCS IN ('323HJ', '32301', '323XJ', '32302', '32303', '32304', '32305', '32306'                                                 ) THEN 'B21007'
          WHEN SPCACSCS IN ('324HJ', '32401', '324XJ', '32402', '32403', '32404', '32405', '32406'                                                 ) THEN 'B21008'
          WHEN SPCACSCS IN ('325HJ', '32501', '325XJ', '32502', '32503', '32504', '32505', '32506'                                                 ) THEN 'B21009'
          WHEN SPCACSCS IN ('326HJ', '32601', '326XJ', '32602', '32603', '32604', '32605', '32606'                                                 ) THEN 'B21010'
          WHEN SPCACSCS IN ('330HJ', '33001', '330XJ', '33002', '33003', '33004', '33005', '33006'                                                 ) THEN 'B21011'
          WHEN SPCACSCS IN ('331HJ', '33101', '331XJ', '33102', '33103', '33104', '33105', '33106'                                                 ) THEN 'B21012'
          WHEN SPCACSCS IN ('332HJ', '33201', '332XJ', '33202', '33203', '33204', '33205', '33206'                                                 ) THEN 'B21013'
          WHEN SPCACSCS IN ('333HJ', '33301', '333XJ', '33302', '33303', '33304', '33305', '33306'                                                 ) THEN 'B21014'
          WHEN SPCACSCS IN ('400HJ', '40001', '400XJ', '40002', '40003', '40004', '40005', '40006'                                                 ) THEN 'B21015'
          WHEN SPCACSCS IN ('410HJ', '41001', '410XJ', '41002', '41003', '41004', '41005', '41006'                                                 ) THEN 'B21016'
          WHEN SPCACSCS IN ('420HJ', '42001', '420XJ', '42002', '42003', '42004', '42005', '42006'                                                 ) THEN 'B21017'
          WHEN SPCACSCS IN ('421HJ', '42101', '421XJ', '42102', '42103', '42104', '42105', '42106'                                                 ) THEN 'B21018'
          WHEN SPCACSCS IN ('422HJ', '42201', '422XJ', '42202', '42203', '42204', '42205', '42206'                                                 ) THEN 'B21019'
          WHEN SPCACSCS IN ('423HJ', '42301', '423XJ', '42302', '42303', '42304', '42305', '42306'                                                 ) THEN 'B21020'
          WHEN SPCACSCS IN ('430HJ', '43001', '430XJ', '43002', '43003', '43004', '43005', '43006'                                                 ) THEN 'B21021'
          WHEN SPCACSCS IN ('431HJ', '43101', '431XJ', '43102', '43103', '43104', '43105', '43106'                                               ) THEN 'B21022'
          WHEN SPCACSCS IN ('432HJ', '43201', '432XJ', '43202', '43203', '43204', '43205', '43206'                                                 ) THEN 'B21023'
          WHEN SPCACSCS IN ('440HJ', '440HJ', '44001', '44001', '440XJ', '440XJ', '44002', '44002', '44003', '44003', '44004', '44004', '44005', '44005', '44006', '44006' ) THEN 'B21024'
          WHEN SPCACSCS IN ('441HJ', '44101', '441XJ', '44102', '44103', '44104', '44105', '44106'                                                 ) THEN 'B21025'
          WHEN SPCACSCS IN ('442HJ', '44201', '442XJ', '44202', '44203', '44204', '44205', '44206'                                                 ) THEN 'B21026'
          WHEN SPCACSCS IN ('450HJ', '45001', '450XJ', '45002', '45003', '45004', '45005', '45006'                                                 ) THEN 'B21027'
          WHEN SPCACSCS IN ('460XJ', '46001', '460HJ', '46002', '46003', '46004', '46005', '46006'                                                 ) THEN 'B21028'
          WHEN SPCACSCS IN ('461HJ', '461HJ', '46101', '46101', '461XJ', '461XJ', '46102', '46102', '46103', '46103', '46104', '46104', '46105', '46105', '46106', '46106' ) THEN 'B21029'
          WHEN SPCACSCS IN ('462HJ', '46201', '462XJ', '46202', '46203', '46204', '46205', '46206'                                                 ) THEN 'B21030'
          WHEN SPCACSCS IN ('470HJ', '47001', '470XJ', '47002', '47003', '47004', '47005', '47006'                                                ) THEN 'B21031'
ELSE '' END,
SUM(CASE WHEN spcacscs IN ('300HJ','310HJ','320HJ','32XHJ','321HJ','322HJ','323HJ','324HJ','325HJ','326HJ','330HJ','331HJ','332HJ','333HJ','400HJ','410HJ','420HJ','421HJ','422HJ','423HJ','430HJ','431HJ','432HJ','440HJ','440HJ','441HJ','442HJ','450HJ','460XJ','461HJ','461HJ','462HJ','470HJ') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('300HJ','310HJ','320HJ','32XHJ','321HJ','322HJ','323HJ','324HJ','325HJ','326HJ','330HJ','331HJ','332HJ','333HJ','400HJ','410HJ','420HJ','421HJ','422HJ','423HJ','430HJ','431HJ','432HJ','440HJ','440HJ','441HJ','442HJ','450HJ','460XJ','461HJ','461HJ','462HJ','470HJ') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('300XJ','310XJ','320XJ','32XXJ','321XJ','322XJ','323XJ','324XJ','325XJ','326XJ','330XJ','331XJ','332XJ','333XJ','400XJ','410XJ','420XJ','421XJ','422XJ','423XJ','430XJ','431XJ','432XJ','440XJ','440XJ','441XJ','442XJ','450XJ','460HJ','461XJ','461XJ','462XJ','470XJ') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('300XJ','310XJ','320XJ','32XXJ','321XJ','322XJ','323XJ','324XJ','325XJ','326XJ','330XJ','331XJ','332XJ','333XJ','400XJ','410XJ','420XJ','421XJ','422XJ','423XJ','430XJ','431XJ','432XJ','440XJ','440XJ','441XJ','442XJ','450XJ','460HJ','461XJ','461XJ','462XJ','470XJ') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('30001','31001','32001','32X01','32101','32201','32301','32401','32501','32601','33001','33101','33201','33301','40001','41001','42001','42101','42201','42301','43001','43101','43201','44001','44001','44101','44201','45001','46001','46101','46101','46201','47001') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('30001','31001','32001','32X01','32101','32201','32301','32401','32501','32601','33001','33101','33201','33301','40001','41001','42001','42101','42201','42301','43001','43101','43201','44001','44001','44101','44201','45001','46001','46101','46101','46201','47001') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('30002','31002','32002','32X02','32102','32202','32302','32402','32502','32602','33002','33102','33202','33302','40002','41002','42002','42102','42202','42302','43002','43102','43202','44002','44002','44102','44202','45002','46002','46102','46102','46202','47002') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('30002','31002','32002','32X02','32102','32202','32302','32402','32502','32602','33002','33102','33202','33302','40002','41002','42002','42102','42202','42302','43002','43102','43202','44002','44002','44102','44202','45002','46002','46102','46102','46202','47002') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('30003','31003','32003','32X03','32103','32203','32303','32403','32503','32603','33003','33103','33203','33303','40003','41003','42003','42103','42203','42303','43003','43103','43203','44003','44003','44103','44203','45003','46003','46103','46103','46203') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('30003','31003','32003','32X03','32103','32203','32303','32403','32503','32603','33003','33103','33203','33303','40003','41003','42003','42103','42203','42303','43003','43103','43203','44003','44003','44103','44203','45003','46003','46103','46103','46203') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('30004','31004','32004','32X04','32104','32204','32304','32404','32504','32604','33004','33104','33204','33304','40004','41004','42004','42104','42204','42304','43004','43104','43204','44004','44004','44104','44204','45004','46004','46104','46104','46204','47003','47004') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('30004','31004','32004','32X04','32104','32204','32304','32404','32504','32604','33004','33104','33204','33304','40004','41004','42004','42104','42204','42304','43004','43104','43204','44004','44004','44104','44204','45004','46004','46104','46104','46204','47003','47004') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('30005','31005','32005','32X05','32105','32205','32305','32405','32505','32605','33005','33105','33205','33305','40005','41005','42005','42105','42205','42305','43005','43105','43205','44005','44005','44105','44205','45005','46005','46105','46105','46205','47005') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('30005','31005','32005','32X05','32105','32205','32305','32405','32505','32605','33005','33105','33205','33305','40005','41005','42005','42105','42205','42305','43005','43105','43205','44005','44005','44105','44205','45005','46005','46105','46105','46205','47005') AND SPCATDTP IN ('3','4') THEN SPCbAMT END),
SUM(CASE WHEN spcacscs IN ('30006','31006','32006','32X06','32106','32206','32306','32406','32506','32606','33006','33106','33206','33306','40006','41006','42006','42106','42206','42306','43006','43106','43206','44006','44006','44106','44206','45006','46006','46106','46106','46206','47006') AND SPCATDTP IN ('1','2') THEN SPCaAMT
         WHEN spcacscs IN ('30006','31006','32006','32X06','32106','32206','32306','32406','32506','32606','33006','33106','33206','33306','40006','41006','42006','42106','42206','42306','43006','43106','43206','44006','44006','44106','44206','45006','46006','46106','46106','46206','47006') AND SPCATDTP IN ('3','4') THEN SPCbAMT END )

FROM NDS_KER_AFFMSPTS
WHERE
substr(spccdate, 1, 6) =  substr(s_date, 1, 6) and
spccdate<=s_date and
SPCATDTP IN ('3','4') AND SPCARS1B <> '9' and SPCBFLAG not in ('2', '3')   AND  --'1','2',
SPCACSCS IN
(
'300HJ','310HJ','320HJ','32XHJ','321HJ','322HJ','323HJ','324HJ','325HJ','326HJ','330HJ','331HJ','332HJ','333HJ','400HJ','410HJ','420HJ','421HJ','422HJ','423HJ','430HJ','431HJ','432HJ','440HJ','440HJ','441HJ','442HJ','450HJ','460XJ','461HJ','461HJ','462HJ','470HJ',
'300HJ','310HJ','320HJ','32XHJ','321HJ','322HJ','323HJ','324HJ','325HJ','326HJ','330HJ','331HJ','332HJ','333HJ','400HJ','410HJ','420HJ','421HJ','422HJ','423HJ','430HJ','431HJ','432HJ','440HJ','440HJ','441HJ','442HJ','450HJ','460XJ','461HJ','461HJ','462HJ','470HJ',
'300XJ','310XJ','320XJ','32XXJ','321XJ','322XJ','323XJ','324XJ','325XJ','326XJ','330XJ','331XJ','332XJ','333XJ','400XJ','410XJ','420XJ','421XJ','422XJ','423XJ','430XJ','431XJ','432XJ','440XJ','440XJ','441XJ','442XJ','450XJ','460HJ','461XJ','461XJ','462XJ','470XJ',
'300XJ','310XJ','320XJ','32XXJ','321XJ','322XJ','323XJ','324XJ','325XJ','326XJ','330XJ','331XJ','332XJ','333XJ','400XJ','410XJ','420XJ','421XJ','422XJ','423XJ','430XJ','431XJ','432XJ','440XJ','440XJ','441XJ','442XJ','450XJ','460HJ','461XJ','461XJ','462XJ','470XJ',
'30001','31001','32001','32X01','32101','32201','32301','32401','32501','32601','33001','33101','33201','33301','40001','41001','42001','42101','42201','42301','43001','43101','43201','44001','44001','44101','44201','45001','46001','46101','46101','46201','47001',
'30001','31001','32001','32X01','32101','32201','32301','32401','32501','32601','33001','33101','33201','33301','40001','41001','42001','42101','42201','42301','43001','43101','43201','44001','44001','44101','44201','45001','46001','46101','46101','46201','47001',
'30002','31002','32002','32X02','32102','32202','32302','32402','32502','32602','33002','33102','33202','33302','40002','41002','42002','42102','42202','42302','43002','43102','43202','44002','44002','44102','44202','45002','46002','46102','46102','46202','47002',
'30002','31002','32002','32X02','32102','32202','32302','32402','32502','32602','33002','33102','33202','33302','40002','41002','42002','42102','42202','42302','43002','43102','43202','44002','44002','44102','44202','45002','46002','46102','46102','46202','47002',
'30003','31003','32003','32X03','32103','32203','32303','32403','32503','32603','33003','33103','33203','33303','40003','41003','42003','42103','42203','42303','43003','43103','43203','44003','44003','44103','44203','45003','46003','46103','46103','46203','47003',
'30003','31003','32003','32X03','32103','32203','32303','32403','32503','32603','33003','33103','33203','33303','40003','41003','42003','42103','42203','42303','43003','43103','43203','44003','44003','44103','44203','45003','46003','46103','46103','46203','47003',
'30004','31004','32004','32X04','32104','32204','32304','32404','32504','32604','33004','33104','33204','33304','40004','41004','42004','42104','42204','42304','43004','43104','43204','44004','44004','44104','44204','45004','46004','46104','46104','46204','47004',
'30004','31004','32004','32X04','32104','32204','32304','32404','32504','32604','33004','33104','33204','33304','40004','41004','42004','42104','42204','42304','43004','43104','43204','44004','44004','44104','44204','45004','46004','46104','46104','46204','47004',
'30005','31005','32005','32X05','32105','32205','32305','32405','32505','32605','33005','33105','33205','33305','40005','41005','42005','42105','42205','42305','43005','43105','43205','44005','44005','44105','44205','45005','46005','46105','46105','46205','47005',
'30005','31005','32005','32X05','32105','32205','32305','32405','32505','32605','33005','33105','33205','33305','40005','41005','42005','42105','42205','42305','43005','43105','43205','44005','44005','44105','44205','45005','46005','46105','46105','46205','47005',
'30006','31006','32006','32X06','32106','32206','32306','32406','32506','32606','33006','33106','33206','33306','40006','41006','42006','42106','42206','42306','43006','43106','43206','44006','44006','44106','44206','45006','46006','46106','46106','46206','47006',
'30006','31006','32006','32X06','32106','32206','32306','32406','32506','32606','33006','33106','33206','33306','40006','41006','42006','42106','42206','42306','43006','43106','43206','44006','44006','44106','44206','45006','46006','46106','46106','46206','47006'
)
GROUP BY
SPCCDATE,
CASE WHEN SPCATDTP IN ('1', '2') THEN 'B14001'
     WHEN SPCATDTP IN ('3', '4') THEN 'B14002' END,
CASE WHEN SPCATDTP IN ('1', '2') THEN SPCACCYC
     WHEN SPCATDTP IN ('3', '4') THEN SPCBCCYC END,
CASE      WHEN SPCACSCS IN ('300HJ', '30001', '300XJ', '30002', '30003', '30004', '30005', '30006'                                                 ) THEN 'B21001'
          WHEN SPCACSCS IN ('310HJ', '31001', '310XJ', '31002', '31003', '31004', '31005', '31006'                                                 ) THEN 'B21002'
          WHEN SPCACSCS IN ('320HJ', '32001', '320XJ', '32002', '32003', '32004', '32005', '32006'                                                 ) THEN 'B21003'
          WHEN SPCACSCS IN ('32XHJ', '32X01', '32XXJ', '32X02', '32X03', '32X04', '32X05', '32X06'                                                 ) THEN 'B21004'
          WHEN SPCACSCS IN ('321HJ', '32101', '321XJ', '32102', '32103', '32104', '32105', '32106'                                                 ) THEN 'B21005'
          WHEN SPCACSCS IN ('322HJ', '32201', '322XJ', '32202', '32203', '32204', '32205', '32206'                                                 ) THEN 'B21006'
          WHEN SPCACSCS IN ('323HJ', '32301', '323XJ', '32302', '32303', '32304', '32305', '32306'                                                 ) THEN 'B21007'
          WHEN SPCACSCS IN ('324HJ', '32401', '324XJ', '32402', '32403', '32404', '32405', '32406'                                                 ) THEN 'B21008'
          WHEN SPCACSCS IN ('325HJ', '32501', '325XJ', '32502', '32503', '32504', '32505', '32506'                                                 ) THEN 'B21009'
          WHEN SPCACSCS IN ('326HJ', '32601', '326XJ', '32602', '32603', '32604', '32605', '32606'                                                 ) THEN 'B21010'
          WHEN SPCACSCS IN ('330HJ', '33001', '330XJ', '33002', '33003', '33004', '33005', '33006'                                                 ) THEN 'B21011'
          WHEN SPCACSCS IN ('331HJ', '33101', '331XJ', '33102', '33103', '33104', '33105', '33106'                                                 ) THEN 'B21012'
          WHEN SPCACSCS IN ('332HJ', '33201', '332XJ', '33202', '33203', '33204', '33205', '33206'                                                 ) THEN 'B21013'
          WHEN SPCACSCS IN ('333HJ', '33301', '333XJ', '33302', '33303', '33304', '33305', '33306'                                                 ) THEN 'B21014'
          WHEN SPCACSCS IN ('400HJ', '40001', '400XJ', '40002', '40003', '40004', '40005', '40006'                                                 ) THEN 'B21015'
          WHEN SPCACSCS IN ('410HJ', '41001', '410XJ', '41002', '41003', '41004', '41005', '41006'                                                 ) THEN 'B21016'
          WHEN SPCACSCS IN ('420HJ', '42001', '420XJ', '42002', '42003', '42004', '42005', '42006'                                                 ) THEN 'B21017'
          WHEN SPCACSCS IN ('421HJ', '42101', '421XJ', '42102', '42103', '42104', '42105', '42106'                                                 ) THEN 'B21018'
          WHEN SPCACSCS IN ('422HJ', '42201', '422XJ', '42202', '42203', '42204', '42205', '42206'                                                 ) THEN 'B21019'
          WHEN SPCACSCS IN ('423HJ', '42301', '423XJ', '42302', '42303', '42304', '42305', '42306'                                                 ) THEN 'B21020'
          WHEN SPCACSCS IN ('430HJ', '43001', '430XJ', '43002', '43003', '43004', '43005', '43006'                                                 ) THEN 'B21021'
          WHEN SPCACSCS IN ('431HJ', '43101', '431XJ', '43102', '43103', '43104', '43105', '43106'                                               ) THEN 'B21022'
          WHEN SPCACSCS IN ('432HJ', '43201', '432XJ', '43202', '43203', '43204', '43205', '43206'                                                 ) THEN 'B21023'
          WHEN SPCACSCS IN ('440HJ', '440HJ', '44001', '44001', '440XJ', '440XJ', '44002', '44002', '44003', '44003', '44004', '44004', '44005', '44005', '44006', '44006' ) THEN 'B21024'
          WHEN SPCACSCS IN ('441HJ', '44101', '441XJ', '44102', '44103', '44104', '44105', '44106'                                                 ) THEN 'B21025'
          WHEN SPCACSCS IN ('442HJ', '44201', '442XJ', '44202', '44203', '44204', '44205', '44206'                                                 ) THEN 'B21026'
          WHEN SPCACSCS IN ('450HJ', '45001', '450XJ', '45002', '45003', '45004', '45005', '45006'                                                 ) THEN 'B21027'
          WHEN SPCACSCS IN ('460XJ', '46001', '460HJ', '46002', '46003', '46004', '46005', '46006'                                                 ) THEN 'B21028'
          WHEN SPCACSCS IN ('461HJ', '461HJ', '46101', '46101', '461XJ', '461XJ', '46102', '46102', '46103', '46103', '46104', '46104', '46105', '46105', '46106', '46106' ) THEN 'B21029'
          WHEN SPCACSCS IN ('462HJ', '46201', '462XJ', '46202', '46203', '46204', '46205', '46206'                                                 ) THEN 'B21030'
          WHEN SPCACSCS IN ('470HJ', '47001', '470XJ', '47002', '47003', '47004', '47005', '47006'                                                ) THEN 'B21031'
ELSE '' END ;--
  --插入结果表,先原币,再折美元
  insert into rpt_gjyw003
    select s_date,busi_tp,proj,cyc,
           sum(value(amt,0.0)),sum(value(sum_amt,0.0)),sum(value(bank_amt,0.0)),
           sum(value(e_org_amt,0.0)),sum(value(c_org_amt,0.0)),
           sum(value(f_org_amt,0.0)),sum(value(nation_amt,0.0)),
           sum(value(non_nation_amt,0.0))
    from session.tmp_RPT_GJYW003
    group by busi_tp,proj,cyc;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
       SET out_msg = 'insert rpt_gjyw003 step 2 date '||s_date;--
         return 1;
       --  GOTO ERROR_RETURN;--
        END IF;--
   END IF;  --
  insert into rpt_gjyw003
    select s_date,busi_tp,proj,cyc1,
           sum(amt),sum(sum_amt),sum(bank_amt),sum(e_org_amt),sum(c_org_amt),
           sum(f_org_amt),sum(nation_amt),sum(non_nation_amt)
    from (
    select dt,busi_tp,proj,'U01' as cyc1,
           /*
           fn_day_exchange_rate(dt,cyc,value(amt,0,0)) as amt,
           fn_day_exchange_rate(dt,cyc,value(sum_amt,0,0)) as sum_amt,
           fn_day_exchange_rate(dt,cyc,value(bank_amt,0,0)) as bank_amt,
           fn_day_exchange_rate(dt,cyc,value(e_org_amt,0,0)) as e_org_amt,
           fn_day_exchange_rate(dt,cyc,value(c_org_amt,0,0)) as c_org_amt,
           fn_day_exchange_rate(dt,cyc,value(f_org_amt,0,0)) as f_org_amt,
           fn_day_exchange_rate(dt,cyc,value(nation_amt,0,0)) as nation_amt,
           fn_day_exchange_rate(dt,cyc,value(non_nation_amt,0,0)) as non_nation_amt
          */
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,amt)) AS amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,sum_amt)) AS sum_amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,bank_amt)) AS bank_amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,e_org_amt)) AS e_org_amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,c_org_amt)) AS c_org_amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,f_org_amt)) AS f_org_amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,nation_amt)) AS nation_amt,
          fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,non_nation_amt)) AS non_nation_amt
    from session.tmp_RPT_GJYW003
--    group by dt,busi_tp,proj,cyc
    ) aa
    group by busi_tp,proj,cyc1;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
       SET out_msg = 'insert rpt_gjyw003 step 2 date '||s_date;--
         return 1;
        --  GOTO ERROR_RETURN;--
        END IF;--
   END IF;  --



/*解决大项目，小项目没有数据的问题，由其中汇总得出小项目*/
INSERT INTO RPT_GJYW003 (
DT             ,
BUSI_TP        ,
CYC            ,
PROJ           ,
AMT ,
SUM_AMT ,
BANK_AMT  ,
E_ORG_AMT ,
C_ORG_AMT ,
F_ORG_AMT ,
NATION_AMT  ,
NON_NATION_AMT
)
SELECT
DT,
busi_tp           ,
CYC            ,

case
when PROJ in ('B21004','B21005','B21006','B21007','B21008','B21009','B21010') then  'B21003'
when PROJ in ('B21012','B21013','B21014') then  'B21011'
when PROJ in ('B21018','B21019','B21020') then  'B21017'
when PROJ in ('B21022','B21023') then  'B21021'
when PROJ in ('B21025','B21026','B21027') then  'B21024'
when PROJ in ('B21029','B21030') then  'B21028'
end,
sum(AMT            ),
sum(SUM_AMT        ),
sum(BANK_AMT       ),
sum(E_ORG_AMT      ),
sum(C_ORG_AMT      ),
sum(F_ORG_AMT      ),
sum(NATION_AMT     ),
sum(NON_NATION_AMT )
FROM
RPT_GJYW003
WHERE
DT = s_date and PROJ in ('B21004','B21005','B21006','B21007','B21008','B21009',
'B21010','B21012','B21013','B21014','B21018','B21019','B21020','B21022','B21023',
'B21027','B21025','B21026','B21029','B21030')
group by
case
when PROJ in ('B21004','B21005','B21006','B21007','B21008','B21009','B21010') then  'B21003'  --2、服务贸易
when PROJ in ('B21012','B21013','B21014') then  'B21011'    --3、收益和经常转移
when PROJ in ('B21018','B21019','B21020') then  'B21017'    --2、收益和经常转移
when PROJ in ('B21022','B21023') then  'B21021'             -- 3、证券投资
when PROJ in ('B21025','B21026','B21027') then  'B21024'    -- 4、其它投资
when PROJ in ('B21029','B21030') then  'B21028'             -- 5、金融机构资本金外币转换
end,
DT,
CYC            ,
busi_tp           ;--

      IF out_sqlcode <> 0 THEN
        IF out_sqlcode <> 100 THEN
          SET out_msg = 'insert rpt_gjyw003 step 3 date '||s_date;--
          return 1;
         --  GOTO ERROR_RETURN;--
        END IF;--
      END IF;--


/*解决大项目，小项目没有数据的问题，由小项目汇总得出大项目*/
INSERT INTO RPT_GJYW003 (
DT             ,
BUSI_TP        ,
CYC            ,
PROJ           ,
AMT ,
SUM_AMT ,
BANK_AMT  ,
E_ORG_AMT ,
C_ORG_AMT ,
F_ORG_AMT ,
NATION_AMT  ,
NON_NATION_AMT
)
SELECT
DT,
busi_tp           ,
CYC            ,
case
when PROJ in ('B21002','B21003','B21011') then  'B21001'
when PROJ in ('B21016','B21017','B21021','B21024','B21028','B21031') then  'B21015'
end,
sum(AMT            ),
sum(SUM_AMT        ),
sum(BANK_AMT       ),
sum(E_ORG_AMT      ),
sum(C_ORG_AMT      ),
sum(F_ORG_AMT      ),
sum(NATION_AMT     ),
sum(NON_NATION_AMT )
FROM
RPT_GJYW003
WHERE
DT = s_date and PROJ in ('B21002', 'B21003', 'B21011', 'B21016', 'B21017', 'B21021', 'B21024', 'B21028','B21031')
group by
DT,
case
when PROJ in ('B21002','B21003','B21011') then  'B21001'
when PROJ in ('B21016','B21017','B21021','B21024','B21028','B21031') then  'B21015'
end,
CYC            ,
busi_tp           ;--

      IF out_sqlcode <> 0 THEN
        IF out_sqlcode <> 100 THEN
          SET out_msg = 'insert rpt_gjyw003 step 4 date '||s_date;--
            return 1;
          --      GOTO ERROR_RETURN;--
        END IF;--
      END IF;   --
  delete from rpt_gjyw011 where dt=s_date;--
   IF out_sqlcode = 100 THEN
        SET out_sqlcode = 0;--
   ELSEIF out_sqlcode <> 0 THEN
        SET out_msg = 'DELETE rpt_gjyw011';--
       return 1;
        --   GOTO ERROR_RETURN;--
   END IF;--

  DECLARE GLOBAL TEMPORARY TABLE tmp_rpt_gjyw011 like rpt_gjyw011
        NOT LOGGED WITH REPLACE;--
    IF out_sqlcode <> 0 THEN
        SET out_msg = '定义[tmp_rpt_gjyw011] 失败';--
        return 1;
        --    GOTO error_return;--
    END IF;--

    --本月
  insert into  session.tmp_rpt_gjyw011
    select spccdate,cyc,busi_type,sum(value(amt,0.0)),0
    from (
      select
        spccdate,
        CASE
          WHEN SPCATDTP IN ('1','2') THEN SPCACCYC
          WHEN SPCATDTP IN ('3', '4') THEN SPCBCCYC
        END as cyc,
        CASE
          WHEN SPCATDTP IN ('1','2') THEN '结汇'
          WHEN SPCATDTP IN ('3', '4') THEN '售汇'
        END as busi_type,
        CASE
          WHEN SPCATDTP IN ('1','2') THEN SPCAAMT
          WHEN SPCATDTP IN ('3', '4') THEN SPCBAMT
        END as amt
       from NDS_KER_AFFMSPTS
        where left(SPCCDATE,6)=left(s_date,6)
        and  SPCATDTP in ('1','2', '3', '4')  AND SPCARS1B <> '9'
    ) aa
  group by spccdate,cyc,busi_type ;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
      SET out_msg = 'insert rpt_gjyw011 step 4 date '||s_date;--
       return 1;
         -- GOTO ERROR_RETURN;--
      END IF;--
  END IF;   --
  --本年
  insert into  session.tmp_rpt_gjyw011
    select spccdate,cyc,busi_type,0,sum(value(amt,0.0))
    from (
      select
        spccdate,
        CASE
          WHEN SPCATDTP IN ('1','2') THEN SPCACCYC
          WHEN SPCATDTP IN ('3', '4') THEN SPCBCCYC
        END as cyc,
        CASE
          WHEN SPCATDTP IN ('1','2') THEN '结汇'
          WHEN SPCATDTP IN ('3', '4') THEN '售汇'
        END as busi_type,
        CASE
          WHEN SPCATDTP IN ('1','2') THEN SPCAAMT
          WHEN SPCATDTP IN ('3', '4') THEN SPCBAMT
        END as amt
       from NDS_KER_AFFMSPTS
        where left(SPCCDATE,4)=left(s_date,4)
              and spccdate<=s_date
        and  SPCATDTP in ('1','2', '3', '4')  AND SPCARS1B <> '9'
    ) aa
  group by spccdate,cyc,busi_type ;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
      SET out_msg = 'insert rpt_gjyw011 step 5 date '||s_date;--
       return 1;
         --  GOTO ERROR_RETURN;--
      END IF;--
  END IF;   --
    --  汇原币
    insert into rpt_gjyw011
    select s_date,cyc,busi_tp,sum(amt),sum(year_amt)
    from session.tmp_rpt_gjyw011
    group by cyc,busi_tp;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
      SET out_msg = 'insert rpt_gjyw011 step 6 date '||s_date;--
       return 1;
        --   GOTO ERROR_RETURN;--
      END IF;--
  END IF;   --
    --外币折美元
    insert into rpt_gjyw011
  select s_date,'U01',BUSI_TP,sum(amt),sum(year_amt) from (
    select busi_tp,
      fn_day_exchange_rate(dt,cyc,sum(value(amt,0.0))) as amt,
      fn_day_exchange_rate(dt,cyc,sum(value(year_amt,0.0))) as year_amt
      from session.tmp_rpt_gjyw011
        group by dt,cyc,busi_tp
  ) aa
  group by BUSI_TP;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
      SET out_msg = 'insert rpt_gjyw011 step 7 date '||s_date;--
            return 1;
           --     GOTO ERROR_RETURN;--
      END IF;--
  END IF;   --
  --处理资本金结汇
  delete from rpt_gjyw001 where dt=s_date;--
  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
      SET out_msg = 'insert rpt_gjyw001 step 8 date '||s_date;--
        return 1;
       -- GOTO ERROR_RETURN;--
      END IF;--
  END IF;   --
  insert into rpt_gjyw001
  (
   DT ,
   TRANS_DT ,
   PARTY_ID ,
   ENCD ,
   CU_NM  ,
   CYC  ,
   AMT  ,
   USD_AMT  ,
   NOTE ,
   FL ,
   BANK
  )
  select s_date,
          spccdate, --结汇日期
          party_id, --客户ID
          corporgcode, --企业代码
          acct_name,   --客户名称
          spcaccyc,    --币别
          spcaamt,     --结汇原币金额
          --get_usd_exchange_rate(s_date,spcaccyc,spcaamt),  --折美元金额
          round(fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,spcaccyc,spcaamt)),2),
          SPCARMRK,   --结汇摘要
          case when b.acct_st='D11002' then '是' else '否' end, --是否撤户标志
          lvl2_name
  from NDS_KER_AFFMSPTS  a ,v_dw_dep_acct  b,NDS_INT_pa_corp c,dim_org
  where SPCATDTP IN ('1','2')
    and left(SPCACSCS,3) in ('221','261')
    and spccdate like left(s_date,6) || '%'
    and a.spcaac32=b.acct_id
    and spcars1b<>'9'
    and b.org_id=lvl0_no
    and b.cs_no=c.maincorpno;--

  --外币折美元,先折成人民币再折成美元
  insert into rpt_gjyw001
  (
   DT ,
   TRANS_DT ,
   PARTY_ID ,
   ENCD ,
   CU_NM  ,
   CYC  ,
   AMT  ,
   USD_AMT  ,
   NOTE ,
   FL ,
   BANK
  )
  select DT ,
         TRANS_DT ,
         PARTY_ID ,
         ENCD ,
         CU_NM  ,
         'U01' AS CYC ,
         round(SUM(fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,AMT))),2) AS AMT ,
         round(SUM(fn_r01_to_usd(s_date,'R01',fn_day_to_rmb(s_date,cyc,USD_AMT))),2) AS USD_AMT ,
         NOTE ,
         FL ,
         BANK
  from rpt_gjyw001
  where dt = s_date
    and CYC NOT IN ('CNY','R01','T01','U01')
  GROUP BY DT ,
           TRANS_DT ,
           PARTY_ID ,
           ENCD ,
           CU_NM  ,
           NOTE ,
           FL ,
           BANK   ;--

  IF out_sqlcode <> 0 THEN
    IF out_sqlcode <> 100 THEN
      SET out_msg = 'insert rpt_gjyw001 step 10 date '||s_date;--
         return 1;
        -- GOTO ERROR_RETURN;--
      END IF;--
  END IF;   --

  set out_sqlcode=0;--

      COMMIT;--



  RETURN 0;--
error_return:
  ROLLBACK;--
  RETURN 1;--
END;


